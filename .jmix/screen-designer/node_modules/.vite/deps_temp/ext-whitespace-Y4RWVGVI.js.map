{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/ext-whitespace.js"],
  "sourcesContent": ["ace.define(\"ace/ext/whitespace\",[\"require\",\"exports\",\"module\",\"ace/lib/lang\"], function(require, exports, module){\"use strict\";\nvar lang = require(\"../lib/lang\");\nexports.$detectIndentation = function (lines, fallback) {\n    var stats = [];\n    var changes = [];\n    var tabIndents = 0;\n    var prevSpaces = 0;\n    var max = Math.min(lines.length, 1000);\n    for (var i = 0; i < max; i++) {\n        var line = lines[i];\n        if (!/^\\s*[^*+\\-\\s]/.test(line))\n            continue;\n        if (line[0] == \"\\t\") {\n            tabIndents++;\n            prevSpaces = -Number.MAX_VALUE;\n        }\n        else {\n            var spaces = line.match(/^ */)[0].length;\n            if (spaces && line[spaces] != \"\\t\") {\n                var diff = spaces - prevSpaces;\n                if (diff > 0 && !(prevSpaces % diff) && !(spaces % diff))\n                    changes[diff] = (changes[diff] || 0) + 1;\n                stats[spaces] = (stats[spaces] || 0) + 1;\n            }\n            prevSpaces = spaces;\n        }\n        while (i < max && line[line.length - 1] == \"\\\\\")\n            line = lines[i++];\n    }\n    function getScore(indent) {\n        var score = 0;\n        for (var i = indent; i < stats.length; i += indent)\n            score += stats[i] || 0;\n        return score;\n    }\n    var changesTotal = changes.reduce(function (a, b) { return a + b; }, 0);\n    var first = { score: 0, length: 0 };\n    var spaceIndents = 0;\n    for (var i = 1; i < 12; i++) {\n        var score = getScore(i);\n        if (i == 1) {\n            spaceIndents = score;\n            score = stats[1] ? 0.9 : 0.8;\n            if (!stats.length)\n                score = 0;\n        }\n        else\n            score /= spaceIndents;\n        if (changes[i])\n            score += changes[i] / changesTotal;\n        if (score > first.score)\n            first = { score: score, length: i };\n    }\n    if (first.score && first.score > 1.4)\n        var tabLength = first.length;\n    if (tabIndents > spaceIndents + 1) {\n        if (tabLength == 1 || spaceIndents < tabIndents / 4 || first.score < 1.8)\n            tabLength = undefined;\n        return { ch: \"\\t\", length: tabLength };\n    }\n    if (spaceIndents > tabIndents + 1)\n        return { ch: \" \", length: tabLength };\n};\nexports.detectIndentation = function (session) {\n    var lines = session.getLines(0, 1000);\n    var indent = exports.$detectIndentation(lines) || {};\n    if (indent.ch)\n        session.setUseSoftTabs(indent.ch == \" \");\n    if (indent.length)\n        session.setTabSize(indent.length);\n    return indent;\n};\nexports.trimTrailingSpace = function (session, options) {\n    var doc = session.getDocument();\n    var lines = doc.getAllLines();\n    var min = options && options.trimEmpty ? -1 : 0;\n    var cursors = [], ci = -1;\n    if (options && options.keepCursorPosition) {\n        if (session.selection.rangeCount) {\n            session.selection.rangeList.ranges.forEach(function (x, i, ranges) {\n                var next = ranges[i + 1];\n                if (next && next.cursor.row == x.cursor.row)\n                    return;\n                cursors.push(x.cursor);\n            });\n        }\n        else {\n            cursors.push(session.selection.getCursor());\n        }\n        ci = 0;\n    }\n    var cursorRow = cursors[ci] && cursors[ci].row;\n    for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        var index = line.search(/\\s+$/);\n        if (i == cursorRow) {\n            if (index < cursors[ci].column && index > min)\n                index = cursors[ci].column;\n            ci++;\n            cursorRow = cursors[ci] ? cursors[ci].row : -1;\n        }\n        if (index > min)\n            doc.removeInLine(i, index, line.length);\n    }\n};\nexports.convertIndentation = function (session, ch, len) {\n    var oldCh = session.getTabString()[0];\n    var oldLen = session.getTabSize();\n    if (!len)\n        len = oldLen;\n    if (!ch)\n        ch = oldCh;\n    var tab = ch == \"\\t\" ? ch : lang.stringRepeat(ch, len);\n    var doc = session.doc;\n    var lines = doc.getAllLines();\n    var cache = {};\n    var spaceCache = {};\n    for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        var match = line.match(/^\\s*/)[0];\n        if (match) {\n            var w = session.$getStringScreenWidth(match)[0];\n            var tabCount = Math.floor(w / oldLen);\n            var reminder = w % oldLen;\n            var toInsert = cache[tabCount] || (cache[tabCount] = lang.stringRepeat(tab, tabCount));\n            toInsert += spaceCache[reminder] || (spaceCache[reminder] = lang.stringRepeat(\" \", reminder));\n            if (toInsert != match) {\n                doc.removeInLine(i, 0, match.length);\n                doc.insertInLine({ row: i, column: 0 }, toInsert);\n            }\n        }\n    }\n    session.setTabSize(len);\n    session.setUseSoftTabs(ch == \" \");\n};\nexports.$parseStringArg = function (text) {\n    var indent = {};\n    if (/t/.test(text))\n        indent.ch = \"\\t\";\n    else if (/s/.test(text))\n        indent.ch = \" \";\n    var m = text.match(/\\d+/);\n    if (m)\n        indent.length = parseInt(m[0], 10);\n    return indent;\n};\nexports.$parseArg = function (arg) {\n    if (!arg)\n        return {};\n    if (typeof arg == \"string\")\n        return exports.$parseStringArg(arg);\n    if (typeof arg.text == \"string\")\n        return exports.$parseStringArg(arg.text);\n    return arg;\n};\nexports.commands = [{\n        name: \"detectIndentation\",\n        description: \"Detect indentation from content\",\n        exec: function (editor) {\n            exports.detectIndentation(editor.session);\n        }\n    }, {\n        name: \"trimTrailingSpace\",\n        description: \"Trim trailing whitespace\",\n        exec: function (editor, args) {\n            exports.trimTrailingSpace(editor.session, args);\n        }\n    }, {\n        name: \"convertIndentation\",\n        description: \"Convert indentation to ...\",\n        exec: function (editor, arg) {\n            var indent = exports.$parseArg(arg);\n            exports.convertIndentation(editor.session, indent.ch, indent.length);\n        }\n    }, {\n        name: \"setIndentation\",\n        description: \"Set indentation\",\n        exec: function (editor, arg) {\n            var indent = exports.$parseArg(arg);\n            indent.length && editor.session.setTabSize(indent.length);\n            indent.ch && editor.session.setUseSoftTabs(indent.ch == \" \");\n        }\n    }];\n\n});                (function() {\n                    ace.require([\"ace/ext/whitespace\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module", "score", "i"]
}
