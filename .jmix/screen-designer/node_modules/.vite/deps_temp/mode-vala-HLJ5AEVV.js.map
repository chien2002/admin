{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-vala.js"],
  "sourcesContent": ["ace.define(\"ace/mode/vala_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/* This file was autogenerated from https://raw.githubusercontent.com/technosophos/Vala-TMBundle/master/Syntaxes/Vala.tmLanguage (uuid: ) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar ValaHighlightRules = function () {\n    this.$rules = { start: [{ token: ['meta.using.vala',\n                    'keyword.other.using.vala',\n                    'meta.using.vala',\n                    'storage.modifier.using.vala',\n                    'meta.using.vala',\n                    'punctuation.terminator.vala'],\n                regex: '^(\\\\s*)(using)\\\\b(?:(\\\\s*)([^ ;$]+)(\\\\s*)((?:;)?))?' },\n            { include: '#code' }],\n        '#all-types': [{ include: '#primitive-arrays' },\n            { include: '#primitive-types' },\n            { include: '#object-types' }],\n        '#annotations': [{ token: ['storage.type.annotation.vala',\n                    'punctuation.definition.annotation-arguments.begin.vala'],\n                regex: '(@[^ (]+)(\\\\()',\n                push: [{ token: 'punctuation.definition.annotation-arguments.end.vala',\n                        regex: '\\\\)',\n                        next: 'pop' },\n                    { token: ['constant.other.key.vala',\n                            'text',\n                            'keyword.operator.assignment.vala'],\n                        regex: '(\\\\w*)(\\\\s*)(=)' },\n                    { include: '#code' },\n                    { token: 'punctuation.seperator.property.vala', regex: ',' },\n                    { defaultToken: 'meta.declaration.annotation.vala' }] },\n            { token: 'storage.type.annotation.vala', regex: '@\\\\w*' }],\n        '#anonymous-classes-and-new': [{ token: 'keyword.control.new.vala',\n                regex: '\\\\bnew\\\\b',\n                push_disabled: [{ token: 'text',\n                        regex: '(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',\n                        TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                        originalRegex: '(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',\n                        next: 'pop' },\n                    { token: ['storage.type.vala', 'text'],\n                        regex: '(\\\\w+)(\\\\s*)(?=\\\\[)',\n                        push: [{ token: 'text', regex: '}|(?=;|\\\\))', next: 'pop' },\n                            { token: 'text',\n                                regex: '\\\\[',\n                                push: [{ token: 'text', regex: '\\\\]', next: 'pop' },\n                                    { include: '#code' }] },\n                            { token: 'text',\n                                regex: '{',\n                                push: [{ token: 'text', regex: '(?=})', next: 'pop' },\n                                    { include: '#code' }] }] },\n                    { token: 'text',\n                        regex: '(?=\\\\w.*\\\\()',\n                        push: [{ token: 'text',\n                                regex: '(?<=\\\\))',\n                                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                                originalRegex: '(?<=\\\\))',\n                                next: 'pop' },\n                            { include: '#object-types' },\n                            { token: 'text',\n                                regex: '\\\\(',\n                                push: [{ token: 'text', regex: '\\\\)', next: 'pop' },\n                                    { include: '#code' }] }] },\n                    { token: 'meta.inner-class.vala',\n                        regex: '{',\n                        push: [{ token: 'meta.inner-class.vala', regex: '}', next: 'pop' },\n                            { include: '#class-body' },\n                            { defaultToken: 'meta.inner-class.vala' }] }] }],\n        '#assertions': [{ token: ['keyword.control.assert.vala',\n                    'meta.declaration.assertion.vala'],\n                regex: '\\\\b(assert|requires|ensures)(\\\\s)',\n                push: [{ token: 'meta.declaration.assertion.vala',\n                        regex: '$',\n                        next: 'pop' },\n                    { token: 'keyword.operator.assert.expression-seperator.vala',\n                        regex: ':' },\n                    { include: '#code' },\n                    { defaultToken: 'meta.declaration.assertion.vala' }] }],\n        '#class': [{ token: 'meta.class.vala',\n                regex: '(?=\\\\w?[\\\\w\\\\s]*(?:class|(?:@)?interface|enum|struct|namespace)\\\\s+\\\\w+)',\n                push: [{ token: 'paren.vala',\n                        regex: '}',\n                        next: 'pop' },\n                    { include: '#storage-modifiers' },\n                    { include: '#comments' },\n                    { token: ['storage.modifier.vala',\n                            'meta.class.identifier.vala',\n                            'entity.name.type.class.vala'],\n                        regex: '(class|(?:@)?interface|enum|struct|namespace)(\\\\s+)([\\\\w\\\\.]+)' },\n                    { token: 'storage.modifier.extends.vala',\n                        regex: ':',\n                        push: [{ token: 'meta.definition.class.inherited.classes.vala',\n                                regex: '(?={|,)',\n                                next: 'pop' },\n                            { include: '#object-types-inherited' },\n                            { include: '#comments' },\n                            { defaultToken: 'meta.definition.class.inherited.classes.vala' }] },\n                    { token: ['storage.modifier.implements.vala',\n                            'meta.definition.class.implemented.interfaces.vala'],\n                        regex: '(,)(\\\\s)',\n                        push: [{ token: 'meta.definition.class.implemented.interfaces.vala',\n                                regex: '(?=\\\\{)',\n                                next: 'pop' },\n                            { include: '#object-types-inherited' },\n                            { include: '#comments' },\n                            { defaultToken: 'meta.definition.class.implemented.interfaces.vala' }] },\n                    { token: 'paren.vala',\n                        regex: '{',\n                        push: [{ token: 'paren.vala', regex: '(?=})', next: 'pop' },\n                            { include: '#class-body' },\n                            { defaultToken: 'meta.class.body.vala' }] },\n                    { defaultToken: 'meta.class.vala' }],\n                comment: 'attempting to put namespace in here.' }],\n        '#class-body': [{ include: '#comments' },\n            { include: '#class' },\n            { include: '#enums' },\n            { include: '#methods' },\n            { include: '#annotations' },\n            { include: '#storage-modifiers' },\n            { include: '#code' }],\n        '#code': [{ include: '#comments' },\n            { include: '#class' },\n            { token: 'text',\n                regex: '{',\n                push: [{ token: 'text', regex: '}', next: 'pop' },\n                    { include: '#code' }] },\n            { include: '#assertions' },\n            { include: '#parens' },\n            { include: '#constants-and-special-vars' },\n            { include: '#anonymous-classes-and-new' },\n            { include: '#keywords' },\n            { include: '#storage-modifiers' },\n            { include: '#strings' },\n            { include: '#all-types' }],\n        '#comments': [{ token: 'punctuation.definition.comment.vala',\n                regex: '/\\\\*\\\\*/' },\n            { include: 'text.html.javadoc' },\n            { include: '#comments-inline' }],\n        '#comments-inline': [{ token: 'punctuation.definition.comment.vala',\n                regex: '/\\\\*',\n                push: [{ token: 'punctuation.definition.comment.vala',\n                        regex: '\\\\*/',\n                        next: 'pop' },\n                    { defaultToken: 'comment.block.vala' }] },\n            { token: ['text',\n                    'punctuation.definition.comment.vala',\n                    'comment.line.double-slash.vala'],\n                regex: '(\\\\s*)(//)(.*$)' }],\n        '#constants-and-special-vars': [{ token: 'constant.language.vala',\n                regex: '\\\\b(?:true|false|null)\\\\b' },\n            { token: 'variable.language.vala',\n                regex: '\\\\b(?:this|base)\\\\b' },\n            { token: 'constant.numeric.vala',\n                regex: '\\\\b(?:0(?:x|X)[0-9a-fA-F]*|(?:[0-9]+\\\\.?[0-9]*|\\\\.[0-9]+)(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:[LlFfUuDd]|UL|ul)?\\\\b' },\n            { token: ['keyword.operator.dereference.vala', 'constant.other.vala'],\n                regex: '((?:\\\\.)?)\\\\b([A-Z][A-Z0-9_]+)(?!<|\\\\.class|\\\\s*\\\\w+\\\\s*=)\\\\b' }],\n        '#enums': [{ token: 'text',\n                regex: '^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',\n                push: [{ token: 'text', regex: '(?=;|})', next: 'pop' },\n                    { token: 'constant.other.enum.vala',\n                        regex: '\\\\w+',\n                        push: [{ token: 'meta.enum.vala', regex: '(?=,|;|})', next: 'pop' },\n                            { include: '#parens' },\n                            { token: 'text',\n                                regex: '{',\n                                push: [{ token: 'text', regex: '}', next: 'pop' },\n                                    { include: '#class-body' }] },\n                            { defaultToken: 'meta.enum.vala' }] }] }],\n        '#keywords': [{ token: 'keyword.control.catch-exception.vala',\n                regex: '\\\\b(?:try|catch|finally|throw)\\\\b' },\n            { token: 'keyword.control.vala', regex: '\\\\?|:|\\\\?\\\\?' },\n            { token: 'keyword.control.vala',\n                regex: '\\\\b(?:return|break|case|continue|default|do|while|for|foreach|switch|if|else|in|yield|get|set|value)\\\\b' },\n            { token: 'keyword.operator.vala',\n                regex: '\\\\b(?:typeof|is|as)\\\\b' },\n            { token: 'keyword.operator.comparison.vala',\n                regex: '==|!=|<=|>=|<>|<|>' },\n            { token: 'keyword.operator.assignment.vala', regex: '=' },\n            { token: 'keyword.operator.increment-decrement.vala',\n                regex: '\\\\-\\\\-|\\\\+\\\\+' },\n            { token: 'keyword.operator.arithmetic.vala',\n                regex: '\\\\-|\\\\+|\\\\*|\\\\/|%' },\n            { token: 'keyword.operator.logical.vala', regex: '!|&&|\\\\|\\\\|' },\n            { token: 'keyword.operator.dereference.vala',\n                regex: '\\\\.(?=\\\\S)',\n                originalRegex: '(?<=\\\\S)\\\\.(?=\\\\S)' },\n            { token: 'punctuation.terminator.vala', regex: ';' },\n            { token: 'keyword.operator.ownership', regex: 'owned|unowned' }],\n        '#methods': [{ token: 'meta.method.vala',\n                regex: '(?!new)(?=\\\\w.*\\\\s+)(?=[^=]+\\\\()',\n                push: [{ token: 'paren.vala', regex: '}|(?=;)', next: 'pop' },\n                    { include: '#storage-modifiers' },\n                    { token: ['entity.name.function.vala', 'meta.method.identifier.vala'],\n                        regex: '([\\\\~\\\\w\\\\.]+)(\\\\s*\\\\()',\n                        push: [{ token: 'meta.method.identifier.vala',\n                                regex: '\\\\)',\n                                next: 'pop' },\n                            { include: '#parameters' },\n                            { defaultToken: 'meta.method.identifier.vala' }] },\n                    { token: 'meta.method.return-type.vala',\n                        regex: '(?=\\\\w.*\\\\s+\\\\w+\\\\s*\\\\()',\n                        push: [{ token: 'meta.method.return-type.vala',\n                                regex: '(?=\\\\w+\\\\s*\\\\()',\n                                next: 'pop' },\n                            { include: '#all-types' },\n                            { defaultToken: 'meta.method.return-type.vala' }] },\n                    { include: '#throws' },\n                    { token: 'paren.vala',\n                        regex: '{',\n                        push: [{ token: 'paren.vala', regex: '(?=})', next: 'pop' },\n                            { include: '#code' },\n                            { defaultToken: 'meta.method.body.vala' }] },\n                    { defaultToken: 'meta.method.vala' }] }],\n        '#namespace': [{ token: 'text',\n                regex: '^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',\n                push: [{ token: 'text', regex: '(?=;|})', next: 'pop' },\n                    { token: 'constant.other.namespace.vala',\n                        regex: '\\\\w+',\n                        push: [{ token: 'meta.namespace.vala', regex: '(?=,|;|})', next: 'pop' },\n                            { include: '#parens' },\n                            { token: 'text',\n                                regex: '{',\n                                push: [{ token: 'text', regex: '}', next: 'pop' },\n                                    { include: '#code' }] },\n                            { defaultToken: 'meta.namespace.vala' }] }],\n                comment: 'This is not quite right. See the class grammar right now' }],\n        '#object-types': [{ token: 'storage.type.generic.vala',\n                regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',\n                push: [{ token: 'storage.type.generic.vala',\n                        regex: '>|[^\\\\w\\\\s,\\\\?<\\\\[()\\\\]]',\n                        TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                        originalRegex: '>|[^\\\\w\\\\s,\\\\?<\\\\[(?:[,]+)\\\\]]',\n                        next: 'pop' },\n                    { include: '#object-types' },\n                    { token: 'storage.type.generic.vala',\n                        regex: '<',\n                        push: [{ token: 'storage.type.generic.vala',\n                                regex: '>|[^\\\\w\\\\s,\\\\[\\\\]<]',\n                                next: 'pop' },\n                            { defaultToken: 'storage.type.generic.vala' }],\n                        comment: 'This is just to support <>\\'s with no actual type prefix' },\n                    { defaultToken: 'storage.type.generic.vala' }] },\n            { token: 'storage.type.object.array.vala',\n                regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*(?=\\\\[)',\n                push: [{ token: 'storage.type.object.array.vala',\n                        regex: '(?=[^\\\\]\\\\s])',\n                        next: 'pop' },\n                    { token: 'text',\n                        regex: '\\\\[',\n                        push: [{ token: 'text', regex: '\\\\]', next: 'pop' },\n                            { include: '#code' }] },\n                    { defaultToken: 'storage.type.object.array.vala' }] },\n            { token: ['storage.type.vala',\n                    'keyword.operator.dereference.vala',\n                    'storage.type.vala'],\n                regex: '\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*\\\\b)' }],\n        '#object-types-inherited': [{ token: 'entity.other.inherited-class.vala',\n                regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',\n                push: [{ token: 'entity.other.inherited-class.vala',\n                        regex: '>|[^\\\\w\\\\s,<]',\n                        next: 'pop' },\n                    { include: '#object-types' },\n                    { token: 'storage.type.generic.vala',\n                        regex: '<',\n                        push: [{ token: 'storage.type.generic.vala',\n                                regex: '>|[^\\\\w\\\\s,<]',\n                                next: 'pop' },\n                            { defaultToken: 'storage.type.generic.vala' }],\n                        comment: 'This is just to support <>\\'s with no actual type prefix' },\n                    { defaultToken: 'entity.other.inherited-class.vala' }] },\n            { token: ['entity.other.inherited-class.vala',\n                    'keyword.operator.dereference.vala',\n                    'entity.other.inherited-class.vala'],\n                regex: '\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*)' }],\n        '#parameters': [{ token: 'storage.modifier.vala', regex: 'final' },\n            { include: '#primitive-arrays' },\n            { include: '#primitive-types' },\n            { include: '#object-types' },\n            { token: 'variable.parameter.vala', regex: '\\\\w+' }],\n        '#parens': [{ token: 'text',\n                regex: '\\\\(',\n                push: [{ token: 'text', regex: '\\\\)', next: 'pop' },\n                    { include: '#code' }] }],\n        '#primitive-arrays': [{ token: 'storage.type.primitive.array.vala',\n                regex: '\\\\b(?:bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|int8|int16|int32|int64|uint8|uint16|uint32|uint64)(?:\\\\[\\\\])*\\\\b' }],\n        '#primitive-types': [{ token: 'storage.type.primitive.vala',\n                regex: '\\\\b(?:var|bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64)\\\\b',\n                comment: 'var is not really a primitive, but acts like one in most cases' }],\n        '#storage-modifiers': [{ token: 'storage.modifier.vala',\n                regex: '\\\\b(?:public|private|protected|internal|static|final|sealed|virtual|override|abstract|readonly|volatile|dynamic|async|unsafe|out|ref|weak|owned|unowned|const)\\\\b',\n                comment: 'Not sure about unsafe and readonly' }],\n        '#strings': [{ token: 'punctuation.definition.string.begin.vala',\n                regex: '@\"',\n                push: [{ token: 'punctuation.definition.string.end.vala',\n                        regex: '\"',\n                        next: 'pop' },\n                    { token: 'constant.character.escape.vala',\n                        regex: '\\\\\\\\.|%[\\\\w\\\\.\\\\-]+|\\\\$(?:\\\\w+|\\\\([\\\\w\\\\s\\\\+\\\\-\\\\*\\\\/]+\\\\))' },\n                    { defaultToken: 'string.quoted.interpolated.vala' }] },\n            { token: 'punctuation.definition.string.begin.vala',\n                regex: '\"',\n                push: [{ token: 'punctuation.definition.string.end.vala',\n                        regex: '\"',\n                        next: 'pop' },\n                    { token: 'constant.character.escape.vala', regex: '\\\\\\\\.' },\n                    { token: 'constant.character.escape.vala',\n                        regex: '%[\\\\w\\\\.\\\\-]+' },\n                    { defaultToken: 'string.quoted.double.vala' }] },\n            { token: 'punctuation.definition.string.begin.vala',\n                regex: '\\'',\n                push: [{ token: 'punctuation.definition.string.end.vala',\n                        regex: '\\'',\n                        next: 'pop' },\n                    { token: 'constant.character.escape.vala', regex: '\\\\\\\\.' },\n                    { defaultToken: 'string.quoted.single.vala' }] },\n            { token: 'punctuation.definition.string.begin.vala',\n                regex: '\"\"\"',\n                push: [{ token: 'punctuation.definition.string.end.vala',\n                        regex: '\"\"\"',\n                        next: 'pop' },\n                    { token: 'constant.character.escape.vala',\n                        regex: '%[\\\\w\\\\.\\\\-]+' },\n                    { defaultToken: 'string.quoted.triple.vala' }] }],\n        '#throws': [{ token: 'storage.modifier.vala',\n                regex: 'throws',\n                push: [{ token: 'meta.throwables.vala', regex: '(?={|;)', next: 'pop' },\n                    { include: '#object-types' },\n                    { defaultToken: 'meta.throwables.vala' }] }],\n        '#values': [{ include: '#strings' },\n            { include: '#object-types' },\n            { include: '#constants-and-special-vars' }] };\n    this.normalizeRules();\n};\nValaHighlightRules.metaData = {\n    comment: 'Based heavily on the Java bundle\\'s language syntax. TODO:\\n* Closures\\n* Delegates\\n* Properties: Better support for properties.\\n* Annotations\\n* Error domains\\n* Named arguments\\n* Array slicing, negative indexes, multidimensional\\n* construct blocks\\n* lock blocks?\\n* regex literals\\n* DocBlock syntax highlighting. (Currently importing javadoc)\\n* Folding rule for comments.\\n',\n    fileTypes: ['vala'],\n    foldingStartMarker: '(\\\\{\\\\s*(//.*)?$|^\\\\s*// \\\\{\\\\{\\\\{)',\n    foldingStopMarker: '^\\\\s*(\\\\}|// \\\\}\\\\}\\\\}$)',\n    name: 'Vala',\n    scopeName: 'source.vala'\n};\noop.inherits(ValaHighlightRules, TextHighlightRules);\nexports.ValaHighlightRules = ValaHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/vala\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/tokenizer\",\"ace/mode/vala_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\",\"ace/mode/matching_brace_outdent\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar Tokenizer = require(\"../tokenizer\").Tokenizer;\nvar ValaHighlightRules = require(\"./vala_highlight_rules\").ValaHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Mode = function () {\n    this.HighlightRules = ValaHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\" || state == \"no_regex\") {\n            var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        else if (state == \"doc-start\") {\n            if (endState == \"start\" || endState == \"no_regex\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"* \";\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/vala\";\n    this.snippetFileId = \"ace/snippets/vala\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/vala\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
