{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-lua.js"],
  "sourcesContent": ["ace.define(\"ace/mode/lua_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar LuaHighlightRules = function () {\n    var keywords = (\"break|do|else|elseif|end|for|function|if|in|local|repeat|\" +\n        \"return|then|until|while|or|and|not\");\n    var builtinConstants = (\"true|false|nil|_G|_VERSION\");\n    var functions = (\n    \"string|xpcall|package|tostring|print|os|unpack|require|\" +\n        \"getfenv|setmetatable|next|assert|tonumber|io|rawequal|\" +\n        \"collectgarbage|getmetatable|module|rawset|math|debug|\" +\n        \"pcall|table|newproxy|type|coroutine|_G|select|gcinfo|\" +\n        \"pairs|rawget|loadstring|ipairs|_VERSION|dofile|setfenv|\" +\n        \"load|error|loadfile|\" +\n        \"sub|upper|len|gfind|rep|find|match|char|dump|gmatch|\" +\n        \"reverse|byte|format|gsub|lower|preload|loadlib|loaded|\" +\n        \"loaders|cpath|config|path|seeall|exit|setlocale|date|\" +\n        \"getenv|difftime|remove|time|clock|tmpname|rename|execute|\" +\n        \"lines|write|close|flush|open|output|type|read|stderr|\" +\n        \"stdin|input|stdout|popen|tmpfile|log|max|acos|huge|\" +\n        \"ldexp|pi|cos|tanh|pow|deg|tan|cosh|sinh|random|randomseed|\" +\n        \"frexp|ceil|floor|rad|abs|sqrt|modf|asin|min|mod|fmod|log10|\" +\n        \"atan2|exp|sin|atan|getupvalue|debug|sethook|getmetatable|\" +\n        \"gethook|setmetatable|setlocal|traceback|setfenv|getinfo|\" +\n        \"setupvalue|getlocal|getregistry|getfenv|setn|insert|getn|\" +\n        \"foreachi|maxn|foreach|concat|sort|remove|resume|yield|\" +\n        \"status|wrap|create|running|\" +\n        \"__add|__sub|__mod|__unm|__concat|__lt|__index|__call|__gc|__metatable|\" +\n        \"__mul|__div|__pow|__len|__eq|__le|__newindex|__tostring|__mode|__tonumber\");\n    var stdLibaries = (\"string|package|os|io|math|debug|table|coroutine\");\n    var deprecatedIn5152 = (\"setn|foreach|foreachi|gcinfo|log10|maxn\");\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"support.function\": functions,\n        \"keyword.deprecated\": deprecatedIn5152,\n        \"constant.library\": stdLibaries,\n        \"constant.language\": builtinConstants,\n        \"variable.language\": \"self\"\n    }, \"identifier\");\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + hexInteger + \")\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var floatNumber = \"(?:\" + pointFloat + \")\";\n    this.$rules = {\n        \"start\": [{\n                stateName: \"bracketedComment\",\n                onMatch: function (value, currentState, stack) {\n                    stack.unshift(this.next, value.length - 2, currentState);\n                    return \"comment\";\n                },\n                regex: /\\-\\-\\[=*\\[/,\n                next: [\n                    {\n                        onMatch: function (value, currentState, stack) {\n                            if (value.length == stack[1]) {\n                                stack.shift();\n                                stack.shift();\n                                this.next = stack.shift();\n                            }\n                            else {\n                                this.next = \"\";\n                            }\n                            return \"comment\";\n                        },\n                        regex: /\\]=*\\]/,\n                        next: \"start\"\n                    }, {\n                        defaultToken: \"comment\"\n                    }\n                ]\n            },\n            {\n                token: \"comment\",\n                regex: \"\\\\-\\\\-.*$\"\n            },\n            {\n                stateName: \"bracketedString\",\n                onMatch: function (value, currentState, stack) {\n                    stack.unshift(this.next, value.length, currentState);\n                    return \"string.start\";\n                },\n                regex: /\\[=*\\[/,\n                next: [\n                    {\n                        onMatch: function (value, currentState, stack) {\n                            if (value.length == stack[1]) {\n                                stack.shift();\n                                stack.shift();\n                                this.next = stack.shift();\n                            }\n                            else {\n                                this.next = \"\";\n                            }\n                            return \"string.end\";\n                        },\n                        regex: /\\]=*\\]/,\n                        next: \"start\"\n                    }, {\n                        defaultToken: \"string\"\n                    }\n                ]\n            },\n            {\n                token: \"string\",\n                regex: '\"(?:[^\\\\\\\\]|\\\\\\\\.)*?\"'\n            }, {\n                token: \"string\",\n                regex: \"'(?:[^\\\\\\\\]|\\\\\\\\.)*?'\"\n            }, {\n                token: \"constant.numeric\",\n                regex: floatNumber\n            }, {\n                token: \"constant.numeric\",\n                regex: integer + \"\\\\b\"\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token: \"keyword.operator\",\n                regex: \"\\\\+|\\\\-|\\\\*|\\\\/|%|\\\\#|\\\\^|~|<|>|<=|=>|==|~=|=|\\\\:|\\\\.\\\\.\\\\.|\\\\.\\\\.\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[\\\\[\\\\(\\\\{]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\]\\\\)\\\\}]\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+|\\\\w+\"\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(LuaHighlightRules, TextHighlightRules);\nexports.LuaHighlightRules = LuaHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/lua\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /\\b(function|then|do|repeat)\\b|{\\s*$|(\\[=*\\[)/;\n    this.foldingStopMarker = /\\bend\\b|^\\s*}|\\]=*\\]/;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var isStart = this.foldingStartMarker.test(line);\n        var isEnd = this.foldingStopMarker.test(line);\n        if (isStart && !isEnd) {\n            var match = line.match(this.foldingStartMarker);\n            if (match[1] == \"then\" && /\\belseif\\b/.test(line))\n                return;\n            if (match[1]) {\n                if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\n                    return \"start\";\n            }\n            else if (match[2]) {\n                var type = session.bgTokenizer.getState(row) || \"\";\n                if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\")\n                    return \"start\";\n            }\n            else {\n                return \"start\";\n            }\n        }\n        if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd)\n            return \"\";\n        var match = line.match(this.foldingStopMarker);\n        if (match[0] === \"end\") {\n            if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\n                return \"end\";\n        }\n        else if (match[0][0] === \"]\") {\n            var type = session.bgTokenizer.getState(row - 1) || \"\";\n            if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\")\n                return \"end\";\n        }\n        else\n            return \"end\";\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.doc.getLine(row);\n        var match = this.foldingStartMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.luaBlock(session, row, match.index + 1);\n            if (match[2])\n                return session.getCommentFoldRange(row, match.index + 1);\n            return this.openingBracketBlock(session, \"{\", row, match.index);\n        }\n        var match = this.foldingStopMarker.exec(line);\n        if (match) {\n            if (match[0] === \"end\") {\n                if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\n                    return this.luaBlock(session, row, match.index + 1);\n            }\n            if (match[0][0] === \"]\")\n                return session.getCommentFoldRange(row, match.index + 1);\n            return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n        }\n    };\n    this.luaBlock = function (session, row, column, tokenRange) {\n        var stream = new TokenIterator(session, row, column);\n        var indentKeywords = {\n            \"function\": 1,\n            \"do\": 1,\n            \"then\": 1,\n            \"elseif\": -1,\n            \"end\": -1,\n            \"repeat\": 1,\n            \"until\": -1\n        };\n        var token = stream.getCurrentToken();\n        if (!token || token.type != \"keyword\")\n            return;\n        var val = token.value;\n        var stack = [val];\n        var dir = indentKeywords[val];\n        if (!dir)\n            return;\n        var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n        var startRow = row;\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while (token = stream.step()) {\n            if (token.type !== \"keyword\")\n                continue;\n            var level = dir * indentKeywords[token.value];\n            if (level > 0) {\n                stack.unshift(token.value);\n            }\n            else if (level <= 0) {\n                stack.shift();\n                if (!stack.length && token.value != \"elseif\")\n                    break;\n                if (level === 0)\n                    stack.unshift(token.value);\n            }\n        }\n        if (!token)\n            return null;\n        if (tokenRange)\n            return stream.getCurrentTokenRange();\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1)\n            return new Range(row, session.getLine(row).length, startRow, startColumn);\n        else\n            return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/lua\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/lua_highlight_rules\",\"ace/mode/folding/lua\",\"ace/range\",\"ace/worker/worker_client\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar LuaHighlightRules = require(\"./lua_highlight_rules\").LuaHighlightRules;\nvar LuaFoldMode = require(\"./folding/lua\").FoldMode;\nvar Range = require(\"../range\").Range;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar Mode = function () {\n    this.HighlightRules = LuaHighlightRules;\n    this.foldingRules = new LuaFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = { start: \"--[[\", end: \"--]]\" };\n    var indentKeywords = {\n        \"function\": 1,\n        \"then\": 1,\n        \"do\": 1,\n        \"else\": 1,\n        \"elseif\": 1,\n        \"repeat\": 1,\n        \"end\": -1,\n        \"until\": -1\n    };\n    var outdentKeywords = [\n        \"else\",\n        \"elseif\",\n        \"end\",\n        \"until\"\n    ];\n    function getNetIndentLevel(tokens) {\n        var level = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (token.type == \"keyword\") {\n                if (token.value in indentKeywords) {\n                    level += indentKeywords[token.value];\n                }\n            }\n            else if (token.type == \"paren.lparen\") {\n                level += token.value.length;\n            }\n            else if (token.type == \"paren.rparen\") {\n                level -= token.value.length;\n            }\n        }\n        if (level < 0) {\n            return -1;\n        }\n        else if (level > 0) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var level = 0;\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        if (state == \"start\") {\n            level = getNetIndentLevel(tokens);\n        }\n        if (level > 0) {\n            return indent + tab;\n        }\n        else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n            if (!this.checkOutdent(state, line, \"\\n\")) {\n                return indent.substr(0, indent.length - tab.length);\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\")\n            return false;\n        if (line.match(/^\\s*[\\)\\}\\]]$/))\n            return true;\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n        if (!tokens || !tokens.length)\n            return false;\n        return (tokens[0].type == \"keyword\" && outdentKeywords.indexOf(tokens[0].value) != -1);\n    };\n    this.getMatching = function (session, row, column) {\n        if (row == undefined) {\n            var pos = session.selection.lead;\n            column = pos.column;\n            row = pos.row;\n        }\n        var startToken = session.getTokenAt(row, column);\n        if (startToken && startToken.value in indentKeywords)\n            return this.foldingRules.luaBlock(session, row, column, true);\n    };\n    this.autoOutdent = function (state, session, row) {\n        var line = session.getLine(row);\n        var column = line.match(/^\\s*/)[0].length;\n        if (!column || !row)\n            return;\n        var startRange = this.getMatching(session, row, column + 1);\n        if (!startRange || startRange.start.row == row)\n            return;\n        var indent = this.$getIndent(session.getLine(startRange.start.row));\n        if (indent.length != column) {\n            session.replace(new Range(row, 0, row, column), indent);\n            session.outdentRows(new Range(row + 1, 0, row + 1, 0));\n        }\n    };\n    this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/lua_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"annotate\", function (e) {\n            session.setAnnotations(e.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/lua\";\n    this.snippetFileId = \"ace/snippets/lua\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/lua\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
