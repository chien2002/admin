{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-lisp.js"],
  "sourcesContent": ["ace.define(\"ace/mode/lisp_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY Lisp.tmlanguage (UUID: 00D451C9-6B1D-11D9-8DFA-000D93589AF6) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar LispHighlightRules = function () {\n    var keywordControl = \"case|do|let|loop|if|else|when\";\n    var keywordOperator = \"eq|neq|and|or\";\n    var constantLanguage = \"null|nil\";\n    var supportFunctions = \"cons|car|cdr|cond|lambda|format|setq|setf|quote|eval|append|list|listp|memberp|t|load|progn\";\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control\": keywordControl,\n        \"keyword.operator\": keywordOperator,\n        \"constant.language\": constantLanguage,\n        \"support.function\": supportFunctions\n    }, \"identifier\", true);\n    this.$rules =\n        {\n            \"start\": [\n                {\n                    token: \"comment\",\n                    regex: \";.*$\"\n                },\n                {\n                    token: [\"storage.type.function-type.lisp\", \"text\", \"entity.name.function.lisp\"],\n                    regex: \"(?:\\\\b(?:(defun|defmethod|defmacro))\\\\b)(\\\\s+)((?:\\\\w|\\\\-|\\\\!|\\\\?)*)\"\n                },\n                {\n                    token: [\"punctuation.definition.constant.character.lisp\", \"constant.character.lisp\"],\n                    regex: \"(#)((?:\\\\w|[\\\\\\\\+-=<>'\\\"&#])+)\"\n                },\n                {\n                    token: [\"punctuation.definition.variable.lisp\", \"variable.other.global.lisp\", \"punctuation.definition.variable.lisp\"],\n                    regex: \"(\\\\*)(\\\\S*)(\\\\*)\"\n                },\n                {\n                    token: \"constant.numeric\",\n                    regex: \"0[xX][0-9a-fA-F]+(?:L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n                },\n                {\n                    token: \"constant.numeric\",\n                    regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?(?:L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n                },\n                {\n                    token: keywordMapper,\n                    regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n                },\n                {\n                    token: \"string\",\n                    regex: '\"(?=.)',\n                    next: \"qqstring\"\n                }\n            ],\n            \"qqstring\": [\n                {\n                    token: \"constant.character.escape.lisp\",\n                    regex: \"\\\\\\\\.\"\n                },\n                {\n                    token: \"string\",\n                    regex: '[^\"\\\\\\\\]+'\n                }, {\n                    token: \"string\",\n                    regex: \"\\\\\\\\$\",\n                    next: \"qqstring\"\n                }, {\n                    token: \"string\",\n                    regex: '\"|$',\n                    next: \"start\"\n                }\n            ]\n        };\n};\noop.inherits(LispHighlightRules, TextHighlightRules);\nexports.LispHighlightRules = LispHighlightRules;\n\n});\n\nace.define(\"ace/mode/lisp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/lisp_highlight_rules\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar LispHighlightRules = require(\"./lisp_highlight_rules\").LispHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = LispHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \";\";\n    this.$id = \"ace/mode/lisp\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/lisp\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": ";;;;;AAAA;AAAA;AAAA,QAAI,OAAO,iCAAgC,CAAC,WAAU,WAAU,UAAS,eAAc,+BAA+B,GAAG,SAASA,UAASC,UAASC,SAAO;AAE3J;AACA,UAAI,MAAMF,SAAQ,YAAY;AAC9B,UAAI,qBAAqBA,SAAQ,wBAAwB,EAAE;AAC3D,UAAI,qBAAqB,WAAY;AACjC,YAAI,iBAAiB;AACrB,YAAI,kBAAkB;AACtB,YAAI,mBAAmB;AACvB,YAAI,mBAAmB;AACvB,YAAI,gBAAgB,KAAK,oBAAoB;AAAA,UACzC,mBAAmB;AAAA,UACnB,oBAAoB;AAAA,UACpB,qBAAqB;AAAA,UACrB,oBAAoB;AAAA,QACxB,GAAG,cAAc,IAAI;AACrB,aAAK,SACD;AAAA,UACI,SAAS;AAAA,YACL;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO,CAAC,mCAAmC,QAAQ,2BAA2B;AAAA,cAC9E,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO,CAAC,kDAAkD,yBAAyB;AAAA,cACnF,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO,CAAC,wCAAwC,8BAA8B,sCAAsC;AAAA,cACpH,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,YACV;AAAA,UACJ;AAAA,UACA,YAAY;AAAA,YACR;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,YACV;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,YACV;AAAA,UACJ;AAAA,QACJ;AAAA,MACR;AACA,UAAI,SAAS,oBAAoB,kBAAkB;AACnD,MAAAC,SAAQ,qBAAqB;AAAA,IAE7B,CAAC;AAED,QAAI,OAAO,iBAAgB,CAAC,WAAU,WAAU,UAAS,eAAc,iBAAgB,+BAA+B,GAAG,SAASD,UAASC,UAASC,SAAO;AAG3J;AACA,UAAI,MAAMF,SAAQ,YAAY;AAC9B,UAAI,WAAWA,SAAQ,QAAQ,EAAE;AACjC,UAAI,qBAAqBA,SAAQ,wBAAwB,EAAE;AAC3D,UAAI,OAAO,WAAY;AACnB,aAAK,iBAAiB;AACtB,aAAK,aAAa,KAAK;AAAA,MAC3B;AACA,UAAI,SAAS,MAAM,QAAQ;AAC3B,OAAC,WAAY;AACT,aAAK,mBAAmB;AACxB,aAAK,MAAM;AAAA,MACf,GAAG,KAAK,KAAK,SAAS;AACtB,MAAAC,SAAQ,OAAO;AAAA,IAEf,CAAC;AAAkB,KAAC,WAAW;AACX,UAAI,QAAQ,CAAC,eAAe,GAAG,SAAS,GAAG;AACvC,YAAI,OAAO,UAAU,YAAY,OAAO,WAAW,YAAY,QAAQ;AACnE,iBAAO,UAAU;AAAA,QACrB;AAAA,MACJ,CAAC;AAAA,IACL,GAAG;AAAA;AAAA;",
  "names": ["require", "exports", "module"]
}
