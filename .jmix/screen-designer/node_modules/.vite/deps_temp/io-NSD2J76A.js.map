{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/snippets/io.js"],
  "sourcesContent": ["ace.define(\"ace/snippets/io\",[\"require\",\"exports\",\"module\"], function(require, exports, module){\"use strict\";\nexports.snippets = [\n    {\n        \"content\": \"assertEquals(${1:expected}, ${2:expr})\",\n        \"name\": \"assertEquals\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ae\"\n    },\n    {\n        \"content\": \"${1:${2:newValue} := ${3:Object} }clone do(\\n\\t$0\\n)\",\n        \"name\": \"clone do\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"cdo\"\n    },\n    {\n        \"content\": \"docSlot(\\\"${1:slotName}\\\", \\\"${2:documentation}\\\")\",\n        \"name\": \"docSlot\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ds\"\n    },\n    {\n        \"content\": \"(${1:header,}\\n\\t${2:body}\\n)$0\",\n        \"keyEquivalent\": \"@(\",\n        \"name\": \"Indented Bracketed Line\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"(\"\n    },\n    {\n        \"content\": \"\\n\\t$0\\n\",\n        \"keyEquivalent\": \"\\r\",\n        \"name\": \"Special: Return Inside Empty Parenthesis\",\n        \"scope\": \"io meta.empty-parenthesis.io, io meta.comma-parenthesis.io\"\n    },\n    {\n        \"content\": \"${1:methodName} := method(${2:args,}\\n\\t$0\\n)\",\n        \"name\": \"method\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"m\"\n    },\n    {\n        \"content\": \"newSlot(\\\"${1:slotName}\\\", ${2:defaultValue}, \\\"${3:docString}\\\")$0\",\n        \"name\": \"newSlot\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ns\"\n    },\n    {\n        \"content\": \"${1:name} := Object clone do(\\n\\t$0\\n)\",\n        \"name\": \"Object clone do\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ocdo\"\n    },\n    {\n        \"content\": \"test${1:SomeFeature} := method(\\n\\t$0\\n)\",\n        \"name\": \"testMethod\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ts\"\n    },\n    {\n        \"content\": \"${1:Something}Test := ${2:UnitTest} clone do(\\n\\t$0\\n)\",\n        \"name\": \"UnitTest\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ut\"\n    }\n];\nexports.scope = \"io\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/io\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": ";;;;;AAAA;AAAA;AAAA,QAAI,OAAO,mBAAkB,CAAC,WAAU,WAAU,QAAQ,GAAG,SAASA,UAASC,UAASC,SAAO;AAAC;AAChG,MAAAD,SAAQ,WAAW;AAAA,QACf;AAAA,UACI,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,UACI,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,UACI,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,UACI,WAAW;AAAA,UACX,iBAAiB;AAAA,UACjB,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,UACI,WAAW;AAAA,UACX,iBAAiB;AAAA,UACjB,QAAQ;AAAA,UACR,SAAS;AAAA,QACb;AAAA,QACA;AAAA,UACI,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,UACI,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,UACI,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,UACI,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,UACI,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,cAAc;AAAA,QAClB;AAAA,MACJ;AACA,MAAAA,SAAQ,QAAQ;AAAA,IAEhB,CAAC;AAAkB,KAAC,WAAW;AACX,UAAI,QAAQ,CAAC,iBAAiB,GAAG,SAAS,GAAG;AACzC,YAAI,OAAO,UAAU,YAAY,OAAO,WAAW,YAAY,QAAQ;AACnE,iBAAO,UAAU;AAAA,QACrB;AAAA,MACJ,CAAC;AAAA,IACL,GAAG;AAAA;AAAA;",
  "names": ["require", "exports", "module"]
}
