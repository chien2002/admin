{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-svg.js"],
  "sourcesContent": ["ace.define(\"ace/mode/xml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar XmlHighlightRules = function (normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n    this.$rules = {\n        start: [\n            { token: \"string.cdata.xml\", regex: \"<\\\\!\\\\[CDATA\\\\[\", next: \"cdata\" },\n            {\n                token: [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n                regex: \"(<\\\\?)(\" + tagRegex + \")\", next: \"processing_instruction\"\n            },\n            { token: \"comment.start.xml\", regex: \"<\\\\!--\", next: \"comment\" },\n            {\n                token: [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n                regex: \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\", next: \"doctype\", caseInsensitive: true\n            },\n            { include: \"tag\" },\n            { token: \"text.end-tag-open.xml\", regex: \"</\" },\n            { token: \"text.tag-open.xml\", regex: \"<\" },\n            { include: \"reference\" },\n            { defaultToken: \"text.xml\" }\n        ],\n        processing_instruction: [{\n                token: \"entity.other.attribute-name.decl-attribute-name.xml\",\n                regex: tagRegex\n            }, {\n                token: \"keyword.operator.decl-attribute-equals.xml\",\n                regex: \"=\"\n            }, {\n                include: \"whitespace\"\n            }, {\n                include: \"string\"\n            }, {\n                token: \"punctuation.xml-decl.xml\",\n                regex: \"\\\\?>\",\n                next: \"start\"\n            }],\n        doctype: [\n            { include: \"whitespace\" },\n            { include: \"string\" },\n            { token: \"xml-pe.doctype.xml\", regex: \">\", next: \"start\" },\n            { token: \"xml-pe.xml\", regex: \"[-_a-zA-Z0-9:]+\" },\n            { token: \"punctuation.int-subset\", regex: \"\\\\[\", push: \"int_subset\" }\n        ],\n        int_subset: [{\n                token: \"text.xml\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.int-subset.xml\",\n                regex: \"]\",\n                next: \"pop\"\n            }, {\n                token: [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n                regex: \"(<\\\\!)(\" + tagRegex + \")\",\n                push: [{\n                        token: \"text\",\n                        regex: \"\\\\s+\"\n                    },\n                    {\n                        token: \"punctuation.markup-decl.xml\",\n                        regex: \">\",\n                        next: \"pop\"\n                    },\n                    { include: \"string\" }]\n            }],\n        cdata: [\n            { token: \"string.cdata.xml\", regex: \"\\\\]\\\\]>\", next: \"start\" },\n            { token: \"text.xml\", regex: \"\\\\s+\" },\n            { token: \"text.xml\", regex: \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\" }\n        ],\n        comment: [\n            { token: \"comment.end.xml\", regex: \"-->\", next: \"start\" },\n            { defaultToken: \"comment.xml\" }\n        ],\n        reference: [{\n                token: \"constant.language.escape.reference.xml\",\n                regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n            }],\n        attr_reference: [{\n                token: \"constant.language.escape.reference.attribute-value.xml\",\n                regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n            }],\n        tag: [{\n                token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n                regex: \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n                next: [\n                    { include: \"attributes\" },\n                    { token: \"meta.tag.punctuation.tag-close.xml\", regex: \"/?>\", next: \"start\" }\n                ]\n            }],\n        tag_whitespace: [\n            { token: \"text.tag-whitespace.xml\", regex: \"\\\\s+\" }\n        ],\n        whitespace: [\n            { token: \"text.whitespace.xml\", regex: \"\\\\s+\" }\n        ],\n        string: [{\n                token: \"string.xml\",\n                regex: \"'\",\n                push: [\n                    { token: \"string.xml\", regex: \"'\", next: \"pop\" },\n                    { defaultToken: \"string.xml\" }\n                ]\n            }, {\n                token: \"string.xml\",\n                regex: '\"',\n                push: [\n                    { token: \"string.xml\", regex: '\"', next: \"pop\" },\n                    { defaultToken: \"string.xml\" }\n                ]\n            }],\n        attributes: [{\n                token: \"entity.other.attribute-name.xml\",\n                regex: tagRegex\n            }, {\n                token: \"keyword.operator.attribute-equals.xml\",\n                regex: \"=\"\n            }, {\n                include: \"tag_whitespace\"\n            }, {\n                include: \"attribute_value\"\n            }],\n        attribute_value: [{\n                token: \"string.attribute-value.xml\",\n                regex: \"'\",\n                push: [\n                    { token: \"string.attribute-value.xml\", regex: \"'\", next: \"pop\" },\n                    { include: \"attr_reference\" },\n                    { defaultToken: \"string.attribute-value.xml\" }\n                ]\n            }, {\n                token: \"string.attribute-value.xml\",\n                regex: '\"',\n                push: [\n                    { token: \"string.attribute-value.xml\", regex: '\"', next: \"pop\" },\n                    { include: \"attr_reference\" },\n                    { defaultToken: \"string.attribute-value.xml\" }\n                ]\n            }]\n    };\n    if (this.constructor === XmlHighlightRules)\n        this.normalizeRules();\n};\n(function () {\n    this.embedTagRules = function (HighlightRules, prefix, tag) {\n        this.$rules.tag.unshift({\n            token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex: \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: [\n                { include: \"attributes\" },\n                { token: \"meta.tag.punctuation.tag-close.xml\", regex: \"/?>\", next: prefix + \"start\" }\n            ]\n        });\n        this.$rules[tag + \"-end\"] = [\n            { include: \"attributes\" },\n            { token: \"meta.tag.punctuation.tag-close.xml\", regex: \"/?>\", next: \"start\",\n                onMatch: function (value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n                } }\n        ];\n        this.embedRules(HighlightRules, prefix, [{\n                token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n                regex: \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n                next: tag + \"-end\"\n            }, {\n                token: \"string.cdata.xml\",\n                regex: \"<\\\\!\\\\[CDATA\\\\[\"\n            }, {\n                token: \"string.cdata.xml\",\n                regex: \"\\\\]\\\\]>\"\n            }]);\n    };\n}).call(TextHighlightRules.prototype);\noop.inherits(XmlHighlightRules, TextHighlightRules);\nexports.XmlHighlightRules = XmlHighlightRules;\n\n});\n\nace.define(\"ace/mode/behaviour/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/token_iterator\",\"ace/lib/lang\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Behaviour = require(\"../behaviour\").Behaviour;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nvar lang = require(\"../../lib/lang\");\nfunction is(token, type) {\n    return token && token.type.lastIndexOf(type + \".xml\") > -1;\n}\nvar XmlBehaviour = function () {\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '\"' || text == \"'\") {\n            var quote = text;\n            var selected = session.doc.getTextRange(editor.getSelectionRange());\n            if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n                return {\n                    text: quote + selected + quote,\n                    selection: false\n                };\n            }\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n                return {\n                    text: \"\",\n                    selection: [1, 1]\n                };\n            }\n            if (!token)\n                token = iterator.stepBackward();\n            if (!token)\n                return;\n            while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n                token = iterator.stepBackward();\n            }\n            var rightSpace = !rightChar || rightChar.match(/\\s/);\n            if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || (is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?'))) {\n                return {\n                    text: quote + quote,\n                    selection: [1, 1]\n                };\n            }\n        }\n    });\n    this.add(\"string_dquotes\", \"deletion\", function (state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n            var line = session.doc.getLine(range.start.row);\n            var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n            if (rightChar == selected) {\n                range.end.column++;\n                return range;\n            }\n        }\n    });\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '>') {\n            var position = editor.getSelectionRange().start;\n            var iterator = new TokenIterator(session, position.row, position.column);\n            var token = iterator.getCurrentToken() || iterator.stepBackward();\n            if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\")))\n                return;\n            if (is(token, \"reference.attribute-value\"))\n                return;\n            if (is(token, \"attribute-value\")) {\n                var tokenEndColumn = iterator.getCurrentTokenColumn() + token.value.length;\n                if (position.column < tokenEndColumn)\n                    return;\n                if (position.column == tokenEndColumn) {\n                    var nextToken = iterator.stepForward();\n                    if (nextToken && is(nextToken, \"attribute-value\"))\n                        return;\n                    iterator.stepBackward();\n                }\n            }\n            if (/^\\s*>/.test(session.getLine(position.row).slice(position.column)))\n                return;\n            while (!is(token, \"tag-name\")) {\n                token = iterator.stepBackward();\n                if (token.value == \"<\") {\n                    token = iterator.stepForward();\n                    break;\n                }\n            }\n            var tokenRow = iterator.getCurrentTokenRow();\n            var tokenColumn = iterator.getCurrentTokenColumn();\n            if (is(iterator.stepBackward(), \"end-tag-open\"))\n                return;\n            var element = token.value;\n            if (tokenRow == position.row)\n                element = element.substring(0, position.column - tokenColumn);\n            if (this.voidElements.hasOwnProperty(element.toLowerCase()))\n                return;\n            return {\n                text: \">\" + \"</\" + element + \">\",\n                selection: [1, 1]\n            };\n        }\n    });\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == \"\\n\") {\n            var cursor = editor.getCursorPosition();\n            var line = session.getLine(cursor.row);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (token && token.type.indexOf(\"tag-close\") !== -1) {\n                if (token.value == \"/>\")\n                    return;\n                while (token && token.type.indexOf(\"tag-name\") === -1) {\n                    token = iterator.stepBackward();\n                }\n                if (!token) {\n                    return;\n                }\n                var tag = token.value;\n                var row = iterator.getCurrentTokenRow();\n                token = iterator.stepBackward();\n                if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n                    return;\n                }\n                if (this.voidElements && !this.voidElements[tag]) {\n                    var nextToken = session.getTokenAt(cursor.row, cursor.column + 1);\n                    var line = session.getLine(row);\n                    var nextIndent = this.$getIndent(line);\n                    var indent = nextIndent + session.getTabString();\n                    if (nextToken && nextToken.value === \"</\") {\n                        return {\n                            text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                            selection: [1, indent.length, 1, indent.length]\n                        };\n                    }\n                    else {\n                        return {\n                            text: \"\\n\" + indent\n                        };\n                    }\n                }\n            }\n        }\n    });\n};\noop.inherits(XmlBehaviour, Behaviour);\nexports.XmlBehaviour = XmlBehaviour;\n\n});\n\nace.define(\"ace/mode/folding/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags)\n        oop.mixin(this.optionalEndTags, optionalEndTags);\n};\noop.inherits(FoldMode, BaseFoldMode);\nvar Tag = function () {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = { row: 0, column: 0 };\n    this.end = { row: 0, column: 0 };\n};\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n(function () {\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var tag = this._getFirstTagInLine(session, row);\n        if (!tag)\n            return this.getCommentFoldWidget(session, row);\n        if (tag.closing || (!tag.tagName && tag.selfClosing))\n            return foldStyle === \"markbeginend\" ? \"end\" : \"\";\n        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase()))\n            return \"\";\n        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column))\n            return \"\";\n        return \"start\";\n    };\n    this.getCommentFoldWidget = function (session, row) {\n        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row)))\n            return \"start\";\n        return \"\";\n    };\n    this._getFirstTagInLine = function (session, row) {\n        var tokens = session.getTokens(row);\n        var tag = new Tag();\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (is(token, \"tag-open\")) {\n                tag.end.column = tag.start.column + token.value.length;\n                tag.closing = is(token, \"end-tag-open\");\n                token = tokens[++i];\n                if (!token)\n                    return null;\n                tag.tagName = token.value;\n                tag.end.column += token.value.length;\n                for (i++; i < tokens.length; i++) {\n                    token = tokens[i];\n                    tag.end.column += token.value.length;\n                    if (is(token, \"tag-close\")) {\n                        tag.selfClosing = token.value == '/>';\n                        break;\n                    }\n                }\n                return tag;\n            }\n            else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == '/>';\n                return tag;\n            }\n            tag.start.column += token.value.length;\n        }\n        return null;\n    };\n    this._findEndTagInLine = function (session, row, tagName, startColumn) {\n        var tokens = session.getTokens(row);\n        var column = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            column += token.value.length;\n            if (column < startColumn)\n                continue;\n            if (is(token, \"end-tag-open\")) {\n                token = tokens[i + 1];\n                if (token && token.value == tagName)\n                    return true;\n            }\n        }\n        return false;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var tags = session.getMatchingTags({ row: row, column: 0 });\n        if (tags) {\n            return new Range(tags.openTag.end.row, tags.openTag.end.column, tags.closeTag.start.row, tags.closeTag.start.column);\n        }\n        else {\n            return this.getCommentFoldWidget(session, row)\n                && session.getCommentFoldRange(row, session.getLine(row).length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text\",\"ace/mode/xml_highlight_rules\",\"ace/mode/behaviour/xml\",\"ace/mode/folding/xml\",\"ace/worker/worker_client\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextMode = require(\"./text\").Mode;\nvar XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\nvar XmlBehaviour = require(\"./behaviour/xml\").XmlBehaviour;\nvar XmlFoldMode = require(\"./folding/xml\").FoldMode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar Mode = function () {\n    this.HighlightRules = XmlHighlightRules;\n    this.$behaviour = new XmlBehaviour();\n    this.foldingRules = new XmlFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.voidElements = lang.arrayToMap([]);\n    this.blockComment = { start: \"<!--\", end: \"-->\" };\n    this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/xml_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"error\", function (e) {\n            session.setAnnotations(e.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/xml\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [{\n                token: \"comment.doc.tag\",\n                regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n            },\n            DocCommentHighlightRules.getTagRule(),\n            {\n                defaultToken: \"comment.doc\",\n                caseInsensitive: true\n            }]\n    };\n};\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\nDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\",\n        regex: \"\\\\/\\\\*(?=\\\\*)\",\n        next: start\n    };\n};\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\",\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/javascript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\nvar JavaScriptHighlightRules = function (options) {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Symbol|\" + // Constructors\n            \"Namespace|QName|XML|XMLList|\" + // E4X\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\" +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" + // Errors\n            \"SyntaxError|TypeError|URIError|\" +\n            \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n            \"isNaN|parseFloat|parseInt|\" +\n            \"JSON|Math|\" + // Other\n            \"this|arguments|prototype|window|document\",\n        \"keyword\": \"const|yield|import|get|set|async|await|\" +\n            \"break|case|catch|continue|default|delete|do|else|finally|for|function|\" +\n            \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" +\n            \"__parent__|__count__|escape|unescape|with|__proto__|\" +\n            \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static|constructor\",\n        \"storage.type\": \"const|let|var|function\",\n        \"constant.language\": \"null|Infinity|NaN|undefined\",\n        \"support.function\": \"alert\",\n        \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-7][0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n    this.$rules = {\n        \"no_regex\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"no_regex\"),\n            {\n                token: \"string\",\n                regex: \"'(?=.)\",\n                next: \"qstring\"\n            }, {\n                token: \"string\",\n                regex: '\"(?=.)',\n                next: \"qqstring\"\n            }, {\n                token: \"constant.numeric\",\n                regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token: \"constant.numeric\",\n                regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token: [\n                    \"storage.type\", \"punctuation.operator\", \"support.function\",\n                    \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\.)(prototype)(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function\\\\*?)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\",\n                    \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function\\\\*?)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function\\\\*?)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(function\\\\*?)(\\\\s+)(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"entity.name.function\", \"text\", \"punctuation.operator\",\n                    \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)(function\\\\*?)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"text\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(:)(\\\\s*)(function\\\\*?)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: \"keyword\",\n                regex: \"from(?=\\\\s*('|\\\"))\"\n            }, {\n                token: \"keyword\",\n                regex: \"(?:\" + kwBeforeRe + \")\\\\b\",\n                next: \"start\"\n            }, {\n                token: \"support.constant\",\n                regex: /that\\b/\n            }, {\n                token: [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n                regex: /(console)(\\.)(warn|info|log|error|time|trace|timeEnd|assert)\\b/\n            }, {\n                token: keywordMapper,\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[.](?![.])/,\n                next: \"property\"\n            }, {\n                token: \"storage.type\",\n                regex: /=>/,\n                next: \"start\"\n            }, {\n                token: \"keyword.operator\",\n                regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n                next: \"start\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[?:,;.]/,\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[({]/,\n                next: \"start\"\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }\n        ],\n        property: [{\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function\\\\*?)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[.](?![.])/\n            }, {\n                token: \"support.function\",\n                regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|lter|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward|rEach)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n            }, {\n                token: \"support.function.dom\",\n                regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n            }, {\n                token: \"support.constant\",\n                regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n            }, {\n                token: \"identifier\",\n                regex: identifierRe\n            }, {\n                regex: \"\",\n                token: \"empty\",\n                next: \"no_regex\"\n            }\n        ],\n        \"start\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"start\"),\n            {\n                token: \"string.regexp\",\n                regex: \"\\\\/\",\n                next: \"regex\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+|^$\",\n                next: \"start\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"regex\": [\n            {\n                token: \"regexp.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"string.regexp\",\n                regex: \"/[sxngimy]*\",\n                next: \"no_regex\"\n            }, {\n                token: \"invalid\",\n                regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n            }, {\n                token: \"constant.language.delimiter\",\n                regex: /\\|/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\[\\^?/,\n                next: \"regex_character_class\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp\"\n            }\n        ],\n        \"regex_character_class\": [\n            {\n                token: \"regexp.charclass.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"]\",\n                next: \"regex\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"-\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp.charachterclass\"\n            }\n        ],\n        \"default_parameter\": [\n            {\n                token: \"string\",\n                regex: \"'(?=.)\",\n                push: [\n                    {\n                        token: \"string\",\n                        regex: \"'|$\",\n                        next: \"pop\"\n                    }, {\n                        include: \"qstring\"\n                    }\n                ]\n            }, {\n                token: \"string\",\n                regex: '\"(?=.)',\n                push: [\n                    {\n                        token: \"string\",\n                        regex: '\"|$',\n                        next: \"pop\"\n                    }, {\n                        include: \"qqstring\"\n                    }\n                ]\n            }, {\n                token: \"constant.language\",\n                regex: \"null|Infinity|NaN|undefined\"\n            }, {\n                token: \"constant.numeric\",\n                regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token: \"constant.numeric\",\n                regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token: \"punctuation.operator\",\n                regex: \",\",\n                next: \"function_arguments\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"function_arguments\": [\n            comments(\"function_arguments\"),\n            {\n                token: \"variable.parameter\",\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: \",\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"qqstring\": [\n            {\n                token: \"constant.language.escape\",\n                regex: escapedRe\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                consumeLineEnd: true\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"qstring\": [\n            {\n                token: \"constant.language.escape\",\n                regex: escapedRe\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                consumeLineEnd: true\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n    if (!options || !options.noES6) {\n        this.$rules.no_regex.unshift({\n            regex: \"[{}]\", onMatch: function (val, state, stack) {\n                this.next = val == \"{\" ? this.nextState : \"\";\n                if (val == \"{\" && stack.length) {\n                    stack.unshift(\"start\", state);\n                }\n                else if (val == \"}\" && stack.length) {\n                    stack.shift();\n                    this.next = stack.shift();\n                    if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1)\n                        return \"paren.quasi.end\";\n                }\n                return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n            },\n            nextState: \"start\"\n        }, {\n            token: \"string.quasi.start\",\n            regex: /`/,\n            push: [{\n                    token: \"constant.language.escape\",\n                    regex: escapedRe\n                }, {\n                    token: \"paren.quasi.start\",\n                    regex: /\\${/,\n                    push: \"start\"\n                }, {\n                    token: \"string.quasi.end\",\n                    regex: /`/,\n                    next: \"pop\"\n                }, {\n                    defaultToken: \"string.quasi\"\n                }]\n        }, {\n            token: [\"variable.parameter\", \"text\"],\n            regex: \"(\" + identifierRe + \")(\\\\s*)(?=\\\\=>)\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"(\\\\()(?=.+\\\\s*=>)\",\n            next: \"function_arguments\"\n        }, {\n            token: \"variable.language\",\n            regex: \"(?:(?:(?:Weak)?(?:Set|Map))|Promise)\\\\b\"\n        });\n        this.$rules[\"function_arguments\"].unshift({\n            token: \"keyword.operator\",\n            regex: \"=\",\n            next: \"default_parameter\"\n        }, {\n            token: \"keyword.operator\",\n            regex: \"\\\\.{3}\"\n        });\n        this.$rules[\"property\"].unshift({\n            token: \"support.function\",\n            regex: \"(findIndex|repeat|startsWith|endsWith|includes|isSafeInteger|trunc|cbrt|log2|log10|sign|then|catch|\"\n                + \"finally|resolve|reject|race|any|all|allSettled|keys|entries|isInteger)\\\\b(?=\\\\()\"\n        }, {\n            token: \"constant.language\",\n            regex: \"(?:MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|EPSILON)\\\\b\"\n        });\n        if (!options || options.jsx != false)\n            JSX.call(this);\n    }\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"no_regex\")]);\n    this.normalizeRules();\n};\noop.inherits(JavaScriptHighlightRules, TextHighlightRules);\nfunction JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n        onMatch: function (val, state, stack) {\n            var offset = val.charAt(1) == \"/\" ? 2 : 1;\n            if (offset == 1) {\n                if (state != this.nextState)\n                    stack.unshift(this.next, this.nextState, 0);\n                else\n                    stack.unshift(this.next);\n                stack[2]++;\n            }\n            else if (offset == 2) {\n                if (state == this.nextState) {\n                    stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.shift();\n                        stack.shift();\n                    }\n                }\n            }\n            return [{\n                    type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n                    value: val.slice(0, offset)\n                }, {\n                    type: \"meta.tag.tag-name.xml\",\n                    value: val.substr(offset)\n                }];\n        },\n        regex: \"</?\" + tagRegex + \"\",\n        next: \"jsxAttributes\",\n        nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n        regex: \"{\",\n        token: \"paren.quasi.start\",\n        push: \"start\"\n    };\n    this.$rules.jsx = [\n        jsxJsRule,\n        jsxTag,\n        { include: \"reference\" },\n        { defaultToken: \"string\" }\n    ];\n    this.$rules.jsxAttributes = [{\n            token: \"meta.tag.punctuation.tag-close.xml\",\n            regex: \"/?>\",\n            onMatch: function (value, currentState, stack) {\n                if (currentState == stack[0])\n                    stack.shift();\n                if (value.length == 2) {\n                    if (stack[0] == this.nextState)\n                        stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.splice(0, 2);\n                    }\n                }\n                this.next = stack[0] || \"start\";\n                return [{ type: this.token, value: value }];\n            },\n            nextState: \"jsx\"\n        },\n        jsxJsRule,\n        comments(\"jsxAttributes\"),\n        {\n            token: \"entity.other.attribute-name.xml\",\n            regex: tagRegex\n        }, {\n            token: \"keyword.operator.attribute-equals.xml\",\n            regex: \"=\"\n        }, {\n            token: \"text.tag-whitespace.xml\",\n            regex: \"\\\\s+\"\n        }, {\n            token: \"string.attribute-value.xml\",\n            regex: \"'\",\n            stateName: \"jsx_attr_q\",\n            push: [\n                { token: \"string.attribute-value.xml\", regex: \"'\", next: \"pop\" },\n                { include: \"reference\" },\n                { defaultToken: \"string.attribute-value.xml\" }\n            ]\n        }, {\n            token: \"string.attribute-value.xml\",\n            regex: '\"',\n            stateName: \"jsx_attr_qq\",\n            push: [\n                { token: \"string.attribute-value.xml\", regex: '\"', next: \"pop\" },\n                { include: \"reference\" },\n                { defaultToken: \"string.attribute-value.xml\" }\n            ]\n        },\n        jsxTag\n    ];\n    this.$rules.reference = [{\n            token: \"constant.language.escape.reference.xml\",\n            regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }];\n}\nfunction comments(next) {\n    return [\n        {\n            token: \"comment\",\n            regex: /\\/\\*/,\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                { token: \"comment\", regex: \"\\\\*\\\\/\", next: next || \"pop\" },\n                { defaultToken: \"comment\", caseInsensitive: true }\n            ]\n        }, {\n            token: \"comment\",\n            regex: \"\\\\/\\\\/\",\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                { token: \"comment\", regex: \"$|^\", next: next || \"pop\" },\n                { defaultToken: \"comment\", caseInsensitive: true }\n            ]\n        }\n    ];\n}\nexports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/worker/worker_client\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = JavaScriptHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.$quotes = { '\"': '\"', \"'\": \"'\", \"`\": \"`\" };\n    this.$pairQuotesAfter = {\n        \"`\": /\\w/\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\" || state == \"no_regex\") {\n            var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        else if (state == \"doc-start\") {\n            if (endState == \"start\" || endState == \"no_regex\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"* \";\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/javascript_worker\", \"JavaScriptWorker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"annotate\", function (results) {\n            session.setAnnotations(results.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/javascript\";\n    this.snippetFileId = \"ace/snippets/javascript\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});\n\nace.define(\"ace/mode/svg_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/xml_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\nvar SvgHighlightRules = function () {\n    XmlHighlightRules.call(this);\n    this.embedTagRules(JavaScriptHighlightRules, \"js-\", \"script\");\n    this.normalizeRules();\n};\noop.inherits(SvgHighlightRules, XmlHighlightRules);\nexports.SvgHighlightRules = SvgHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/mixed\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (defaultMode, subModes) {\n    this.defaultMode = defaultMode;\n    this.subModes = subModes;\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.$getMode = function (state) {\n        if (typeof state != \"string\")\n            state = state[0];\n        for (var key in this.subModes) {\n            if (state.indexOf(key) === 0)\n                return this.subModes[key];\n        }\n        return null;\n    };\n    this.$tryMode = function (state, session, foldStyle, row) {\n        var mode = this.$getMode(state);\n        return (mode ? mode.getFoldWidget(session, foldStyle, row) : \"\");\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n        return (this.$tryMode(session.getState(row - 1), session, foldStyle, row) ||\n            this.$tryMode(session.getState(row), session, foldStyle, row) ||\n            this.defaultMode.getFoldWidget(session, foldStyle, row));\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var mode = this.$getMode(session.getState(row - 1));\n        if (!mode || !mode.getFoldWidget(session, foldStyle, row))\n            mode = this.$getMode(session.getState(row));\n        if (!mode || !mode.getFoldWidget(session, foldStyle, row))\n            mode = this.defaultMode;\n        return mode.getFoldWidgetRange(session, foldStyle, row);\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/svg\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/xml\",\"ace/mode/javascript\",\"ace/mode/svg_highlight_rules\",\"ace/mode/folding/mixed\",\"ace/mode/folding/xml\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar XmlMode = require(\"./xml\").Mode;\nvar JavaScriptMode = require(\"./javascript\").Mode;\nvar SvgHighlightRules = require(\"./svg_highlight_rules\").SvgHighlightRules;\nvar MixedFoldMode = require(\"./folding/mixed\").FoldMode;\nvar XmlFoldMode = require(\"./folding/xml\").FoldMode;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    XmlMode.call(this);\n    this.HighlightRules = SvgHighlightRules;\n    this.createModeDelegates({\n        \"js-\": JavaScriptMode\n    });\n    this.foldingRules = new MixedFoldMode(new XmlFoldMode(), {\n        \"js-\": new CStyleFoldMode()\n    });\n};\noop.inherits(Mode, XmlMode);\n(function () {\n    this.getNextLineIndent = function (state, line, tab) {\n        return this.$getIndent(line);\n    };\n    this.$id = \"ace/mode/svg\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/svg\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
