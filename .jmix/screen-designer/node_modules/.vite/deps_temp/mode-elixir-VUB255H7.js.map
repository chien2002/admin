{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-elixir.js"],
  "sourcesContent": ["ace.define(\"ace/mode/elixir_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/* This file was autogenerated from https://raw.githubusercontent.com/elixir-lang/elixir-tmbundle/master/Syntaxes/Elixir.tmLanguage (uuid: ) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar ElixirHighlightRules = function () {\n    this.$rules = { start: [{ token: ['meta.module.elixir',\n                    'keyword.control.module.elixir',\n                    'meta.module.elixir',\n                    'entity.name.type.module.elixir'],\n                regex: '^(\\\\s*)(defmodule)(\\\\s+)((?:[A-Z]\\\\w*\\\\s*\\\\.\\\\s*)*[A-Z]\\\\w*)' },\n            { token: 'comment.documentation.heredoc',\n                regex: '@(?:module|type)?doc (?:~[a-z])?\"\"\"',\n                push: [{ token: 'comment.documentation.heredoc',\n                        regex: '\\\\s*\"\"\"',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'comment.documentation.heredoc' }],\n                comment: '@doc with heredocs is treated as documentation' },\n            { token: 'comment.documentation.heredoc',\n                regex: '@(?:module|type)?doc ~[A-Z]\"\"\"',\n                push: [{ token: 'comment.documentation.heredoc',\n                        regex: '\\\\s*\"\"\"',\n                        next: 'pop' },\n                    { defaultToken: 'comment.documentation.heredoc' }],\n                comment: '@doc with heredocs is treated as documentation' },\n            { token: 'comment.documentation.heredoc',\n                regex: '@(?:module|type)?doc (?:~[a-z])?\\'\\'\\'',\n                push: [{ token: 'comment.documentation.heredoc',\n                        regex: '\\\\s*\\'\\'\\'',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'comment.documentation.heredoc' }],\n                comment: '@doc with heredocs is treated as documentation' },\n            { token: 'comment.documentation.heredoc',\n                regex: '@(?:module|type)?doc ~[A-Z]\\'\\'\\'',\n                push: [{ token: 'comment.documentation.heredoc',\n                        regex: '\\\\s*\\'\\'\\'',\n                        next: 'pop' },\n                    { defaultToken: 'comment.documentation.heredoc' }],\n                comment: '@doc with heredocs is treated as documentation' },\n            { token: 'comment.documentation.false',\n                regex: '@(?:module|type)?doc false',\n                comment: '@doc false is treated as documentation' },\n            { token: 'comment.documentation.string',\n                regex: '@(?:module|type)?doc \"',\n                push: [{ token: 'comment.documentation.string',\n                        regex: '\"',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'comment.documentation.string' }],\n                comment: '@doc with string is treated as documentation' },\n            { token: 'keyword.control.elixir',\n                regex: '\\\\b(?:do|end|case|bc|lc|for|if|cond|unless|try|receive|fn|defmodule|defp?|defprotocol|defimpl|defrecord|defstruct|defmacrop?|defdelegate|defcallback|defmacrocallback|defexception|defoverridable|exit|after|rescue|catch|else|raise|throw|import|require|alias|use|quote|unquote|super)\\\\b(?![?!])',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '(?<!\\\\.)\\\\b(do|end|case|bc|lc|for|if|cond|unless|try|receive|fn|defmodule|defp?|defprotocol|defimpl|defrecord|defstruct|defmacrop?|defdelegate|defcallback|defmacrocallback|defexception|defoverridable|exit|after|rescue|catch|else|raise|throw|import|require|alias|use|quote|unquote|super)\\\\b(?![?!])' },\n            { token: 'keyword.operator.elixir',\n                regex: '\\\\b(?:and|not|or|when|xor|in|inlist|inbits)\\\\b',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '(?<!\\\\.)\\\\b(and|not|or|when|xor|in|inlist|inbits)\\\\b',\n                comment: ' as above, just doesn\\'t need a \\'end\\' and does a logic operation' },\n            { token: 'constant.language.elixir',\n                regex: '\\\\b(?:nil|true|false)\\\\b(?![?!])' },\n            { token: 'variable.language.elixir',\n                regex: '\\\\b__(?:CALLER|ENV|MODULE|DIR)__\\\\b(?![?!])' },\n            { token: ['punctuation.definition.variable.elixir',\n                    'variable.other.readwrite.module.elixir'],\n                regex: '(@)([a-zA-Z_]\\\\w*)' },\n            { token: ['punctuation.definition.variable.elixir',\n                    'variable.other.anonymous.elixir'],\n                regex: '(&)(\\\\d*)' },\n            { token: 'variable.other.constant.elixir',\n                regex: '\\\\b[A-Z]\\\\w*\\\\b' },\n            { token: 'constant.numeric.elixir',\n                regex: '\\\\b(?:0x[\\\\da-fA-F](?:_?[\\\\da-fA-F])*|\\\\d(?:_?\\\\d)*(?:\\\\.(?![^[:space:][:digit:]])(?:_?\\\\d)*)?(?:[eE][-+]?\\\\d(?:_?\\\\d)*)?|0b[01]+|0o[0-7]+)\\\\b',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '\\\\b(0x\\\\h(?>_?\\\\h)*|\\\\d(?>_?\\\\d)*(\\\\.(?![^[:space:][:digit:]])(?>_?\\\\d)*)?([eE][-+]?\\\\d(?>_?\\\\d)*)?|0b[01]+|0o[0-7]+)\\\\b' },\n            { token: 'punctuation.definition.constant.elixir',\n                regex: ':\\'',\n                push: [{ token: 'punctuation.definition.constant.elixir',\n                        regex: '\\'',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'constant.other.symbol.single-quoted.elixir' }] },\n            { token: 'punctuation.definition.constant.elixir',\n                regex: ':\"',\n                push: [{ token: 'punctuation.definition.constant.elixir',\n                        regex: '\"',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'constant.other.symbol.double-quoted.elixir' }] },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '(?:\\'\\'\\')',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '(?>\\'\\'\\')',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '^\\\\s*\\'\\'\\'',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'support.function.variable.quoted.single.heredoc.elixir' }],\n                comment: 'Single-quoted heredocs' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '\\'',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '\\'',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'support.function.variable.quoted.single.elixir' }],\n                comment: 'single quoted string (allows for interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '(?:\"\"\")',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '(?>\"\"\")',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '^\\\\s*\"\"\"',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'string.quoted.double.heredoc.elixir' }],\n                comment: 'Double-quoted heredocs' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '\"',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '\"',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'string.quoted.double.elixir' }],\n                comment: 'double quoted string (allows for interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[a-z](?:\"\"\")',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '~[a-z](?>\"\"\")',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '^\\\\s*\"\"\"',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'string.quoted.double.heredoc.elixir' }],\n                comment: 'Double-quoted heredocs sigils' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[a-z]\\\\{',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '\\\\}[a-z]*',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'string.interpolated.elixir' }],\n                comment: 'sigil (allow for interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[a-z]\\\\[',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '\\\\][a-z]*',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'string.interpolated.elixir' }],\n                comment: 'sigil (allow for interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[a-z]\\\\<',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '\\\\>[a-z]*',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'string.interpolated.elixir' }],\n                comment: 'sigil (allow for interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[a-z]\\\\(',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '\\\\)[a-z]*',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'string.interpolated.elixir' }],\n                comment: 'sigil (allow for interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[a-z][^\\\\w]',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '[^\\\\w][a-z]*',\n                        next: 'pop' },\n                    { include: '#interpolated_elixir' },\n                    { include: '#escaped_char' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'string.interpolated.elixir' }],\n                comment: 'sigil (allow for interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[A-Z](?:\"\"\")',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '~[A-Z](?>\"\"\")',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '^\\\\s*\"\"\"',\n                        next: 'pop' },\n                    { defaultToken: 'string.quoted.other.literal.upper.elixir' }],\n                comment: 'Double-quoted heredocs sigils' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[A-Z]\\\\{',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '\\\\}[a-z]*',\n                        next: 'pop' },\n                    { defaultToken: 'string.quoted.other.literal.upper.elixir' }],\n                comment: 'sigil (without interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[A-Z]\\\\[',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '\\\\][a-z]*',\n                        next: 'pop' },\n                    { defaultToken: 'string.quoted.other.literal.upper.elixir' }],\n                comment: 'sigil (without interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[A-Z]\\\\<',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '\\\\>[a-z]*',\n                        next: 'pop' },\n                    { defaultToken: 'string.quoted.other.literal.upper.elixir' }],\n                comment: 'sigil (without interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[A-Z]\\\\(',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '\\\\)[a-z]*',\n                        next: 'pop' },\n                    { defaultToken: 'string.quoted.other.literal.upper.elixir' }],\n                comment: 'sigil (without interpolation)' },\n            { token: 'punctuation.definition.string.begin.elixir',\n                regex: '~[A-Z][^\\\\w]',\n                push: [{ token: 'punctuation.definition.string.end.elixir',\n                        regex: '[^\\\\w][a-z]*',\n                        next: 'pop' },\n                    { defaultToken: 'string.quoted.other.literal.upper.elixir' }],\n                comment: 'sigil (without interpolation)' },\n            { token: ['punctuation.definition.constant.elixir', 'constant.other.symbol.elixir'],\n                regex: '(:)([a-zA-Z_][\\\\w@]*(?:[?!]|=(?![>=]))?|\\\\<\\\\>|===?|!==?|<<>>|<<<|>>>|~~~|::|<\\\\-|\\\\|>|=>|~|~=|=|/|\\\\\\\\\\\\\\\\|\\\\*\\\\*?|\\\\.\\\\.?\\\\.?|>=?|<=?|&&?&?|\\\\+\\\\+?|\\\\-\\\\-?|\\\\|\\\\|?\\\\|?|\\\\!|@|\\\\%?\\\\{\\\\}|%|\\\\[\\\\]|\\\\^(?:\\\\^\\\\^)?)',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '(?<!:)(:)(?>[a-zA-Z_][\\\\w@]*(?>[?!]|=(?![>=]))?|\\\\<\\\\>|===?|!==?|<<>>|<<<|>>>|~~~|::|<\\\\-|\\\\|>|=>|~|~=|=|/|\\\\\\\\\\\\\\\\|\\\\*\\\\*?|\\\\.\\\\.?\\\\.?|>=?|<=?|&&?&?|\\\\+\\\\+?|\\\\-\\\\-?|\\\\|\\\\|?\\\\|?|\\\\!|@|\\\\%?\\\\{\\\\}|%|\\\\[\\\\]|\\\\^(\\\\^\\\\^)?)',\n                comment: 'symbols' },\n            { token: 'punctuation.definition.constant.elixir',\n                regex: '(?:[a-zA-Z_][\\\\w@]*(?:[?!])?):(?!:)',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '(?>[a-zA-Z_][\\\\w@]*(?>[?!])?)(:)(?!:)',\n                comment: 'symbols' },\n            { token: ['punctuation.definition.comment.elixir',\n                    'comment.line.number-sign.elixir'],\n                regex: '(#)(.*)' },\n            { token: 'constant.numeric.elixir',\n                regex: '\\\\?(?:\\\\\\\\(?:x[\\\\da-fA-F]{1,2}(?![\\\\da-fA-F])\\\\b|[^xMC])|[^\\\\s\\\\\\\\])',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '(?<!\\\\w)\\\\?(\\\\\\\\(x\\\\h{1,2}(?!\\\\h)\\\\b|[^xMC])|[^\\\\s\\\\\\\\])',\n                comment: '\\n\\t\\t\\tmatches questionmark-letters.\\n\\n\\t\\t\\texamples (1st alternation = hex):\\n\\t\\t\\t?\\\\x1     ?\\\\x61\\n\\n\\t\\t\\texamples (2rd alternation = escaped):\\n\\t\\t\\t?\\\\n      ?\\\\b\\n\\n\\t\\t\\texamples (3rd alternation = normal):\\n\\t\\t\\t?a       ?A       ?0 \\n\\t\\t\\t?*       ?\"       ?( \\n\\t\\t\\t?.       ?#\\n\\t\\t\\t\\n\\t\\t\\tthe negative lookbehind prevents against matching\\n\\t\\t\\tp(42.tainted?)\\n\\t\\t\\t' },\n            { token: 'keyword.operator.assignment.augmented.elixir',\n                regex: '\\\\+=|\\\\-=|\\\\|\\\\|=|~=|&&=' },\n            { token: 'keyword.operator.comparison.elixir',\n                regex: '===?|!==?|<=?|>=?' },\n            { token: 'keyword.operator.bitwise.elixir',\n                regex: '\\\\|{3}|&{3}|\\\\^{3}|<{3}|>{3}|~{3}' },\n            { token: 'keyword.operator.logical.elixir',\n                regex: '!+|\\\\bnot\\\\b|&&|\\\\band\\\\b|\\\\|\\\\||\\\\bor\\\\b|\\\\bxor\\\\b',\n                originalRegex: '(?<=[ \\\\t])!+|\\\\bnot\\\\b|&&|\\\\band\\\\b|\\\\|\\\\||\\\\bor\\\\b|\\\\bxor\\\\b' },\n            { token: 'keyword.operator.arithmetic.elixir',\n                regex: '\\\\*|\\\\+|\\\\-|/' },\n            { token: 'keyword.operator.other.elixir',\n                regex: '\\\\||\\\\+\\\\+|\\\\-\\\\-|\\\\*\\\\*|\\\\\\\\\\\\\\\\|\\\\<\\\\-|\\\\<\\\\>|\\\\<\\\\<|\\\\>\\\\>|\\\\:\\\\:|\\\\.\\\\.|\\\\|>|~|=>' },\n            { token: 'keyword.operator.assignment.elixir', regex: '=' },\n            { token: 'punctuation.separator.other.elixir', regex: ':' },\n            { token: 'punctuation.separator.statement.elixir',\n                regex: '\\\\;' },\n            { token: 'punctuation.separator.object.elixir', regex: ',' },\n            { token: 'punctuation.separator.method.elixir', regex: '\\\\.' },\n            { token: 'punctuation.section.scope.elixir', regex: '\\\\{|\\\\}' },\n            { token: 'punctuation.section.array.elixir', regex: '\\\\[|\\\\]' },\n            { token: 'punctuation.section.function.elixir',\n                regex: '\\\\(|\\\\)' }],\n        '#escaped_char': [{ token: 'constant.character.escape.elixir',\n                regex: '\\\\\\\\(?:x[\\\\da-fA-F]{1,2}|.)' }],\n        '#interpolated_elixir': [{ token: ['source.elixir.embedded.source',\n                    'source.elixir.embedded.source.empty'],\n                regex: '(#\\\\{)(\\\\})' },\n            { todo: { token: 'punctuation.section.embedded.elixir',\n                    regex: '#\\\\{',\n                    push: [{ token: 'punctuation.section.embedded.elixir',\n                            regex: '\\\\}',\n                            next: 'pop' },\n                        { include: '#nest_curly_and_self' },\n                        { include: '$self' },\n                        { defaultToken: 'source.elixir.embedded.source' }] } }],\n        '#nest_curly_and_self': [{ token: 'punctuation.section.scope.elixir',\n                regex: '\\\\{',\n                push: [{ token: 'punctuation.section.scope.elixir',\n                        regex: '\\\\}',\n                        next: 'pop' },\n                    { include: '#nest_curly_and_self' }] },\n            { include: '$self' }],\n        '#regex_sub': [{ include: '#interpolated_elixir' },\n            { include: '#escaped_char' },\n            { token: ['punctuation.definition.arbitrary-repitition.elixir',\n                    'string.regexp.arbitrary-repitition.elixir',\n                    'string.regexp.arbitrary-repitition.elixir',\n                    'punctuation.definition.arbitrary-repitition.elixir'],\n                regex: '(\\\\{)(\\\\d+)((?:,\\\\d+)?)(\\\\})' },\n            { token: 'punctuation.definition.character-class.elixir',\n                regex: '\\\\[(?:\\\\^?\\\\])?',\n                push: [{ token: 'punctuation.definition.character-class.elixir',\n                        regex: '\\\\]',\n                        next: 'pop' },\n                    { include: '#escaped_char' },\n                    { defaultToken: 'string.regexp.character-class.elixir' }] },\n            { token: 'punctuation.definition.group.elixir',\n                regex: '\\\\(',\n                push: [{ token: 'punctuation.definition.group.elixir',\n                        regex: '\\\\)',\n                        next: 'pop' },\n                    { include: '#regex_sub' },\n                    { defaultToken: 'string.regexp.group.elixir' }] },\n            { token: ['punctuation.definition.comment.elixir',\n                    'comment.line.number-sign.elixir'],\n                regex: '(?:^|\\\\s)(#)(\\\\s[[a-zA-Z0-9,. \\\\t?!-][^\\\\x00-\\\\x7F]]*$)',\n                originalRegex: '(?<=^|\\\\s)(#)\\\\s[[a-zA-Z0-9,. \\\\t?!-][^\\\\x{00}-\\\\x{7F}]]*$',\n                comment: 'We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.' }] };\n    this.normalizeRules();\n};\nElixirHighlightRules.metaData = { comment: 'Textmate bundle for Elixir Programming Language.',\n    fileTypes: ['ex', 'exs'],\n    firstLineMatch: '^#!/.*\\\\belixir',\n    foldingStartMarker: '(after|else|catch|rescue|\\\\-\\\\>|\\\\{|\\\\[|do)\\\\s*$',\n    foldingStopMarker: '^\\\\s*((\\\\}|\\\\]|after|else|catch|rescue)\\\\s*$|end\\\\b)',\n    keyEquivalent: '^~E',\n    name: 'Elixir',\n    scopeName: 'source.elixir' };\noop.inherits(ElixirHighlightRules, TextHighlightRules);\nexports.ElixirHighlightRules = ElixirHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n            if (level == -1)\n                continue;\n            if (line[level] != \"#\")\n                break;\n            endRow = row;\n        }\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        }\n        else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n        if (prevIndent != -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/elixir\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/elixir_highlight_rules\",\"ace/mode/folding/coffee\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar ElixirHighlightRules = require(\"./elixir_highlight_rules\").ElixirHighlightRules;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = ElixirHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/elixir\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/elixir\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
