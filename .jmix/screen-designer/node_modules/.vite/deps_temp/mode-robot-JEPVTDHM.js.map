{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-robot.js"],
  "sourcesContent": ["ace.define(\"ace/mode/robot_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){'use strict';\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar RobotHighlightRules = function () {\n    var builtinConstantsRegex = new RegExp(/\\$\\{CURDIR\\}|\\$\\{TEMPDIR\\}|\\$\\{EXECDIR\\}|\\$\\{\\/\\}|\\$\\{\\:\\}|\\$\\{\\\\n\\}|\\$\\{true\\}|\\$\\{false\\}|\\$\\{none\\}|\\$\\{null\\}|\\$\\{space(?:\\s*\\*\\s+[0-9]+)?\\}|\\$\\{empty\\}|&\\{empty\\}|@\\{empty\\}|\\$\\{TEST NAME\\}|@\\{TEST[\\s_]TAGS\\}|\\$\\{TEST[\\s_]DOCUMENTATION\\}|\\$\\{TEST[\\s_]STATUS\\}|\\$\\{TEST[\\s_]MESSAGE\\}|\\$\\{PREV[\\s_]TEST[\\s_]NAME\\}|\\$\\{PREV[\\s_]TEST[\\s_]STATUS\\}|\\$\\{PREV[\\s_]TEST[\\s_]MESSAGE\\}|\\$\\{SUITE[\\s_]NAME\\}|\\$\\{SUITE[\\s_]SOURCE\\}|\\$\\{SUITE[\\s_]DOCUMENTATION\\}|&\\{SUITE[\\s_]METADATA\\}|\\$\\{SUITE[\\s_]STATUS\\}|\\$\\{SUITE[\\s_]MESSAGE\\}|\\$\\{KEYWORD[\\s_]STATUS\\}|\\$\\{KEYWORD[\\s_]MESSAGE\\}|\\$\\{LOG[\\s_]LEVEL\\}|\\$\\{OUTPUT[\\s_]FILE\\}|\\$\\{LOG[\\s_]FILE\\}|\\$\\{REPORT[\\s_]FILE\\}|\\$\\{DEBUG[\\s_]FILE\\}|\\$\\{OUTPUT[\\s_]DIR\\}/);\n    this.$rules = {\n        \"start\": [{\n                token: \"string.robot.header\",\n                regex: /^\\*{3}\\s+(?:settings?|metadata|(?:user )?keywords?|test ?cases?|tasks?|variables?)/,\n                caseInsensitive: true,\n                push: [{\n                        token: \"string.robot.header\",\n                        regex: /$/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string.robot.header\"\n                    }],\n                comment: \"start of a table\"\n            }, {\n                token: \"comment.robot\",\n                regex: /(?:^|\\s{2,}|\\t|\\|\\s{1,})(?=[^\\\\])#/,\n                push: [{\n                        token: \"comment.robot\",\n                        regex: /$/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"comment.robot\"\n                    }]\n            }, {\n                token: \"comment\",\n                regex: /^\\s*\\[?Documentation\\]?/,\n                caseInsensitive: true,\n                push: [{\n                        token: \"comment\",\n                        regex: /^(?!\\s*\\.\\.\\.)/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"comment\"\n                    }]\n            }, {\n                token: \"storage.type.method.robot\",\n                regex: /\\[(?:Arguments|Setup|Teardown|Precondition|Postcondition|Template|Return|Timeout)\\]/,\n                caseInsensitive: true,\n                comment: \"testcase settings\"\n            }, {\n                token: \"storage.type.method.robot\",\n                regex: /\\[Tags\\]/,\n                caseInsensitive: true,\n                push: [{\n                        token: \"storage.type.method.robot\",\n                        regex: /^(?!\\s*\\.\\.\\.)/,\n                        next: \"pop\"\n                    }, {\n                        token: \"comment\",\n                        regex: /^\\s*\\.\\.\\./\n                    }, {\n                        defaultToken: \"storage.type.method.robot\"\n                    }],\n                comment: \"test tags\"\n            }, {\n                token: \"constant.language\",\n                regex: builtinConstantsRegex,\n                caseInsensitive: true\n            }, {\n                token: \"entity.name.variable.wrapper\",\n                regex: /[$@&%]\\{\\{?/,\n                push: [{\n                        token: \"entity.name.variable.wrapper\",\n                        regex: /\\}\\}?(\\s?=)?/,\n                        next: \"pop\"\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        token: \"entity.name.variable\",\n                        regex: /./\n                    }, {\n                        defaultToken: \"entity.name.variable\"\n                    }]\n            }, {\n                token: \"keyword.control.robot\",\n                regex: /^[^\\s\\t*$|]+|(?=^\\|)\\s+[^\\s\\t*$|]+/,\n                push: [{\n                        token: \"keyword.control.robot\",\n                        regex: /(?=\\s{2})|\\t|$|\\s+(?=\\|)/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"keyword.control.robot\"\n                    }]\n            }, {\n                token: \"constant.numeric.robot\",\n                regex: /\\b[0-9]+(?:\\.[0-9]+)?\\b/\n            }, {\n                token: \"keyword\",\n                regex: /\\s{2,}(for|in range|in|end|else if|if|else|with name)(\\s{2,}|$)/,\n                caseInsensitive: true\n            }, {\n                token: \"storage.type.function\",\n                regex: /^(?:\\s{2,}\\s+)[^ \\t*$@&%[.|]+/,\n                push: [{\n                        token: \"storage.type.function\",\n                        regex: /(?=\\s{2})|\\t|$|\\s+(?=\\|)/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"storage.type.function\"\n                    }]\n            }]\n    };\n    this.normalizeRules();\n};\nRobotHighlightRules.metadata = {\n    fileTypes: ['robot'],\n    name: 'Robot',\n    scopeName: 'source.robot'\n};\noop.inherits(RobotHighlightRules, TextHighlightRules);\nexports.RobotHighlightRules = RobotHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/pythonic\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (markers) {\n    this.foldingStartMarker = new RegExp(\"([\\\\[{])(?:\\\\s*)$|(\" + markers + \")(?:\\\\s*)(?:#.*)?$\");\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, match.index);\n            if (match[2])\n                return this.indentationBlock(session, row, match.index + match[2].length);\n            return this.indentationBlock(session, row);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/robot\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/robot_highlight_rules\",\"ace/mode/folding/pythonic\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar RobotHighlightRules = require(\"./robot_highlight_rules\").RobotHighlightRules;\nvar FoldMode = require(\"./folding/pythonic\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = RobotHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/robot\";\n    this.snippetFileId = \"ace/snippets/robot\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/robot\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
