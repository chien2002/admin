{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-rst.js"],
  "sourcesContent": ["ace.define(\"ace/mode/rst_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar RSTHighlightRules = function () {\n    var tokens = {\n        title: \"markup.heading\",\n        list: \"markup.heading\",\n        table: \"constant\",\n        directive: \"keyword.operator\",\n        entity: \"string\",\n        link: \"markup.underline.list\",\n        bold: \"markup.bold\",\n        italic: \"markup.italic\",\n        literal: \"support.function\",\n        comment: \"comment\"\n    };\n    var startStringPrefix = \"(^|\\\\s|[\\\"'(<\\\\[{\\\\-/:])\";\n    var endStringSuffix = \"(?:$|(?=\\\\s|[\\\\\\\\.,;!?\\\\-/:\\\"')>\\\\]}]))\";\n    this.$rules = {\n        \"start\": [\n            {\n                token: tokens.title,\n                regex: \"(^)([\\\\=\\\\-`:\\\\.'\\\"~\\\\^_\\\\*\\\\+#])(\\\\2{2,}\\\\s*$)\"\n            },\n            {\n                token: [\"text\", tokens.directive, tokens.literal],\n                regex: \"(^\\\\s*\\\\.\\\\. )([^: ]+::)(.*$)\",\n                next: \"codeblock\"\n            },\n            {\n                token: tokens.directive,\n                regex: \"::$\",\n                next: \"codeblock\"\n            },\n            {\n                token: [tokens.entity, tokens.link],\n                regex: \"(^\\\\.\\\\. _[^:]+:)(.*$)\"\n            },\n            {\n                token: [tokens.entity, tokens.link],\n                regex: \"(^__ )(https?://.*$)\"\n            },\n            {\n                token: tokens.entity,\n                regex: \"^\\\\.\\\\. \\\\[[^\\\\]]+\\\\] \"\n            },\n            {\n                token: tokens.comment,\n                regex: \"^\\\\.\\\\. .*$\",\n                next: \"comment\"\n            },\n            {\n                token: tokens.list,\n                regex: \"^\\\\s*[\\\\*\\\\+-] \"\n            },\n            {\n                token: tokens.list,\n                regex: \"^\\\\s*(?:[A-Za-z]|[0-9]+|[ivxlcdmIVXLCDM]+)\\\\. \"\n            },\n            {\n                token: tokens.list,\n                regex: \"^\\\\s*\\\\(?(?:[A-Za-z]|[0-9]+|[ivxlcdmIVXLCDM]+)\\\\) \"\n            },\n            {\n                token: tokens.table,\n                regex: \"^={2,}(?: +={2,})+$\"\n            },\n            {\n                token: tokens.table,\n                regex: \"^\\\\+-{2,}(?:\\\\+-{2,})+\\\\+$\"\n            },\n            {\n                token: tokens.table,\n                regex: \"^\\\\+={2,}(?:\\\\+={2,})+\\\\+$\"\n            },\n            {\n                token: [\"text\", tokens.literal],\n                regex: startStringPrefix + \"(``)(?=\\\\S)\",\n                next: \"code\"\n            },\n            {\n                token: [\"text\", tokens.bold],\n                regex: startStringPrefix + \"(\\\\*\\\\*)(?=\\\\S)\",\n                next: \"bold\"\n            },\n            {\n                token: [\"text\", tokens.italic],\n                regex: startStringPrefix + \"(\\\\*)(?=\\\\S)\",\n                next: \"italic\"\n            },\n            {\n                token: tokens.entity,\n                regex: \"\\\\|[\\\\w\\\\-]+?\\\\|\"\n            },\n            {\n                token: tokens.entity,\n                regex: \":[\\\\w-:]+:`\\\\S\",\n                next: \"entity\"\n            },\n            {\n                token: [\"text\", tokens.entity],\n                regex: startStringPrefix + \"(_`)(?=\\\\S)\",\n                next: \"entity\"\n            },\n            {\n                token: tokens.entity,\n                regex: \"_[A-Za-z0-9\\\\-]+?\"\n            },\n            {\n                token: [\"text\", tokens.link],\n                regex: startStringPrefix + \"(`)(?=\\\\S)\",\n                next: \"link\"\n            },\n            {\n                token: tokens.link,\n                regex: \"[A-Za-z0-9\\\\-]+?__?\"\n            },\n            {\n                token: tokens.link,\n                regex: \"\\\\[[^\\\\]]+?\\\\]_\"\n            },\n            {\n                token: tokens.link,\n                regex: \"https?://\\\\S+\"\n            },\n            {\n                token: tokens.table,\n                regex: \"\\\\|\"\n            }\n        ],\n        \"codeblock\": [\n            {\n                token: tokens.literal,\n                regex: \"^ +.+$\",\n                next: \"codeblock\"\n            },\n            {\n                token: tokens.literal,\n                regex: '^$',\n                next: \"codeblock\"\n            },\n            {\n                token: \"empty\",\n                regex: \"\",\n                next: \"start\"\n            }\n        ],\n        \"code\": [\n            {\n                token: tokens.literal,\n                regex: \"\\\\S``\" + endStringSuffix,\n                next: \"start\"\n            },\n            {\n                defaultToken: tokens.literal\n            }\n        ],\n        \"bold\": [\n            {\n                token: tokens.bold,\n                regex: \"\\\\S\\\\*\\\\*\" + endStringSuffix,\n                next: \"start\"\n            },\n            {\n                defaultToken: tokens.bold\n            }\n        ],\n        \"italic\": [\n            {\n                token: tokens.italic,\n                regex: \"\\\\S\\\\*\" + endStringSuffix,\n                next: \"start\"\n            },\n            {\n                defaultToken: tokens.italic\n            }\n        ],\n        \"entity\": [\n            {\n                token: tokens.entity,\n                regex: \"\\\\S`\" + endStringSuffix,\n                next: \"start\"\n            },\n            {\n                defaultToken: tokens.entity\n            }\n        ],\n        \"link\": [\n            {\n                token: tokens.link,\n                regex: \"\\\\S`__?\" + endStringSuffix,\n                next: \"start\"\n            },\n            {\n                defaultToken: tokens.link\n            }\n        ],\n        \"comment\": [\n            {\n                token: tokens.comment,\n                regex: \"^ +.+$\",\n                next: \"comment\"\n            },\n            {\n                token: tokens.comment,\n                regex: '^$',\n                next: \"comment\"\n            },\n            {\n                token: \"empty\",\n                regex: \"\",\n                next: \"start\"\n            }\n        ]\n    };\n};\noop.inherits(RSTHighlightRules, TextHighlightRules);\nexports.RSTHighlightRules = RSTHighlightRules;\n\n});\n\nace.define(\"ace/mode/rst\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/rst_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar RSTHighlightRules = require(\"./rst_highlight_rules\").RSTHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = RSTHighlightRules;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.type = \"text\";\n    this.$id = \"ace/mode/rst\";\n    this.snippetFileId = \"ace/snippets/rst\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/rst\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
