{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-prolog.js"],
  "sourcesContent": ["ace.define(\"ace/mode/prolog_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/* This file was autogenerated from https://raw.github.com/stephenroller/prolog-tmbundle/master/Syntaxes/Prolog.tmLanguage (uuid: ) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar PrologHighlightRules = function () {\n    this.$rules = { start: [{ include: '#comment' },\n            { include: '#basic_fact' },\n            { include: '#rule' },\n            { include: '#directive' },\n            { include: '#fact' }],\n        '#atom': [{ token: 'constant.other.atom.prolog',\n                regex: '\\\\b[a-z][a-zA-Z0-9_]*\\\\b' },\n            { token: 'constant.numeric.prolog',\n                regex: '-?\\\\d+(?:\\\\.\\\\d+)?' },\n            { include: '#string' }],\n        '#basic_elem': [{ include: '#comment' },\n            { include: '#statement' },\n            { include: '#constants' },\n            { include: '#operators' },\n            { include: '#builtins' },\n            { include: '#list' },\n            { include: '#atom' },\n            { include: '#variable' }],\n        '#basic_fact': [{ token: ['entity.name.function.fact.basic.prolog',\n                    'punctuation.end.fact.basic.prolog'],\n                regex: '([a-z]\\\\w*)(\\\\.)' }],\n        '#builtins': [{ token: 'support.function.builtin.prolog',\n                regex: '\\\\b(?:abolish|abort|ancestors|arg|ascii|assert[az]|atom(?:ic)?|body|char|close|conc|concat|consult|define|definition|dynamic|dump|fail|file|free|free_proc|functor|getc|goal|halt|head|head|integer|length|listing|match_args|member|next_clause|nl|nonvar|nth|number|cvars|nvars|offset|op|print?|prompt|putc|quoted|ratom|read|redefine|rename|retract(?:all)?|see|seeing|seen|skip|spy|statistics|system|tab|tell|telling|term|time|told|univ|unlink_clause|unspy_predicate|var|write)\\\\b' }],\n        '#comment': [{ token: ['punctuation.definition.comment.prolog',\n                    'comment.line.percentage.prolog'],\n                regex: '(%)(.*$)' },\n            { token: 'punctuation.definition.comment.prolog',\n                regex: '/\\\\*',\n                push: [{ token: 'punctuation.definition.comment.prolog',\n                        regex: '\\\\*/',\n                        next: 'pop' },\n                    { defaultToken: 'comment.block.prolog' }] }],\n        '#constants': [{ token: 'constant.language.prolog',\n                regex: '\\\\b(?:true|false|yes|no)\\\\b' }],\n        '#directive': [{ token: 'keyword.operator.directive.prolog',\n                regex: ':-',\n                push: [{ token: 'meta.directive.prolog', regex: '\\\\.', next: 'pop' },\n                    { include: '#comment' },\n                    { include: '#statement' },\n                    { defaultToken: 'meta.directive.prolog' }] }],\n        '#expr': [{ include: '#comments' },\n            { token: 'meta.expression.prolog',\n                regex: '\\\\(',\n                push: [{ token: 'meta.expression.prolog', regex: '\\\\)', next: 'pop' },\n                    { include: '#expr' },\n                    { defaultToken: 'meta.expression.prolog' }] },\n            { token: 'keyword.control.cutoff.prolog', regex: '!' },\n            { token: 'punctuation.control.and.prolog', regex: ',' },\n            { token: 'punctuation.control.or.prolog', regex: ';' },\n            { include: '#basic_elem' }],\n        '#fact': [{ token: ['entity.name.function.fact.prolog',\n                    'punctuation.begin.fact.parameters.prolog'],\n                regex: '([a-z]\\\\w*)(\\\\()(?!.*:-)',\n                push: [{ token: ['punctuation.end.fact.parameters.prolog',\n                            'punctuation.end.fact.prolog'],\n                        regex: '(\\\\))(\\\\.?)',\n                        next: 'pop' },\n                    { include: '#parameter' },\n                    { defaultToken: 'meta.fact.prolog' }] }],\n        '#list': [{ token: 'punctuation.begin.list.prolog',\n                regex: '\\\\[(?=.*\\\\])',\n                push: [{ token: 'punctuation.end.list.prolog',\n                        regex: '\\\\]',\n                        next: 'pop' },\n                    { include: '#comment' },\n                    { token: 'punctuation.separator.list.prolog', regex: ',' },\n                    { token: 'punctuation.concat.list.prolog',\n                        regex: '\\\\|',\n                        push: [{ token: 'meta.list.concat.prolog',\n                                regex: '(?=\\\\s*\\\\])',\n                                next: 'pop' },\n                            { include: '#basic_elem' },\n                            { defaultToken: 'meta.list.concat.prolog' }] },\n                    { include: '#basic_elem' },\n                    { defaultToken: 'meta.list.prolog' }] }],\n        '#operators': [{ token: 'keyword.operator.prolog',\n                regex: '\\\\\\\\\\\\+|\\\\bnot\\\\b|\\\\bis\\\\b|->|[><]|[><\\\\\\\\:=]?=|(?:=\\\\\\\\|\\\\\\\\=)=' }],\n        '#parameter': [{ token: 'variable.language.anonymous.prolog',\n                regex: '\\\\b_\\\\b' },\n            { token: 'variable.parameter.prolog',\n                regex: '\\\\b[A-Z_]\\\\w*\\\\b' },\n            { token: 'punctuation.separator.parameters.prolog', regex: ',' },\n            { include: '#basic_elem' },\n            { token: 'text', regex: '[^\\\\s]' }],\n        '#rule': [{ token: 'meta.rule.prolog',\n                regex: '(?=[a-z]\\\\w*.*:-)',\n                push: [{ token: 'punctuation.rule.end.prolog',\n                        regex: '\\\\.',\n                        next: 'pop' },\n                    { token: 'meta.rule.signature.prolog',\n                        regex: '(?=[a-z]\\\\w*.*:-)',\n                        push: [{ token: 'meta.rule.signature.prolog',\n                                regex: '(?=:-)',\n                                next: 'pop' },\n                            { token: 'entity.name.function.rule.prolog',\n                                regex: '[a-z]\\\\w*(?=\\\\(|\\\\s*:-)' },\n                            { token: 'punctuation.rule.parameters.begin.prolog',\n                                regex: '\\\\(',\n                                push: [{ token: 'punctuation.rule.parameters.end.prolog',\n                                        regex: '\\\\)',\n                                        next: 'pop' },\n                                    { include: '#parameter' },\n                                    { defaultToken: 'meta.rule.parameters.prolog' }] },\n                            { defaultToken: 'meta.rule.signature.prolog' }] },\n                    { token: 'keyword.operator.definition.prolog',\n                        regex: ':-',\n                        push: [{ token: 'meta.rule.definition.prolog',\n                                regex: '(?=\\\\.)',\n                                next: 'pop' },\n                            { include: '#comment' },\n                            { include: '#expr' },\n                            { defaultToken: 'meta.rule.definition.prolog' }] },\n                    { defaultToken: 'meta.rule.prolog' }] }],\n        '#statement': [{ token: 'meta.statement.prolog',\n                regex: '(?=[a-z]\\\\w*\\\\()',\n                push: [{ token: 'punctuation.end.statement.parameters.prolog',\n                        regex: '\\\\)',\n                        next: 'pop' },\n                    { include: '#builtins' },\n                    { include: '#atom' },\n                    { token: 'punctuation.begin.statement.parameters.prolog',\n                        regex: '\\\\(',\n                        push: [{ token: 'meta.statement.parameters.prolog',\n                                regex: '(?=\\\\))',\n                                next: 'pop' },\n                            { token: 'punctuation.separator.statement.prolog', regex: ',' },\n                            { include: '#basic_elem' },\n                            { defaultToken: 'meta.statement.parameters.prolog' }] },\n                    { defaultToken: 'meta.statement.prolog' }] }],\n        '#string': [{ token: 'punctuation.definition.string.begin.prolog',\n                regex: '\\'',\n                push: [{ token: 'punctuation.definition.string.end.prolog',\n                        regex: '\\'',\n                        next: 'pop' },\n                    { token: 'constant.character.escape.prolog', regex: '\\\\\\\\.' },\n                    { token: 'constant.character.escape.quote.prolog',\n                        regex: '\\'\\'' },\n                    { defaultToken: 'string.quoted.single.prolog' }] }],\n        '#variable': [{ token: 'variable.language.anonymous.prolog',\n                regex: '\\\\b_\\\\b' },\n            { token: 'variable.other.prolog',\n                regex: '\\\\b[A-Z_][a-zA-Z0-9_]*\\\\b' }] };\n    this.normalizeRules();\n};\nPrologHighlightRules.metaData = { fileTypes: ['plg', 'prolog'],\n    foldingStartMarker: '(%\\\\s*region \\\\w*)|([a-z]\\\\w*.*:- ?)',\n    foldingStopMarker: '(%\\\\s*end(\\\\s*region)?)|(?=\\\\.)',\n    keyEquivalent: '^~P',\n    name: 'Prolog',\n    scopeName: 'source.prolog' };\noop.inherits(PrologHighlightRules, TextHighlightRules);\nexports.PrologHighlightRules = PrologHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/prolog\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/prolog_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar PrologHighlightRules = require(\"./prolog_highlight_rules\").PrologHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = PrologHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"%\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.$id = \"ace/mode/prolog\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/prolog\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
