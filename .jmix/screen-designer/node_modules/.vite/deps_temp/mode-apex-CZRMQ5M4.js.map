{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-apex.js"],
  "sourcesContent": ["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [{\n                token: \"comment.doc.tag\",\n                regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n            },\n            DocCommentHighlightRules.getTagRule(),\n            {\n                defaultToken: \"comment.doc\",\n                caseInsensitive: true\n            }]\n    };\n};\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\nDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\",\n        regex: \"\\\\/\\\\*(?=\\\\*)\",\n        next: start\n    };\n};\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\",\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/apex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\",\"ace/mode/doc_comment_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"../mode/text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = require(\"../mode/doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar ApexHighlightRules = function () {\n    var mainKeywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"activate|any|autonomous|begin|bigdecimal|byte|cast|char|collect|const\"\n            + \"|end|exit|export|float|goto|group|having|hint|import|inner|into|join|loop|number|object|of|outer\"\n            + \"|parallel|pragma|retrieve|returning|search|short|stat|synchronized|then|this_month\"\n            + \"|transaction|type|when\",\n        \"keyword\": \"private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final\"\n            + \"|and|array|as|asc|break|bulk|by|catch|class|commit|continue|convertcurrency\"\n            + \"|delete|desc|do|else|enum|extends|false|final|finally|for|from|future|global\"\n            + \"|if|implements|in|insert|instanceof|interface|last_90_days|last_month\"\n            + \"|last_n_days|last_week|like|limit|list|map|merge|new|next_90_days|next_month|next_n_days\"\n            + \"|next_week|not|null|nulls|on|or|override|package|return\"\n            + \"|rollback|savepoint|select|set|sort|super|testmethod|this|this_week|throw|today\"\n            + \"|tolabel|tomorrow|trigger|true|try|undelete|update|upsert|using|virtual|webservice\"\n            + \"|where|while|yesterday|switch|case|default\",\n        \"storage.type\": \"def|boolean|byte|char|short|int|float|pblob|date|datetime|decimal|double|id|integer|long|string|time|void|blob|Object\",\n        \"constant.language\": \"true|false|null|after|before|count|excludes|first|includes|last|order|sharing|with\",\n        \"support.function\": \"system|apex|label|apexpages|userinfo|schema\"\n    }, \"identifier\", true);\n    function keywordMapper(value) {\n        if (value.slice(-3) == \"__c\")\n            return \"support.function\";\n        return mainKeywordMapper(value);\n    }\n    function string(start, options) {\n        return {\n            regex: start + (options.multiline ? \"\" : \"(?=.)\"),\n            token: \"string.start\",\n            next: [{\n                    regex: options.escape,\n                    token: \"character.escape\"\n                }, {\n                    regex: options.error,\n                    token: \"error.invalid\"\n                }, {\n                    regex: start + (options.multiline ? \"\" : \"|$\"),\n                    token: \"string.end\",\n                    next: options.next || \"start\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n        };\n    }\n    function comments() {\n        return [{\n                token: \"comment\",\n                regex: \"\\\\/\\\\/(?=.)\",\n                next: [\n                    DocCommentHighlightRules.getTagRule(),\n                    { token: \"comment\", regex: \"$|^\", next: \"start\" },\n                    { defaultToken: \"comment\", caseInsensitive: true }\n                ]\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token: \"comment\",\n                regex: /\\/\\*/,\n                next: [\n                    DocCommentHighlightRules.getTagRule(),\n                    { token: \"comment\", regex: \"\\\\*\\\\/\", next: \"start\" },\n                    { defaultToken: \"comment\", caseInsensitive: true }\n                ]\n            }\n        ];\n    }\n    this.$rules = {\n        start: [\n            string(\"'\", {\n                escape: /\\\\[nb'\"\\\\]/,\n                error: /\\\\./,\n                multiline: false\n            }),\n            comments(\"c\"),\n            {\n                type: \"decoration\",\n                token: [\n                    \"meta.package.apex\",\n                    \"keyword.other.package.apex\",\n                    \"meta.package.apex\",\n                    \"storage.modifier.package.apex\",\n                    \"meta.package.apex\",\n                    \"punctuation.terminator.apex\"\n                ],\n                regex: /^(\\s*)(package)\\b(?:(\\s*)([^ ;$]+)(\\s*)((?:;)?))?/\n            }, {\n                regex: /@[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\n                token: \"constant.language\"\n            },\n            {\n                regex: /[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\n                token: keywordMapper\n            },\n            {\n                regex: \"`#%\",\n                token: \"error.invalid\"\n            }, {\n                token: \"constant.numeric\",\n                regex: /[+-]?\\d+(?:(?:\\.\\d*)?(?:[LlDdEe][+-]?\\d+)?)\\b|\\.\\d+[LlDdEe]/\n            }, {\n                token: \"keyword.operator\",\n                regex: /--|\\+\\+|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|[!$%&*+\\-~\\/^]=?/,\n                next: \"start\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[?:,;.]/,\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[]/,\n                next: \"maybe_soql\",\n                merge: false\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[({]/,\n                next: \"start\",\n                merge: false\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])}]/,\n                merge: false\n            }\n        ],\n        maybe_soql: [{\n                regex: /\\s+/,\n                token: \"text\"\n            }, {\n                regex: /(SELECT|FIND)\\b/,\n                token: \"keyword\",\n                caseInsensitive: true,\n                next: \"soql\"\n            }, {\n                regex: \"\",\n                token: \"none\",\n                next: \"start\"\n            }],\n        soql: [{\n                regex: \"(:?ASC|BY|CATEGORY|CUBE|DATA|DESC|END|FIND|FIRST|FOR|FROM|GROUP|HAVING|IN|LAST\"\n                    + \"|LIMIT|NETWORK|NULLS|OFFSET|ORDER|REFERENCE|RETURNING|ROLLUP|SCOPE|SELECT\"\n                    + \"|SNIPPET|TRACKING|TYPEOF|UPDATE|USING|VIEW|VIEWSTAT|WHERE|WITH|AND|OR)\\\\b\",\n                token: \"keyword\",\n                caseInsensitive: true\n            }, {\n                regex: \"(:?target_length|toLabel|convertCurrency|count|Contact|Account|User|FIELDS)\\\\b\",\n                token: \"support.function\",\n                caseInsensitive: true\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\]]/,\n                next: \"start\",\n                merge: false\n            },\n            string(\"'\", {\n                escape: /\\\\[nb'\"\\\\]/,\n                error: /\\\\./,\n                multiline: false,\n                next: \"soql\"\n            }),\n            string('\"', {\n                escape: /\\\\[nb'\"\\\\]/,\n                error: /\\\\./,\n                multiline: false,\n                next: \"soql\"\n            }),\n            {\n                regex: /\\\\./,\n                token: \"character.escape\"\n            },\n            {\n                regex: /[\\?\\&\\|\\!\\{\\}\\[\\]\\(\\)\\^\\~\\*\\:\\\"\\'\\+\\-\\,\\.=\\\\\\/]/,\n                token: \"keyword.operator\"\n            }],\n        \"log-start\": [{\n                token: \"timestamp.invisible\",\n                regex: /^[\\d:.() ]+\\|/,\n                next: \"log-header\"\n            }, {\n                token: \"timestamp.invisible\",\n                regex: /^  (Number of|Maximum)[^:]*:/,\n                next: \"log-comment\"\n            }, {\n                token: \"invisible\",\n                regex: /^Execute Anonymous:/,\n                next: \"log-comment\"\n            }, {\n                defaultToken: \"text\"\n            }],\n        \"log-comment\": [{\n                token: \"log-comment\",\n                regex: /.*$/,\n                next: \"log-start\"\n            }],\n        \"log-header\": [{\n                token: \"timestamp.invisible\",\n                regex: /((USER_DEBUG|\\[\\d+\\]|DEBUG)\\|)+/\n            },\n            {\n                token: \"keyword\",\n                regex: \"(?:EXECUTION_FINISHED|EXECUTION_STARTED|CODE_UNIT_STARTED\"\n                    + \"|CUMULATIVE_LIMIT_USAGE|LIMIT_USAGE_FOR_NS\"\n                    + \"|CUMULATIVE_LIMIT_USAGE_END|CODE_UNIT_FINISHED)\"\n            }, {\n                regex: \"\",\n                next: \"log-start\"\n            }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.normalizeRules();\n};\noop.inherits(ApexHighlightRules, TextHighlightRules);\nexports.ApexHighlightRules = ApexHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/apex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/apex_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/mode/behaviour/cstyle\"], function(require, exports, module){/* caption: Apex; extensions: apex,cls,trigger,tgr */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"../mode/text\").Mode;\nvar ApexHighlightRules = require(\"./apex_highlight_rules\").ApexHighlightRules;\nvar FoldMode = require(\"../mode/folding/cstyle\").FoldMode;\nvar CstyleBehaviour = require(\"../mode/behaviour/cstyle\").CstyleBehaviour;\nfunction ApexMode() {\n    TextMode.call(this);\n    this.HighlightRules = ApexHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = new CstyleBehaviour();\n}\noop.inherits(ApexMode, TextMode);\nApexMode.prototype.lineCommentStart = \"//\";\nApexMode.prototype.blockComment = {\n    start: \"/*\",\n    end: \"*/\"\n};\nexports.Mode = ApexMode;\n\n});                (function() {\n                    ace.require([\"ace/mode/apex\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": ";;;;;AAAA;AAAA;AAAA,QAAI,OAAO,wCAAuC,CAAC,WAAU,WAAU,UAAS,eAAc,+BAA+B,GAAG,SAASA,UAASC,UAASC,SAAO;AAAC;AACnK,UAAI,MAAMF,SAAQ,YAAY;AAC9B,UAAI,qBAAqBA,SAAQ,wBAAwB,EAAE;AAC3D,UAAI,2BAA2B,WAAY;AACvC,aAAK,SAAS;AAAA,UACV,SAAS;AAAA,YAAC;AAAA,cACF,OAAO;AAAA,cACP,OAAO;AAAA;AAAA,YACX;AAAA,YACA,yBAAyB,WAAW;AAAA,YACpC;AAAA,cACI,cAAc;AAAA,cACd,iBAAiB;AAAA,YACrB;AAAA,UAAC;AAAA,QACT;AAAA,MACJ;AACA,UAAI,SAAS,0BAA0B,kBAAkB;AACzD,+BAAyB,aAAa,SAAU,OAAO;AACnD,eAAO;AAAA,UACH,OAAO;AAAA,UACP,OAAO;AAAA,QACX;AAAA,MACJ;AACA,+BAAyB,eAAe,SAAU,OAAO;AACrD,eAAO;AAAA,UACH,OAAO;AAAA,UACP,OAAO;AAAA,UACP,MAAM;AAAA,QACV;AAAA,MACJ;AACA,+BAAyB,aAAa,SAAU,OAAO;AACnD,eAAO;AAAA,UACH,OAAO;AAAA,UACP,OAAO;AAAA,UACP,MAAM;AAAA,QACV;AAAA,MACJ;AACA,MAAAC,SAAQ,2BAA2B;AAAA,IAEnC,CAAC;AAED,QAAI,OAAO,iCAAgC,CAAC,WAAU,WAAU,UAAS,eAAc,iCAAgC,sCAAsC,GAAG,SAASD,UAASC,UAASC,SAAO;AAAC;AACnM,UAAI,MAAMF,SAAQ,YAAY;AAC9B,UAAI,qBAAqBA,SAAQ,8BAA8B,EAAE;AACjE,UAAI,2BAA2BA,SAAQ,qCAAqC,EAAE;AAC9E,UAAI,qBAAqB,WAAY;AACjC,YAAI,oBAAoB,KAAK,oBAAoB;AAAA,UAC7C,qBAAqB;AAAA,UAIrB,WAAW;AAAA,UASX,gBAAgB;AAAA,UAChB,qBAAqB;AAAA,UACrB,oBAAoB;AAAA,QACxB,GAAG,cAAc,IAAI;AACrB,iBAAS,cAAc,OAAO;AAC1B,cAAI,MAAM,MAAM,EAAE,KAAK;AACnB,mBAAO;AACX,iBAAO,kBAAkB,KAAK;AAAA,QAClC;AACA,iBAAS,OAAO,OAAO,SAAS;AAC5B,iBAAO;AAAA,YACH,OAAO,SAAS,QAAQ,YAAY,KAAK;AAAA,YACzC,OAAO;AAAA,YACP,MAAM,CAAC;AAAA,cACC,OAAO,QAAQ;AAAA,cACf,OAAO;AAAA,YACX,GAAG;AAAA,cACC,OAAO,QAAQ;AAAA,cACf,OAAO;AAAA,YACX,GAAG;AAAA,cACC,OAAO,SAAS,QAAQ,YAAY,KAAK;AAAA,cACzC,OAAO;AAAA,cACP,MAAM,QAAQ,QAAQ;AAAA,YAC1B,GAAG;AAAA,cACC,cAAc;AAAA,YAClB,CAAC;AAAA,UACT;AAAA,QACJ;AACA,iBAAS,WAAW;AAChB,iBAAO;AAAA,YAAC;AAAA,cACA,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,gBACF,yBAAyB,WAAW;AAAA,gBACpC,EAAE,OAAO,WAAW,OAAO,OAAO,MAAM,QAAQ;AAAA,gBAChD,EAAE,cAAc,WAAW,iBAAiB,KAAK;AAAA,cACrD;AAAA,YACJ;AAAA,YACA,yBAAyB,aAAa,WAAW;AAAA,YACjD;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,gBACF,yBAAyB,WAAW;AAAA,gBACpC,EAAE,OAAO,WAAW,OAAO,UAAU,MAAM,QAAQ;AAAA,gBACnD,EAAE,cAAc,WAAW,iBAAiB,KAAK;AAAA,cACrD;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,SAAS;AAAA,UACV,OAAO;AAAA,YACH,OAAO,KAAK;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,WAAW;AAAA,YACf,CAAC;AAAA,YACD,SAAS,GAAG;AAAA,YACZ;AAAA,cACI,MAAM;AAAA,cACN,OAAO;AAAA,gBACH;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACJ;AAAA,cACA,OAAO;AAAA,YACX;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,YACV;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,YACV;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,YACX;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,YACX;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,UACJ;AAAA,UACA,YAAY,CAAC;AAAA,YACL,OAAO;AAAA,YACP,OAAO;AAAA,UACX,GAAG;AAAA,YACC,OAAO;AAAA,YACP,OAAO;AAAA,YACP,iBAAiB;AAAA,YACjB,MAAM;AAAA,UACV,GAAG;AAAA,YACC,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM;AAAA,UACV,CAAC;AAAA,UACL,MAAM;AAAA,YAAC;AAAA,cACC,OAAO;AAAA,cAGP,OAAO;AAAA,cACP,iBAAiB;AAAA,YACrB;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,cACP,iBAAiB;AAAA,YACrB;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,YACX;AAAA,YACA,OAAO,KAAK;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,WAAW;AAAA,cACX,MAAM;AAAA,YACV,CAAC;AAAA,YACD,OAAO,KAAK;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,WAAW;AAAA,cACX,MAAM;AAAA,YACV,CAAC;AAAA,YACD;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,UAAC;AAAA,UACL,aAAa,CAAC;AAAA,YACN,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM;AAAA,UACV,GAAG;AAAA,YACC,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM;AAAA,UACV,GAAG;AAAA,YACC,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM;AAAA,UACV,GAAG;AAAA,YACC,cAAc;AAAA,UAClB,CAAC;AAAA,UACL,eAAe,CAAC;AAAA,YACR,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM;AAAA,UACV,CAAC;AAAA,UACL,cAAc;AAAA,YAAC;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,YACX;AAAA,YACA;AAAA,cACI,OAAO;AAAA,cACP,OAAO;AAAA,YAGX;AAAA,YAAG;AAAA,cACC,OAAO;AAAA,cACP,MAAM;AAAA,YACV;AAAA,UAAC;AAAA,QACT;AACA,aAAK,WAAW,0BAA0B,QAAQ,CAAC,yBAAyB,WAAW,OAAO,CAAC,CAAC;AAChG,aAAK,eAAe;AAAA,MACxB;AACA,UAAI,SAAS,oBAAoB,kBAAkB;AACnD,MAAAC,SAAQ,qBAAqB;AAAA,IAE7B,CAAC;AAED,QAAI,OAAO,2BAA0B,CAAC,WAAU,WAAU,UAAS,eAAc,aAAY,4BAA4B,GAAG,SAASD,UAASC,UAASC,SAAO;AAAC;AAC/J,UAAI,MAAMF,SAAQ,eAAe;AACjC,UAAI,QAAQA,SAAQ,aAAa,EAAE;AACnC,UAAI,eAAeA,SAAQ,aAAa,EAAE;AAC1C,UAAI,WAAWC,SAAQ,WAAW,SAAU,cAAc;AACtD,YAAI,cAAc;AACd,eAAK,qBAAqB,IAAI,OAAO,KAAK,mBAAmB,OAAO,QAAQ,aAAa,MAAM,aAAa,KAAK,CAAC;AAClH,eAAK,oBAAoB,IAAI,OAAO,KAAK,kBAAkB,OAAO,QAAQ,aAAa,MAAM,aAAa,GAAG,CAAC;AAAA,QAClH;AAAA,MACJ;AACA,UAAI,SAAS,UAAU,YAAY;AACnC,OAAC,WAAY;AACT,aAAK,qBAAqB;AAC1B,aAAK,oBAAoB;AACzB,aAAK,2BAA2B;AAChC,aAAK,2BAA2B;AAChC,aAAK,gBAAgB;AACrB,aAAK,qBAAqB,KAAK;AAC/B,aAAK,gBAAgB,SAAU,SAAS,WAAW,KAAK;AACpD,cAAI,OAAO,QAAQ,QAAQ,GAAG;AAC9B,cAAI,KAAK,yBAAyB,KAAK,IAAI,GAAG;AAC1C,gBAAI,CAAC,KAAK,cAAc,KAAK,IAAI,KAAK,CAAC,KAAK,yBAAyB,KAAK,IAAI;AAC1E,qBAAO;AAAA,UACf;AACA,cAAI,KAAK,KAAK,mBAAmB,SAAS,WAAW,GAAG;AACxD,cAAI,CAAC,MAAM,KAAK,cAAc,KAAK,IAAI;AACnC,mBAAO;AACX,iBAAO;AAAA,QACX;AACA,aAAK,qBAAqB,SAAU,SAAS,WAAW,KAAK,gBAAgB;AACzE,cAAI,OAAO,QAAQ,QAAQ,GAAG;AAC9B,cAAI,KAAK,cAAc,KAAK,IAAI;AAC5B,mBAAO,KAAK,sBAAsB,SAAS,MAAM,GAAG;AACxD,cAAI,QAAQ,KAAK,MAAM,KAAK,kBAAkB;AAC9C,cAAI,OAAO;AACP,gBAAI,IAAI,MAAM;AACd,gBAAI,MAAM,CAAC;AACP,qBAAO,KAAK,oBAAoB,SAAS,MAAM,CAAC,GAAG,KAAK,CAAC;AAC7D,gBAAI,QAAQ,QAAQ,oBAAoB,KAAK,IAAI,MAAM,CAAC,EAAE,QAAQ,CAAC;AACnE,gBAAI,SAAS,CAAC,MAAM,YAAY,GAAG;AAC/B,kBAAI,gBAAgB;AAChB,wBAAQ,KAAK,gBAAgB,SAAS,GAAG;AAAA,cAC7C,WACS,aAAa;AAClB,wBAAQ;AAAA,YAChB;AACA,mBAAO;AAAA,UACX;AACA,cAAI,cAAc;AACd;AACJ,cAAI,QAAQ,KAAK,MAAM,KAAK,iBAAiB;AAC7C,cAAI,OAAO;AACP,gBAAI,IAAI,MAAM,QAAQ,MAAM,CAAC,EAAE;AAC/B,gBAAI,MAAM,CAAC;AACP,qBAAO,KAAK,oBAAoB,SAAS,MAAM,CAAC,GAAG,KAAK,CAAC;AAC7D,mBAAO,QAAQ,oBAAoB,KAAK,GAAG,EAAE;AAAA,UACjD;AAAA,QACJ;AACA,aAAK,kBAAkB,SAAU,SAAS,KAAK;AAC3C,cAAI,OAAO,QAAQ,QAAQ,GAAG;AAC9B,cAAI,cAAc,KAAK,OAAO,IAAI;AAClC,cAAI,WAAW;AACf,cAAI,cAAc,KAAK;AACvB,gBAAM,MAAM;AACZ,cAAI,SAAS;AACb,cAAI,SAAS,QAAQ,UAAU;AAC/B,iBAAO,EAAE,MAAM,QAAQ;AACnB,mBAAO,QAAQ,QAAQ,GAAG;AAC1B,gBAAI,SAAS,KAAK,OAAO,IAAI;AAC7B,gBAAI,WAAW;AACX;AACJ,gBAAI,cAAc;AACd;AACJ,gBAAI,WAAW,KAAK,mBAAmB,SAAS,OAAO,GAAG;AAC1D,gBAAI,UAAU;AACV,kBAAI,SAAS,MAAM,OAAO,UAAU;AAChC;AAAA,cACJ,WACS,SAAS,YAAY,GAAG;AAC7B,sBAAM,SAAS,IAAI;AAAA,cACvB,WACS,eAAe,QAAQ;AAC5B;AAAA,cACJ;AAAA,YACJ;AACA,qBAAS;AAAA,UACb;AACA,iBAAO,IAAI,MAAM,UAAU,aAAa,QAAQ,QAAQ,QAAQ,MAAM,EAAE,MAAM;AAAA,QAClF;AACA,aAAK,wBAAwB,SAAU,SAAS,MAAM,KAAK;AACvD,cAAI,cAAc,KAAK,OAAO,MAAM;AACpC,cAAI,SAAS,QAAQ,UAAU;AAC/B,cAAI,WAAW;AACf,cAAI,KAAK;AACT,cAAI,QAAQ;AACZ,iBAAO,EAAE,MAAM,QAAQ;AACnB,mBAAO,QAAQ,QAAQ,GAAG;AAC1B,gBAAI,IAAI,GAAG,KAAK,IAAI;AACpB,gBAAI,CAAC;AACD;AACJ,gBAAI,EAAE,CAAC;AACH;AAAA;AAEA;AACJ,gBAAI,CAAC;AACD;AAAA,UACR;AACA,cAAI,SAAS;AACb,cAAI,SAAS,UAAU;AACnB,mBAAO,IAAI,MAAM,UAAU,aAAa,QAAQ,KAAK,MAAM;AAAA,UAC/D;AAAA,QACJ;AAAA,MACJ,GAAG,KAAK,SAAS,SAAS;AAAA,IAE1B,CAAC;AAED,QAAI,OAAO,iBAAgB,CAAC,WAAU,WAAU,UAAS,eAAc,iBAAgB,iCAAgC,2BAA0B,2BAA2B,GAAG,SAASD,UAASC,UAASC,SAAO;AACjN;AACA,UAAI,MAAMF,SAAQ,YAAY;AAC9B,UAAI,WAAWA,SAAQ,cAAc,EAAE;AACvC,UAAI,qBAAqBA,SAAQ,wBAAwB,EAAE;AAC3D,UAAI,WAAWA,SAAQ,wBAAwB,EAAE;AACjD,UAAI,kBAAkBA,SAAQ,0BAA0B,EAAE;AAC1D,eAAS,WAAW;AAChB,iBAAS,KAAK,IAAI;AAClB,aAAK,iBAAiB;AACtB,aAAK,eAAe,IAAI,SAAS;AACjC,aAAK,aAAa,IAAI,gBAAgB;AAAA,MAC1C;AACA,UAAI,SAAS,UAAU,QAAQ;AAC/B,eAAS,UAAU,mBAAmB;AACtC,eAAS,UAAU,eAAe;AAAA,QAC9B,OAAO;AAAA,QACP,KAAK;AAAA,MACT;AACA,MAAAC,SAAQ,OAAO;AAAA,IAEf,CAAC;AAAkB,KAAC,WAAW;AACX,UAAI,QAAQ,CAAC,eAAe,GAAG,SAAS,GAAG;AACvC,YAAI,OAAO,UAAU,YAAY,OAAO,WAAW,YAAY,QAAQ;AACnE,iBAAO,UAAU;AAAA,QACrB;AAAA,MACJ,CAAC;AAAA,IACL,GAAG;AAAA;AAAA;",
  "names": ["require", "exports", "module"]
}
