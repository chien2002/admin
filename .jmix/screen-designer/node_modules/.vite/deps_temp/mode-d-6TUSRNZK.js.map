{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-d.js"],
  "sourcesContent": ["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [{\n                token: \"comment.doc.tag\",\n                regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n            },\n            DocCommentHighlightRules.getTagRule(),\n            {\n                defaultToken: \"comment.doc\",\n                caseInsensitive: true\n            }]\n    };\n};\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\nDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\",\n        regex: \"\\\\/\\\\*(?=\\\\*)\",\n        next: start\n    };\n};\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\",\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/d_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DHighlightRules = function () {\n    var keywords = (\"this|super|import|module|body|mixin|__traits|invariant|alias|asm|delete|\" +\n        \"typeof|typeid|sizeof|cast|new|in|is|typedef|__vector|__parameters\");\n    var keywordControls = (\"break|case|continue|default|do|else|for|foreach|foreach_reverse|goto|if|\" +\n        \"return|switch|while|catch|try|throw|finally|version|assert|unittest|with\");\n    var types = (\"auto|bool|char|dchar|wchar|byte|ubyte|float|double|real|\" +\n        \"cfloat|creal|cdouble|cent|ifloat|ireal|idouble|\" +\n        \"int|long|short|void|uint|ulong|ushort|ucent|\" +\n        \"function|delegate|string|wstring|dstring|size_t|ptrdiff_t|hash_t|Object\");\n    var modifiers = (\"abstract|align|debug|deprecated|export|extern|const|final|in|inout|out|\" +\n        \"ref|immutable|lazy|nothrow|override|package|pragma|private|protected|\" +\n        \"public|pure|scope|shared|__gshared|synchronized|static|volatile\");\n    var storages = (\"class|struct|union|template|interface|enum|macro\");\n    var stringEscapesSeq = {\n        token: \"constant.language.escape\",\n        regex: \"\\\\\\\\(?:(?:x[0-9A-F]{2})|(?:[0-7]{1,3})|(?:['\\\"\\\\?0abfnrtv\\\\\\\\])|\" +\n            \"(?:u[0-9a-fA-F]{4})|(?:U[0-9a-fA-F]{8}))\"\n    };\n    var builtinConstants = (\"null|true|false|\" +\n        \"__DATE__|__EOF__|__TIME__|__TIMESTAMP__|__VENDOR__|__VERSION__|\" +\n        \"__FILE__|__MODULE__|__LINE__|__FUNCTION__|__PRETTY_FUNCTION__\");\n    var operators = (\"/|/\\\\=|&|&\\\\=|&&|\\\\|\\\\|\\\\=|\\\\|\\\\||\\\\-|\\\\-\\\\=|\\\\-\\\\-|\\\\+|\" +\n        \"\\\\+\\\\=|\\\\+\\\\+|\\\\<|\\\\<\\\\=|\\\\<\\\\<|\\\\<\\\\<\\\\=|\\\\<\\\\>|\\\\<\\\\>\\\\=|\\\\>|\\\\>\\\\=|\\\\>\\\\>\\\\=|\" +\n        \"\\\\>\\\\>\\\\>\\\\=|\\\\>\\\\>|\\\\>\\\\>\\\\>|\\\\!|\\\\!\\\\=|\\\\!\\\\<\\\\>|\\\\!\\\\<\\\\>\\\\=|\\\\!\\\\<|\\\\!\\\\<\\\\=|\" +\n        \"\\\\!\\\\>|\\\\!\\\\>\\\\=|\\\\?|\\\\$|\\\\=|\\\\=\\\\=|\\\\*|\\\\*\\\\=|%|%\\\\=|\" +\n        \"\\\\^|\\\\^\\\\=|\\\\^\\\\^|\\\\^\\\\^\\\\=|~|~\\\\=|\\\\=\\\\>|#\");\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n        \"keyword.modifier\": modifiers,\n        \"keyword.control\": keywordControls,\n        \"keyword.type\": types,\n        \"keyword\": keywords,\n        \"keyword.storage\": storages,\n        \"punctation\": \"\\\\.|\\\\,|;|\\\\.\\\\.|\\\\.\\\\.\\\\.\",\n        \"keyword.operator\": operators,\n        \"constant.language\": builtinConstants\n    }, \"identifier\");\n    var identifierRe = \"[a-zA-Z_\\u00a1-\\uffff][a-zA-Z\\\\d_\\u00a1-\\uffff]*\\\\b\";\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment\",\n                regex: \"\\\\/\\\\/.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token: \"comment\",\n                regex: \"\\\\/\\\\*\",\n                next: \"star-comment\"\n            }, {\n                token: \"comment.shebang\",\n                regex: \"^\\\\s*#!.*\"\n            }, {\n                token: \"comment\",\n                regex: \"\\\\/\\\\+\",\n                next: \"plus-comment\"\n            }, {\n                onMatch: function (value, currentState, state) {\n                    state.unshift(this.next, value.substr(2));\n                    return \"string\";\n                },\n                regex: 'q\"(?:[\\\\[\\\\(\\\\{\\\\<]+)',\n                next: 'operator-heredoc-string'\n            }, {\n                onMatch: function (value, currentState, state) {\n                    state.unshift(this.next, value.substr(2));\n                    return \"string\";\n                },\n                regex: 'q\"(?:[a-zA-Z_]+)$',\n                next: 'identifier-heredoc-string'\n            }, {\n                token: \"string\",\n                regex: '[xr]?\"',\n                next: \"quote-string\"\n            }, {\n                token: \"string\",\n                regex: '[xr]?`',\n                next: \"backtick-string\"\n            }, {\n                token: \"string\",\n                regex: \"[xr]?['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?['][cdw]?\"\n            }, {\n                token: [\"keyword\", \"text\", \"paren.lparen\"],\n                regex: /(asm)(\\s*)({)/,\n                next: \"d-asm\"\n            }, {\n                token: [\"keyword\", \"text\", \"paren.lparen\", \"constant.language\"],\n                regex: \"(__traits)(\\\\s*)(\\\\()(\" + identifierRe + \")\"\n            }, {\n                token: [\"keyword\", \"text\", \"variable.module\"],\n                regex: \"(import|module)(\\\\s+)((?:\" + identifierRe + \"\\\\.?)*)\"\n            }, {\n                token: [\"keyword.storage\", \"text\", \"entity.name.type\"],\n                regex: \"(\" + storages + \")(\\\\s*)(\" + identifierRe + \")\"\n            }, {\n                token: [\"keyword\", \"text\", \"variable.storage\", \"text\"],\n                regex: \"(alias|typedef)(\\\\s*)(\" + identifierRe + \")(\\\\s*)\"\n            }, {\n                token: \"constant.numeric\",\n                regex: \"0[xX][0-9a-fA-F_]+(l|ul|u|f|F|L|U|UL)?\\\\b\"\n            }, {\n                token: \"constant.numeric\",\n                regex: \"[+-]?\\\\d[\\\\d_]*(?:(?:\\\\.[\\\\d_]*)?(?:[eE][+-]?[\\\\d_]+)?)?(l|ul|u|f|F|L|U|UL)?\\\\b\"\n            }, {\n                token: \"entity.other.attribute-name\",\n                regex: \"@\" + identifierRe\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n            }, {\n                token: \"keyword.operator\",\n                regex: operators\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.|\\\\:\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[[({]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        \"star-comment\": [\n            {\n                token: \"comment\",\n                regex: \"\\\\*\\\\/\",\n                next: \"start\"\n            }, {\n                defaultToken: 'comment'\n            }\n        ],\n        \"plus-comment\": [\n            {\n                token: \"comment\",\n                regex: \"\\\\+\\\\/\",\n                next: \"start\"\n            }, {\n                defaultToken: 'comment'\n            }\n        ],\n        \"quote-string\": [\n            stringEscapesSeq,\n            {\n                token: \"string\",\n                regex: '\"[cdw]?',\n                next: \"start\"\n            }, {\n                defaultToken: 'string'\n            }\n        ],\n        \"backtick-string\": [\n            stringEscapesSeq,\n            {\n                token: \"string\",\n                regex: '`[cdw]?',\n                next: \"start\"\n            }, {\n                defaultToken: 'string'\n            }\n        ],\n        \"operator-heredoc-string\": [\n            {\n                onMatch: function (value, currentState, state) {\n                    value = value.substring(value.length - 2, value.length - 1);\n                    var map = { '>': '<', ']': '[', ')': '(', '}': '{' };\n                    if (Object.keys(map).indexOf(value) != -1)\n                        value = map[value];\n                    if (value != state[1])\n                        return \"string\";\n                    state.shift();\n                    state.shift();\n                    return \"string\";\n                },\n                regex: '(?:[\\\\]\\\\)}>]+)\"',\n                next: 'start'\n            }, {\n                token: 'string',\n                regex: '[^\\\\]\\\\)}>]+'\n            }\n        ],\n        \"identifier-heredoc-string\": [\n            {\n                onMatch: function (value, currentState, state) {\n                    value = value.substring(0, value.length - 1);\n                    if (value != state[1])\n                        return \"string\";\n                    state.shift();\n                    state.shift();\n                    return \"string\";\n                },\n                regex: '^(?:[A-Za-z_][a-zA-Z0-9]+)\"',\n                next: 'start'\n            }, {\n                token: 'string',\n                regex: '[^\\\\]\\\\)}>]+'\n            }\n        ],\n        \"d-asm\": [\n            {\n                token: \"paren.rparen\",\n                regex: \"\\\\}\",\n                next: \"start\"\n            }, {\n                token: 'keyword.instruction',\n                regex: '[a-zA-Z]+',\n                next: 'd-asm-instruction'\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        'd-asm-instruction': [\n            {\n                token: 'constant.language',\n                regex: /AL|AH|AX|EAX|BL|BH|BX|EBX|CL|CH|CX|ECX|DL|DH|DX|EDX|BP|EBP|SP|ESP|DI|EDI|SI|ESI/i\n            }, {\n                token: 'identifier',\n                regex: '[a-zA-Z]+'\n            }, {\n                token: 'string',\n                regex: '\"[^\"]*\"'\n            }, {\n                token: 'comment',\n                regex: '//.*$'\n            }, {\n                token: 'constant.numeric',\n                regex: '[0-9.xA-F]+'\n            }, {\n                token: 'punctuation.operator',\n                regex: '\\\\,'\n            }, {\n                token: 'punctuation.operator',\n                regex: ';',\n                next: 'd-asm'\n            }, {\n                token: 'text',\n                regex: '\\\\s+'\n            }\n        ]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n};\nDHighlightRules.metaData = {\n    comment: 'D language',\n    fileTypes: ['d', 'di'],\n    firstLineMatch: '^#!.*\\\\b[glr]?dmd\\\\b.',\n    foldingStartMarker: '(?x)/\\\\*\\\\*(?!\\\\*)|^(?![^{]*?//|[^{]*?/\\\\*(?!.*?\\\\*/.*?\\\\{)).*?\\\\{\\\\s*($|//|/\\\\*(?!.*?\\\\*/.*\\\\S))',\n    foldingStopMarker: '(?<!\\\\*)\\\\*\\\\*/|^\\\\s*\\\\}',\n    keyEquivalent: '^~D',\n    name: 'D',\n    scopeName: 'source.d'\n};\noop.inherits(DHighlightRules, TextHighlightRules);\nexports.DHighlightRules = DHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/d\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/d_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar DHighlightRules = require(\"./d_highlight_rules\").DHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = DHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.$id = \"ace/mode/d\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/d\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
