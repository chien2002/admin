{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/ext-elastic_tabstops_lite.js"],
  "sourcesContent": ["ace.define(\"ace/ext/elastic_tabstops_lite\",[\"require\",\"exports\",\"module\",\"ace/editor\",\"ace/config\"], function(require, exports, module){\"use strict\";\nvar ElasticTabstopsLite = /** @class */ (function () {\n    function ElasticTabstopsLite(editor) {\n        this.$editor = editor;\n        var self = this;\n        var changedRows = [];\n        var recordChanges = false;\n        this.onAfterExec = function () {\n            recordChanges = false;\n            self.processRows(changedRows);\n            changedRows = [];\n        };\n        this.onExec = function () {\n            recordChanges = true;\n        };\n        this.onChange = function (delta) {\n            if (recordChanges) {\n                if (changedRows.indexOf(delta.start.row) == -1)\n                    changedRows.push(delta.start.row);\n                if (delta.end.row != delta.start.row)\n                    changedRows.push(delta.end.row);\n            }\n        };\n    }\n    ElasticTabstopsLite.prototype.processRows = function (rows) {\n        this.$inChange = true;\n        var checkedRows = [];\n        for (var r = 0, rowCount = rows.length; r < rowCount; r++) {\n            var row = rows[r];\n            if (checkedRows.indexOf(row) > -1)\n                continue;\n            var cellWidthObj = this.$findCellWidthsForBlock(row);\n            var cellWidths = this.$setBlockCellWidthsToMax(cellWidthObj.cellWidths);\n            var rowIndex = cellWidthObj.firstRow;\n            for (var w = 0, l = cellWidths.length; w < l; w++) {\n                var widths = cellWidths[w];\n                checkedRows.push(rowIndex);\n                this.$adjustRow(rowIndex, widths);\n                rowIndex++;\n            }\n        }\n        this.$inChange = false;\n    };\n    ElasticTabstopsLite.prototype.$findCellWidthsForBlock = function (row) {\n        var cellWidths = [], widths;\n        var rowIter = row;\n        while (rowIter >= 0) {\n            widths = this.$cellWidthsForRow(rowIter);\n            if (widths.length == 0)\n                break;\n            cellWidths.unshift(widths);\n            rowIter--;\n        }\n        var firstRow = rowIter + 1;\n        rowIter = row;\n        var numRows = this.$editor.session.getLength();\n        while (rowIter < numRows - 1) {\n            rowIter++;\n            widths = this.$cellWidthsForRow(rowIter);\n            if (widths.length == 0)\n                break;\n            cellWidths.push(widths);\n        }\n        return { cellWidths: cellWidths, firstRow: firstRow };\n    };\n    ElasticTabstopsLite.prototype.$cellWidthsForRow = function (row) {\n        var selectionColumns = this.$selectionColumnsForRow(row);\n        var tabs = [-1].concat(this.$tabsForRow(row));\n        var widths = tabs.map(function (el) { return 0; }).slice(1);\n        var line = this.$editor.session.getLine(row);\n        for (var i = 0, len = tabs.length - 1; i < len; i++) {\n            var leftEdge = tabs[i] + 1;\n            var rightEdge = tabs[i + 1];\n            var rightmostSelection = this.$rightmostSelectionInCell(selectionColumns, rightEdge);\n            var cell = line.substring(leftEdge, rightEdge);\n            widths[i] = Math.max(cell.replace(/\\s+$/g, '').length, rightmostSelection - leftEdge);\n        }\n        return widths;\n    };\n    ElasticTabstopsLite.prototype.$selectionColumnsForRow = function (row) {\n        var selections = [], cursor = this.$editor.getCursorPosition();\n        if (this.$editor.session.getSelection().isEmpty()) {\n            if (row == cursor.row)\n                selections.push(cursor.column);\n        }\n        return selections;\n    };\n    ElasticTabstopsLite.prototype.$setBlockCellWidthsToMax = function (cellWidths) {\n        var startingNewBlock = true, blockStartRow, blockEndRow, maxWidth;\n        var columnInfo = this.$izip_longest(cellWidths);\n        for (var c = 0, l = columnInfo.length; c < l; c++) {\n            var column = columnInfo[c];\n            if (!column.push) {\n                console.error(column);\n                continue;\n            }\n            column.push(NaN);\n            for (var r = 0, s = column.length; r < s; r++) {\n                var width = column[r];\n                if (startingNewBlock) {\n                    blockStartRow = r;\n                    maxWidth = 0;\n                    startingNewBlock = false;\n                }\n                if (isNaN(width)) {\n                    blockEndRow = r;\n                    for (var j = blockStartRow; j < blockEndRow; j++) {\n                        cellWidths[j][c] = maxWidth;\n                    }\n                    startingNewBlock = true;\n                }\n                maxWidth = Math.max(maxWidth, width);\n            }\n        }\n        return cellWidths;\n    };\n    ElasticTabstopsLite.prototype.$rightmostSelectionInCell = function (selectionColumns, cellRightEdge) {\n        var rightmost = 0;\n        if (selectionColumns.length) {\n            var lengths = [];\n            for (var s = 0, length = selectionColumns.length; s < length; s++) {\n                if (selectionColumns[s] <= cellRightEdge)\n                    lengths.push(s);\n                else\n                    lengths.push(0);\n            }\n            rightmost = Math.max.apply(Math, lengths);\n        }\n        return rightmost;\n    };\n    ElasticTabstopsLite.prototype.$tabsForRow = function (row) {\n        var rowTabs = [], line = this.$editor.session.getLine(row), re = /\\t/g, match;\n        while ((match = re.exec(line)) != null) {\n            rowTabs.push(match.index);\n        }\n        return rowTabs;\n    };\n    ElasticTabstopsLite.prototype.$adjustRow = function (row, widths) {\n        var rowTabs = this.$tabsForRow(row);\n        if (rowTabs.length == 0)\n            return;\n        var bias = 0, location = -1;\n        var expandedSet = this.$izip(widths, rowTabs);\n        for (var i = 0, l = expandedSet.length; i < l; i++) {\n            var w = expandedSet[i][0], it = expandedSet[i][1];\n            location += 1 + w;\n            it += bias;\n            var difference = location - it;\n            if (difference == 0)\n                continue;\n            var partialLine = this.$editor.session.getLine(row).substr(0, it);\n            var strippedPartialLine = partialLine.replace(/\\s*$/g, \"\");\n            var ispaces = partialLine.length - strippedPartialLine.length;\n            if (difference > 0) {\n                this.$editor.session.getDocument().insertInLine({ row: row, column: it + 1 }, Array(difference + 1).join(\" \") + \"\\t\");\n                this.$editor.session.getDocument().removeInLine(row, it, it + 1);\n                bias += difference;\n            }\n            if (difference < 0 && ispaces >= -difference) {\n                this.$editor.session.getDocument().removeInLine(row, it + difference, it);\n                bias += difference;\n            }\n        }\n    };\n    ElasticTabstopsLite.prototype.$izip_longest = function (iterables) {\n        if (!iterables[0])\n            return [];\n        var longest = iterables[0].length;\n        var iterablesLength = iterables.length;\n        for (var i = 1; i < iterablesLength; i++) {\n            var iLength = iterables[i].length;\n            if (iLength > longest)\n                longest = iLength;\n        }\n        var expandedSet = [];\n        for (var l = 0; l < longest; l++) {\n            var set = [];\n            for (var i = 0; i < iterablesLength; i++) {\n                if (iterables[i][l] === \"\")\n                    set.push(NaN);\n                else\n                    set.push(iterables[i][l]);\n            }\n            expandedSet.push(set);\n        }\n        return expandedSet;\n    };\n    ElasticTabstopsLite.prototype.$izip = function (widths, tabs) {\n        var size = widths.length >= tabs.length ? tabs.length : widths.length;\n        var expandedSet = [];\n        for (var i = 0; i < size; i++) {\n            var set = [widths[i], tabs[i]];\n            expandedSet.push(set);\n        }\n        return expandedSet;\n    };\n    return ElasticTabstopsLite;\n}());\nexports.ElasticTabstopsLite = ElasticTabstopsLite;\nvar Editor = require(\"../editor\").Editor;\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    useElasticTabstops: {\n        set: function (val) {\n            if (val) {\n                if (!this.elasticTabstops)\n                    this.elasticTabstops = new ElasticTabstopsLite(this);\n                this.commands.on(\"afterExec\", this.elasticTabstops.onAfterExec);\n                this.commands.on(\"exec\", this.elasticTabstops.onExec);\n                this.on(\"change\", this.elasticTabstops.onChange);\n            }\n            else if (this.elasticTabstops) {\n                this.commands.removeListener(\"afterExec\", this.elasticTabstops.onAfterExec);\n                this.commands.removeListener(\"exec\", this.elasticTabstops.onExec);\n                this.removeListener(\"change\", this.elasticTabstops.onChange);\n            }\n        }\n    }\n});\n\n});                (function() {\n                    ace.require([\"ace/ext/elastic_tabstops_lite\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module", "ElasticTabstopsLite"]
}
