{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/ext-hardwrap.js"],
  "sourcesContent": ["ace.define(\"ace/ext/hardwrap\",[\"require\",\"exports\",\"module\",\"ace/range\",\"ace/editor\",\"ace/config\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nfunction hardWrap(editor, options) {\n    var max = options.column || editor.getOption(\"printMarginColumn\");\n    var allowMerge = options.allowMerge != false;\n    var row = Math.min(options.startRow, options.endRow);\n    var endRow = Math.max(options.startRow, options.endRow);\n    var session = editor.session;\n    while (row <= endRow) {\n        var line = session.getLine(row);\n        if (line.length > max) {\n            var space = findSpace(line, max, 5);\n            if (space) {\n                var indentation = /^\\s*/.exec(line)[0];\n                session.replace(new Range(row, space.start, row, space.end), \"\\n\" + indentation);\n            }\n            endRow++;\n        }\n        else if (allowMerge && /\\S/.test(line) && row != endRow) {\n            var nextLine = session.getLine(row + 1);\n            if (nextLine && /\\S/.test(nextLine)) {\n                var trimmedLine = line.replace(/\\s+$/, \"\");\n                var trimmedNextLine = nextLine.replace(/^\\s+/, \"\");\n                var mergedLine = trimmedLine + \" \" + trimmedNextLine;\n                var space = findSpace(mergedLine, max, 5);\n                if (space && space.start > trimmedLine.length || mergedLine.length < max) {\n                    var replaceRange = new Range(row, trimmedLine.length, row + 1, nextLine.length - trimmedNextLine.length);\n                    session.replace(replaceRange, \" \");\n                    row--;\n                    endRow--;\n                }\n                else if (trimmedLine.length < line.length) {\n                    session.remove(new Range(row, trimmedLine.length, row, line.length));\n                }\n            }\n        }\n        row++;\n    }\n    function findSpace(line, max, min) {\n        if (line.length < max)\n            return;\n        var before = line.slice(0, max);\n        var after = line.slice(max);\n        var spaceAfter = /^(?:(\\s+)|(\\S+)(\\s+))/.exec(after);\n        var spaceBefore = /(?:(\\s+)|(\\s+)(\\S+))$/.exec(before);\n        var start = 0;\n        var end = 0;\n        if (spaceBefore && !spaceBefore[2]) {\n            start = max - spaceBefore[1].length;\n            end = max;\n        }\n        if (spaceAfter && !spaceAfter[2]) {\n            if (!start)\n                start = max;\n            end = max + spaceAfter[1].length;\n        }\n        if (start) {\n            return {\n                start: start,\n                end: end\n            };\n        }\n        if (spaceBefore && spaceBefore[2] && spaceBefore.index > min) {\n            return {\n                start: spaceBefore.index,\n                end: spaceBefore.index + spaceBefore[2].length\n            };\n        }\n        if (spaceAfter && spaceAfter[2]) {\n            start = max + spaceAfter[2].length;\n            return {\n                start: start,\n                end: start + spaceAfter[3].length\n            };\n        }\n    }\n}\nfunction wrapAfterInput(e) {\n    if (e.command.name == \"insertstring\" && /\\S/.test(e.args)) {\n        var editor = e.editor;\n        var cursor = editor.selection.cursor;\n        if (cursor.column <= editor.renderer.$printMarginColumn)\n            return;\n        var lastDelta = editor.session.$undoManager.$lastDelta;\n        hardWrap(editor, {\n            startRow: cursor.row, endRow: cursor.row,\n            allowMerge: false\n        });\n        if (lastDelta != editor.session.$undoManager.$lastDelta)\n            editor.session.markUndoGroup();\n    }\n}\nvar Editor = require(\"../editor\").Editor;\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    hardWrap: {\n        set: function (val) {\n            if (val) {\n                this.commands.on(\"afterExec\", wrapAfterInput);\n            }\n            else {\n                this.commands.off(\"afterExec\", wrapAfterInput);\n            }\n        },\n        value: false\n    }\n});\nexports.hardWrap = hardWrap;\n\n});                (function() {\n                    ace.require([\"ace/ext/hardwrap\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module", "line", "max"]
}
