{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/ext-rtl.js"],
  "sourcesContent": ["ace.define(\"ace/ext/rtl\",[\"require\",\"exports\",\"module\",\"ace/editor\",\"ace/config\"], function(require, exports, module){\"use strict\";\nvar commands = [{\n        name: \"leftToRight\",\n        bindKey: { win: \"Ctrl-Alt-Shift-L\", mac: \"Command-Alt-Shift-L\" },\n        exec: function (editor) {\n            editor.session.$bidiHandler.setRtlDirection(editor, false);\n        },\n        readOnly: true\n    }, {\n        name: \"rightToLeft\",\n        bindKey: { win: \"Ctrl-Alt-Shift-R\", mac: \"Command-Alt-Shift-R\" },\n        exec: function (editor) {\n            editor.session.$bidiHandler.setRtlDirection(editor, true);\n        },\n        readOnly: true\n    }];\nvar Editor = require(\"../editor\").Editor;\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    rtlText: {\n        set: function (val) {\n            if (val) {\n                this.on(\"change\", onChange);\n                this.on(\"changeSelection\", onChangeSelection);\n                this.renderer.on(\"afterRender\", updateLineDirection);\n                this.commands.on(\"exec\", onCommandEmitted);\n                this.commands.addCommands(commands);\n            }\n            else {\n                this.off(\"change\", onChange);\n                this.off(\"changeSelection\", onChangeSelection);\n                this.renderer.off(\"afterRender\", updateLineDirection);\n                this.commands.off(\"exec\", onCommandEmitted);\n                this.commands.removeCommands(commands);\n                clearTextLayer(this.renderer);\n            }\n            this.renderer.updateFull();\n        }\n    },\n    rtl: {\n        set: function (val) {\n            this.session.$bidiHandler.$isRtl = val;\n            if (val) {\n                this.setOption(\"rtlText\", false);\n                this.renderer.on(\"afterRender\", updateLineDirection);\n                this.session.$bidiHandler.seenBidi = true;\n            }\n            else {\n                this.renderer.off(\"afterRender\", updateLineDirection);\n                clearTextLayer(this.renderer);\n            }\n            this.renderer.updateFull();\n        }\n    }\n});\nfunction onChangeSelection(e, editor) {\n    var lead = editor.getSelection().lead;\n    if (editor.session.$bidiHandler.isRtlLine(lead.row)) {\n        if (lead.column === 0) {\n            if (editor.session.$bidiHandler.isMoveLeftOperation && lead.row > 0) {\n                editor.getSelection().moveCursorTo(lead.row - 1, editor.session.getLine(lead.row - 1).length);\n            }\n            else {\n                if (editor.getSelection().isEmpty())\n                    lead.column += 1;\n                else\n                    lead.setPosition(lead.row, lead.column + 1);\n            }\n        }\n    }\n}\nfunction onCommandEmitted(commadEvent) {\n    commadEvent.editor.session.$bidiHandler.isMoveLeftOperation = /gotoleft|selectleft|backspace|removewordleft/.test(commadEvent.command.name);\n}\nfunction onChange(delta, editor) {\n    var session = editor.session;\n    session.$bidiHandler.currentRow = null;\n    if (session.$bidiHandler.isRtlLine(delta.start.row) && delta.action === 'insert' && delta.lines.length > 1) {\n        for (var row = delta.start.row; row < delta.end.row; row++) {\n            if (session.getLine(row + 1).charAt(0) !== session.$bidiHandler.RLE)\n                session.doc.$lines[row + 1] = session.$bidiHandler.RLE + session.getLine(row + 1);\n        }\n    }\n}\nfunction updateLineDirection(e, renderer) {\n    var session = renderer.session;\n    var $bidiHandler = session.$bidiHandler;\n    var cells = renderer.$textLayer.$lines.cells;\n    var width = renderer.layerConfig.width - renderer.layerConfig.padding + \"px\";\n    cells.forEach(function (cell) {\n        var style = cell.element.style;\n        if ($bidiHandler && $bidiHandler.isRtlLine(cell.row)) {\n            style.direction = \"rtl\";\n            style.textAlign = \"right\";\n            style.width = width;\n        }\n        else {\n            style.direction = \"\";\n            style.textAlign = \"\";\n            style.width = \"\";\n        }\n    });\n}\nfunction clearTextLayer(renderer) {\n    var lines = renderer.$textLayer.$lines;\n    lines.cells.forEach(clear);\n    lines.cellCache.forEach(clear);\n    function clear(cell) {\n        var style = cell.element.style;\n        style.direction = style.textAlign = style.width = \"\";\n    }\n}\n\n});                (function() {\n                    ace.require([\"ace/ext/rtl\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
