{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-hjson.js"],
  "sourcesContent": ["ace.define(\"ace/mode/hjson_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/* This file was autogenerated from Hjson.tmLanguage (uuid: ) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar HjsonHighlightRules = function () {\n    this.$rules = {\n        start: [{\n                include: \"#comments\"\n            }, {\n                include: \"#rootObject\"\n            }, {\n                include: \"#value\"\n            }],\n        \"#array\": [{\n                token: \"paren.lparen\",\n                regex: /\\[/,\n                push: [{\n                        token: \"paren.rparen\",\n                        regex: /\\]/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#value\"\n                    }, {\n                        include: \"#comments\"\n                    }, {\n                        token: \"text\",\n                        regex: /,|$/\n                    }, {\n                        token: \"invalid.illegal\",\n                        regex: /[^\\s\\]]/\n                    }, {\n                        defaultToken: \"array\"\n                    }]\n            }],\n        \"#comments\": [{\n                token: [\n                    \"comment.punctuation\",\n                    \"comment.line\"\n                ],\n                regex: /(#)(.*$)/\n            }, {\n                token: \"comment.punctuation\",\n                regex: /\\/\\*/,\n                push: [{\n                        token: \"comment.punctuation\",\n                        regex: /\\*\\//,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"comment.block\"\n                    }]\n            }, {\n                token: [\n                    \"comment.punctuation\",\n                    \"comment.line\"\n                ],\n                regex: /(\\/\\/)(.*$)/\n            }],\n        \"#constant\": [{\n                token: \"constant\",\n                regex: /\\b(?:true|false|null)\\b/\n            }],\n        \"#keyname\": [{\n                token: \"keyword\",\n                regex: /(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*(?=:)/\n            }],\n        \"#mstring\": [{\n                token: \"string\",\n                regex: /'''/,\n                push: [{\n                        token: \"string\",\n                        regex: /'''/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }],\n        \"#number\": [{\n                token: \"constant.numeric\",\n                regex: /-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?/,\n                comment: \"handles integer and decimal numbers\"\n            }],\n        \"#object\": [{\n                token: \"paren.lparen\",\n                regex: /\\{/,\n                push: [{\n                        token: \"paren.rparen\",\n                        regex: /\\}/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#keyname\"\n                    }, {\n                        include: \"#value\"\n                    }, {\n                        token: \"text\",\n                        regex: /:/\n                    }, {\n                        token: \"text\",\n                        regex: /,/\n                    }, {\n                        defaultToken: \"paren\"\n                    }]\n            }],\n        \"#rootObject\": [{\n                token: \"paren\",\n                regex: /(?=\\s*(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*:)/,\n                push: [{\n                        token: \"paren.rparen\",\n                        regex: /---none---/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#keyname\"\n                    }, {\n                        include: \"#value\"\n                    }, {\n                        token: \"text\",\n                        regex: /:/\n                    }, {\n                        token: \"text\",\n                        regex: /,/\n                    }, {\n                        defaultToken: \"paren\"\n                    }]\n            }],\n        \"#string\": [{\n                token: \"string\",\n                regex: /\"/,\n                push: [{\n                        token: \"string\",\n                        regex: /\"/,\n                        next: \"pop\"\n                    }, {\n                        token: \"constant.language.escape\",\n                        regex: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/\n                    }, {\n                        token: \"invalid.illegal\",\n                        regex: /\\\\./\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }],\n        \"#ustring\": [{\n                token: \"string\",\n                regex: /\\b[^:,0-9\\-\\{\\[\\}\\]\\s].*$/\n            }],\n        \"#value\": [{\n                include: \"#constant\"\n            }, {\n                include: \"#number\"\n            }, {\n                include: \"#string\"\n            }, {\n                include: \"#array\"\n            }, {\n                include: \"#object\"\n            }, {\n                include: \"#comments\"\n            }, {\n                include: \"#mstring\"\n            }, {\n                include: \"#ustring\"\n            }]\n    };\n    this.normalizeRules();\n};\nHjsonHighlightRules.metaData = {\n    fileTypes: [\"hjson\"],\n    foldingStartMarker: \"(?x:     # turn on extended mode\\n              ^    # a line beginning with\\n              \\\\s*    # some optional space\\n              [{\\\\[]  # the start of an object or array\\n              (?!    # but not followed by\\n              .*   # whatever\\n              [}\\\\]]  # and the close of an object or array\\n              ,?   # an optional comma\\n              \\\\s*  # some optional space\\n              $    # at the end of the line\\n              )\\n              |    # ...or...\\n              [{\\\\[]  # the start of an object or array\\n              \\\\s*    # some optional space\\n              $    # at the end of the line\\n            )\",\n    foldingStopMarker: \"(?x:   # turn on extended mode\\n             ^    # a line beginning with\\n             \\\\s*  # some optional space\\n             [}\\\\]]  # and the close of an object or array\\n             )\",\n    keyEquivalent: \"^~J\",\n    name: \"Hjson\",\n    scopeName: \"source.hjson\"\n};\noop.inherits(HjsonHighlightRules, TextHighlightRules);\nexports.HjsonHighlightRules = HjsonHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/hjson\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/hjson_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HjsonHighlightRules = require(\"./hjson_highlight_rules\").HjsonHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = HjsonHighlightRules;\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.$id = \"ace/mode/hjson\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/hjson\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
