{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-asciidoc.js"],
  "sourcesContent": ["ace.define(\"ace/mode/asciidoc_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar AsciidocHighlightRules = function () {\n    var identifierRe = \"[a-zA-Z\\u00a1-\\uffff]+\\\\b\";\n    this.$rules = {\n        \"start\": [\n            { token: \"empty\", regex: /$/ },\n            { token: \"literal\", regex: /^\\.{4,}\\s*$/, next: \"listingBlock\" },\n            { token: \"literal\", regex: /^-{4,}\\s*$/, next: \"literalBlock\" },\n            { token: \"string\", regex: /^\\+{4,}\\s*$/, next: \"passthroughBlock\" },\n            { token: \"keyword\", regex: /^={4,}\\s*$/ },\n            { token: \"text\", regex: /^\\s*$/ },\n            { token: \"empty\", regex: \"\", next: \"dissallowDelimitedBlock\" }\n        ],\n        \"dissallowDelimitedBlock\": [\n            { include: \"paragraphEnd\" },\n            { token: \"comment\", regex: '^//.+$' },\n            { token: \"keyword\", regex: \"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):\" },\n            { include: \"listStart\" },\n            { token: \"literal\", regex: /^\\s+.+$/, next: \"indentedBlock\" },\n            { token: \"empty\", regex: \"\", next: \"text\" }\n        ],\n        \"paragraphEnd\": [\n            { token: \"doc.comment\", regex: /^\\/{4,}\\s*$/, next: \"commentBlock\" },\n            { token: \"tableBlock\", regex: /^\\s*[|!]=+\\s*$/, next: \"tableBlock\" },\n            { token: \"keyword\", regex: /^(?:--|''')\\s*$/, next: \"start\" },\n            { token: \"option\", regex: /^\\[.*\\]\\s*$/, next: \"start\" },\n            { token: \"pageBreak\", regex: /^>{3,}$/, next: \"start\" },\n            { token: \"literal\", regex: /^\\.{4,}\\s*$/, next: \"listingBlock\" },\n            { token: \"titleUnderline\", regex: /^(?:={2,}|-{2,}|~{2,}|\\^{2,}|\\+{2,})\\s*$/, next: \"start\" },\n            { token: \"singleLineTitle\", regex: /^={1,5}\\s+\\S.*$/, next: \"start\" },\n            { token: \"otherBlock\", regex: /^(?:\\*{2,}|_{2,})\\s*$/, next: \"start\" },\n            { token: \"optionalTitle\", regex: /^\\.[^.\\s].+$/, next: \"start\" }\n        ],\n        \"listStart\": [\n            { token: \"keyword\", regex: /^\\s*(?:\\d+\\.|[a-zA-Z]\\.|[ixvmIXVM]+\\)|\\*{1,5}|-|\\.{1,5})\\s/, next: \"listText\" },\n            { token: \"meta.tag\", regex: /^.+(?::{2,4}|;;)(?: |$)/, next: \"listText\" },\n            { token: \"support.function.list.callout\", regex: /^(?:<\\d+>|\\d+>|>) /, next: \"text\" },\n            { token: \"keyword\", regex: /^\\+\\s*$/, next: \"start\" }\n        ],\n        \"text\": [\n            { token: [\"link\", \"variable.language\"], regex: /((?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+)(\\[.*?\\])/ },\n            { token: \"link\", regex: /(?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+/ },\n            { token: \"link\", regex: /\\b[\\w\\.\\/\\-]+@[\\w\\.\\/\\-]+\\b/ },\n            { include: \"macros\" },\n            { include: \"paragraphEnd\" },\n            { token: \"literal\", regex: /\\+{3,}/, next: \"smallPassthrough\" },\n            { token: \"escape\", regex: /\\((?:C|TM|R)\\)|\\.{3}|->|<-|=>|<=|&#(?:\\d+|x[a-fA-F\\d]+);|(?: |^)--(?=\\s+\\S)/ },\n            { token: \"escape\", regex: /\\\\[_*'`+#]|\\\\{2}[_*'`+#]{2}/ },\n            { token: \"keyword\", regex: /\\s\\+$/ },\n            { token: \"text\", regex: identifierRe },\n            { token: [\"keyword\", \"string\", \"keyword\"],\n                regex: /(<<[\\w\\d\\-$]+,)(.*?)(>>|$)/ },\n            { token: \"keyword\", regex: /<<[\\w\\d\\-$]+,?|>>/ },\n            { token: \"constant.character\", regex: /\\({2,3}.*?\\){2,3}/ },\n            { token: \"keyword\", regex: /\\[\\[.+?\\]\\]/ },\n            { token: \"support\", regex: /^\\[{3}[\\w\\d =\\-]+\\]{3}/ },\n            { include: \"quotes\" },\n            { token: \"empty\", regex: /^\\s*$/, next: \"start\" }\n        ],\n        \"listText\": [\n            { include: \"listStart\" },\n            { include: \"text\" }\n        ],\n        \"indentedBlock\": [\n            { token: \"literal\", regex: /^[\\s\\w].+$/, next: \"indentedBlock\" },\n            { token: \"literal\", regex: \"\", next: \"start\" }\n        ],\n        \"listingBlock\": [\n            { token: \"literal\", regex: /^\\.{4,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"constant.numeric\", regex: '<\\\\d+>' },\n            { token: \"literal\", regex: '[^<]+' },\n            { token: \"literal\", regex: '<' }\n        ],\n        \"literalBlock\": [\n            { token: \"literal\", regex: /^-{4,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"constant.numeric\", regex: '<\\\\d+>' },\n            { token: \"literal\", regex: '[^<]+' },\n            { token: \"literal\", regex: '<' }\n        ],\n        \"passthroughBlock\": [\n            { token: \"literal\", regex: /^\\+{4,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"literal\", regex: identifierRe + \"|\\\\d+\" },\n            { include: \"macros\" },\n            { token: \"literal\", regex: \".\" }\n        ],\n        \"smallPassthrough\": [\n            { token: \"literal\", regex: /[+]{3,}/, next: \"dissallowDelimitedBlock\" },\n            { token: \"literal\", regex: /^\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"literal\", regex: identifierRe + \"|\\\\d+\" },\n            { include: \"macros\" }\n        ],\n        \"commentBlock\": [\n            { token: \"doc.comment\", regex: /^\\/{4,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"doc.comment\", regex: '^.*$' }\n        ],\n        \"tableBlock\": [\n            { token: \"tableBlock\", regex: /^\\s*\\|={3,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"tableBlock\", regex: /^\\s*!={3,}\\s*$/, next: \"innerTableBlock\" },\n            { token: \"tableBlock\", regex: /\\|/ },\n            { include: \"text\", noEscape: true }\n        ],\n        \"innerTableBlock\": [\n            { token: \"tableBlock\", regex: /^\\s*!={3,}\\s*$/, next: \"tableBlock\" },\n            { token: \"tableBlock\", regex: /^\\s*|={3,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"tableBlock\", regex: /!/ }\n        ],\n        \"macros\": [\n            { token: \"macro\", regex: /{[\\w\\-$]+}/ },\n            { token: [\"text\", \"string\", \"text\", \"constant.character\", \"text\"], regex: /({)([\\w\\-$]+)(:)?(.+)?(})/ },\n            { token: [\"text\", \"markup.list.macro\", \"keyword\", \"string\"], regex: /(\\w+)(footnote(?:ref)?::?)([^\\s\\[]+)?(\\[.*?\\])?/ },\n            { token: [\"markup.list.macro\", \"keyword\", \"string\"], regex: /([a-zA-Z\\-][\\w\\.\\/\\-]*::?)([^\\s\\[]+)(\\[.*?\\])?/ },\n            { token: [\"markup.list.macro\", \"keyword\"], regex: /([a-zA-Z\\-][\\w\\.\\/\\-]+::?)(\\[.*?\\])/ },\n            { token: \"keyword\", regex: /^:.+?:(?= |$)/ }\n        ],\n        \"quotes\": [\n            { token: \"string.italic\", regex: /__[^_\\s].*?__/ },\n            { token: \"string.italic\", regex: quoteRule(\"_\") },\n            { token: \"keyword.bold\", regex: /\\*\\*[^*\\s].*?\\*\\*/ },\n            { token: \"keyword.bold\", regex: quoteRule(\"\\\\*\") },\n            { token: \"literal\", regex: quoteRule(\"\\\\+\") },\n            { token: \"literal\", regex: /\\+\\+[^+\\s].*?\\+\\+/ },\n            { token: \"literal\", regex: /\\$\\$.+?\\$\\$/ },\n            { token: \"literal\", regex: quoteRule(\"`\") },\n            { token: \"keyword\", regex: quoteRule(\"^\") },\n            { token: \"keyword\", regex: quoteRule(\"~\") },\n            { token: \"keyword\", regex: /##?/ },\n            { token: \"keyword\", regex: /(?:\\B|^)``|\\b''/ }\n        ]\n    };\n    function quoteRule(ch) {\n        var prefix = /\\w/.test(ch) ? \"\\\\b\" : \"(?:\\\\B|^)\";\n        return prefix + ch + \"[^\" + ch + \"].*?\" + ch + \"(?![\\\\w*])\";\n    }\n    var tokenMap = {\n        macro: \"constant.character\",\n        tableBlock: \"doc.comment\",\n        titleUnderline: \"markup.heading\",\n        singleLineTitle: \"markup.heading\",\n        pageBreak: \"string\",\n        option: \"string.regexp\",\n        otherBlock: \"markup.list\",\n        literal: \"support.function\",\n        optionalTitle: \"constant.numeric\",\n        escape: \"constant.language.escape\",\n        link: \"markup.underline.list\"\n    };\n    for (var state in this.$rules) {\n        var stateRules = this.$rules[state];\n        for (var i = stateRules.length; i--;) {\n            var rule = stateRules[i];\n            if (rule.include || typeof rule == \"string\") {\n                var args = [i, 1].concat(this.$rules[rule.include || rule]);\n                if (rule.noEscape) {\n                    args = args.filter(function (x) {\n                        return !x.next;\n                    });\n                }\n                stateRules.splice.apply(stateRules, args);\n            }\n            else if (rule.token in tokenMap) {\n                rule.token = tokenMap[rule.token];\n            }\n        }\n    }\n};\noop.inherits(AsciidocHighlightRules, TextHighlightRules);\nexports.AsciidocHighlightRules = AsciidocHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /^(?:\\|={10,}|[\\.\\/=\\-~^+]{4,}\\s*$|={1,5} )/;\n    this.singleLineHeadingRe = /^={1,5}(?=\\s+\\S)/;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (!this.foldingStartMarker.test(line))\n            return \"\";\n        if (line[0] == \"=\") {\n            if (this.singleLineHeadingRe.test(line))\n                return \"start\";\n            if (session.getLine(row - 1).length != session.getLine(row).length)\n                return \"\";\n            return \"start\";\n        }\n        if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\")\n            return \"end\";\n        return \"start\";\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        if (!line.match(this.foldingStartMarker))\n            return;\n        var token;\n        function getTokenType(row) {\n            token = session.getTokens(row)[0];\n            return token && token.type;\n        }\n        var levels = [\"=\", \"-\", \"~\", \"^\", \"+\"];\n        var heading = \"markup.heading\";\n        var singleLineHeadingRe = this.singleLineHeadingRe;\n        function getLevel() {\n            var match = token.value.match(singleLineHeadingRe);\n            if (match)\n                return match[0].length;\n            var level = levels.indexOf(token.value[0]) + 1;\n            if (level == 1) {\n                if (session.getLine(row - 1).length != session.getLine(row).length)\n                    return Infinity;\n            }\n            return level;\n        }\n        if (getTokenType(row) == heading) {\n            var startHeadingLevel = getLevel();\n            while (++row < maxRow) {\n                if (getTokenType(row) != heading)\n                    continue;\n                var level = getLevel();\n                if (level <= startHeadingLevel)\n                    break;\n            }\n            var isSingleLineHeading = token && token.value.match(this.singleLineHeadingRe);\n            endRow = isSingleLineHeading ? row - 1 : row - 2;\n            if (endRow > startRow) {\n                while (endRow > startRow && (!getTokenType(endRow) || token.value[0] == \"[\"))\n                    endRow--;\n            }\n            if (endRow > startRow) {\n                var endColumn = session.getLine(endRow).length;\n                return new Range(startRow, startColumn, endRow, endColumn);\n            }\n        }\n        else {\n            var state = session.bgTokenizer.getState(row);\n            if (state == \"dissallowDelimitedBlock\") {\n                while (row-- > 0) {\n                    if (session.bgTokenizer.getState(row).lastIndexOf(\"Block\") == -1)\n                        break;\n                }\n                endRow = row + 1;\n                if (endRow < startRow) {\n                    var endColumn = session.getLine(row).length;\n                    return new Range(endRow, 5, startRow, startColumn - 5);\n                }\n            }\n            else {\n                while (++row < maxRow) {\n                    if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\")\n                        break;\n                }\n                endRow = row;\n                if (endRow > startRow) {\n                    var endColumn = session.getLine(row).length;\n                    return new Range(startRow, 5, endRow, endColumn - 5);\n                }\n            }\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/asciidoc_highlight_rules\",\"ace/mode/folding/asciidoc\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar AsciidocHighlightRules = require(\"./asciidoc_highlight_rules\").AsciidocHighlightRules;\nvar AsciidocFoldMode = require(\"./folding/asciidoc\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = AsciidocHighlightRules;\n    this.foldingRules = new AsciidocFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.type = \"text\";\n    this.getNextLineIndent = function (state, line, tab) {\n        if (state == \"listblock\") {\n            var match = /^((?:.+)?)([-+*][ ]+)/.exec(line);\n            if (match) {\n                return new Array(match[1].length + 1).join(\" \") + match[2];\n            }\n            else {\n                return \"\";\n            }\n        }\n        else {\n            return this.$getIndent(line);\n        }\n    };\n    this.$id = \"ace/mode/asciidoc\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/asciidoc\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module", "row", "level"]
}
