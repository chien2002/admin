{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/ext-emmet.js"],
  "sourcesContent": ["ace.define(\"ace/snippets\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\",\"ace/lib/oop\",\"ace/lib/event_emitter\",\"ace/lib/lang\",\"ace/range\",\"ace/range_list\",\"ace/keyboard/hash_handler\",\"ace/tokenizer\",\"ace/clipboard\",\"ace/editor\"], function(require, exports, module){\"use strict\";\nvar dom = require(\"./lib/dom\");\nvar oop = require(\"./lib/oop\");\nvar EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\nvar lang = require(\"./lib/lang\");\nvar Range = require(\"./range\").Range;\nvar RangeList = require(\"./range_list\").RangeList;\nvar HashHandler = require(\"./keyboard/hash_handler\").HashHandler;\nvar Tokenizer = require(\"./tokenizer\").Tokenizer;\nvar clipboard = require(\"./clipboard\");\nvar VARIABLES = {\n    CURRENT_WORD: function (editor) {\n        return editor.session.getTextRange(editor.session.getWordRange());\n    },\n    SELECTION: function (editor, name, indentation) {\n        var text = editor.session.getTextRange();\n        if (indentation)\n            return text.replace(/\\n\\r?([ \\t]*\\S)/g, \"\\n\" + indentation + \"$1\");\n        return text;\n    },\n    CURRENT_LINE: function (editor) {\n        return editor.session.getLine(editor.getCursorPosition().row);\n    },\n    PREV_LINE: function (editor) {\n        return editor.session.getLine(editor.getCursorPosition().row - 1);\n    },\n    LINE_INDEX: function (editor) {\n        return editor.getCursorPosition().row;\n    },\n    LINE_NUMBER: function (editor) {\n        return editor.getCursorPosition().row + 1;\n    },\n    SOFT_TABS: function (editor) {\n        return editor.session.getUseSoftTabs() ? \"YES\" : \"NO\";\n    },\n    TAB_SIZE: function (editor) {\n        return editor.session.getTabSize();\n    },\n    CLIPBOARD: function (editor) {\n        return clipboard.getText && clipboard.getText();\n    },\n    FILENAME: function (editor) {\n        return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0];\n    },\n    FILENAME_BASE: function (editor) {\n        return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0].replace(/\\.[^.]*$/, \"\");\n    },\n    DIRECTORY: function (editor) {\n        return this.FILEPATH(editor).replace(/[^/\\\\]*$/, \"\");\n    },\n    FILEPATH: function (editor) { return \"/not implemented.txt\"; },\n    WORKSPACE_NAME: function () { return \"Unknown\"; },\n    FULLNAME: function () { return \"Unknown\"; },\n    BLOCK_COMMENT_START: function (editor) {\n        var mode = editor.session.$mode || {};\n        return mode.blockComment && mode.blockComment.start || \"\";\n    },\n    BLOCK_COMMENT_END: function (editor) {\n        var mode = editor.session.$mode || {};\n        return mode.blockComment && mode.blockComment.end || \"\";\n    },\n    LINE_COMMENT: function (editor) {\n        var mode = editor.session.$mode || {};\n        return mode.lineCommentStart || \"\";\n    },\n    CURRENT_YEAR: date.bind(null, { year: \"numeric\" }),\n    CURRENT_YEAR_SHORT: date.bind(null, { year: \"2-digit\" }),\n    CURRENT_MONTH: date.bind(null, { month: \"numeric\" }),\n    CURRENT_MONTH_NAME: date.bind(null, { month: \"long\" }),\n    CURRENT_MONTH_NAME_SHORT: date.bind(null, { month: \"short\" }),\n    CURRENT_DATE: date.bind(null, { day: \"2-digit\" }),\n    CURRENT_DAY_NAME: date.bind(null, { weekday: \"long\" }),\n    CURRENT_DAY_NAME_SHORT: date.bind(null, { weekday: \"short\" }),\n    CURRENT_HOUR: date.bind(null, { hour: \"2-digit\", hour12: false }),\n    CURRENT_MINUTE: date.bind(null, { minute: \"2-digit\" }),\n    CURRENT_SECOND: date.bind(null, { second: \"2-digit\" })\n};\nVARIABLES.SELECTED_TEXT = VARIABLES.SELECTION;\nfunction date(dateFormat) {\n    var str = new Date().toLocaleString(\"en-us\", dateFormat);\n    return str.length == 1 ? \"0\" + str : str;\n}\nvar SnippetManager = function () {\n    this.snippetMap = {};\n    this.snippetNameMap = {};\n};\n(function () {\n    oop.implement(this, EventEmitter);\n    this.getTokenizer = function () {\n        return SnippetManager.$tokenizer || this.createTokenizer();\n    };\n    this.createTokenizer = function () {\n        function TabstopToken(str) {\n            str = str.substr(1);\n            if (/^\\d+$/.test(str))\n                return [{ tabstopId: parseInt(str, 10) }];\n            return [{ text: str }];\n        }\n        function escape(ch) {\n            return \"(?:[^\\\\\\\\\" + ch + \"]|\\\\\\\\.)\";\n        }\n        var formatMatcher = {\n            regex: \"/(\" + escape(\"/\") + \"+)/\",\n            onMatch: function (val, state, stack) {\n                var ts = stack[0];\n                ts.fmtString = true;\n                ts.guard = val.slice(1, -1);\n                ts.flag = \"\";\n                return \"\";\n            },\n            next: \"formatString\"\n        };\n        SnippetManager.$tokenizer = new Tokenizer({\n            start: [\n                { regex: /\\\\./, onMatch: function (val, state, stack) {\n                        var ch = val[1];\n                        if (ch == \"}\" && stack.length) {\n                            val = ch;\n                        }\n                        else if (\"`$\\\\\".indexOf(ch) != -1) {\n                            val = ch;\n                        }\n                        return [val];\n                    } },\n                { regex: /}/, onMatch: function (val, state, stack) {\n                        return [stack.length ? stack.shift() : val];\n                    } },\n                { regex: /\\$(?:\\d+|\\w+)/, onMatch: TabstopToken },\n                { regex: /\\$\\{[\\dA-Z_a-z]+/, onMatch: function (str, state, stack) {\n                        var t = TabstopToken(str.substr(1));\n                        stack.unshift(t[0]);\n                        return t;\n                    }, next: \"snippetVar\" },\n                { regex: /\\n/, token: \"newline\", merge: false }\n            ],\n            snippetVar: [\n                { regex: \"\\\\|\" + escape(\"\\\\|\") + \"*\\\\|\", onMatch: function (val, state, stack) {\n                        var choices = val.slice(1, -1).replace(/\\\\[,|\\\\]|,/g, function (operator) {\n                            return operator.length == 2 ? operator[1] : \"\\x00\";\n                        }).split(\"\\x00\").map(function (value) {\n                            return { value: value };\n                        });\n                        stack[0].choices = choices;\n                        return [choices[0]];\n                    }, next: \"start\" },\n                formatMatcher,\n                { regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\", token: \"\", next: \"start\" }\n            ],\n            formatString: [\n                { regex: /:/, onMatch: function (val, state, stack) {\n                        if (stack.length && stack[0].expectElse) {\n                            stack[0].expectElse = false;\n                            stack[0].ifEnd = { elseEnd: stack[0] };\n                            return [stack[0].ifEnd];\n                        }\n                        return \":\";\n                    } },\n                { regex: /\\\\./, onMatch: function (val, state, stack) {\n                        var ch = val[1];\n                        if (ch == \"}\" && stack.length)\n                            val = ch;\n                        else if (\"`$\\\\\".indexOf(ch) != -1)\n                            val = ch;\n                        else if (ch == \"n\")\n                            val = \"\\n\";\n                        else if (ch == \"t\")\n                            val = \"\\t\";\n                        else if (\"ulULE\".indexOf(ch) != -1)\n                            val = { changeCase: ch, local: ch > \"a\" };\n                        return [val];\n                    } },\n                { regex: \"/\\\\w*}\", onMatch: function (val, state, stack) {\n                        var next = stack.shift();\n                        if (next)\n                            next.flag = val.slice(1, -1);\n                        this.next = next && next.tabstopId ? \"start\" : \"\";\n                        return [next || val];\n                    }, next: \"start\" },\n                { regex: /\\$(?:\\d+|\\w+)/, onMatch: function (val, state, stack) {\n                        return [{ text: val.slice(1) }];\n                    } },\n                { regex: /\\${\\w+/, onMatch: function (val, state, stack) {\n                        var token = { text: val.slice(2) };\n                        stack.unshift(token);\n                        return [token];\n                    }, next: \"formatStringVar\" },\n                { regex: /\\n/, token: \"newline\", merge: false },\n                { regex: /}/, onMatch: function (val, state, stack) {\n                        var next = stack.shift();\n                        this.next = next && next.tabstopId ? \"start\" : \"\";\n                        return [next || val];\n                    }, next: \"start\" }\n            ],\n            formatStringVar: [\n                { regex: /:\\/\\w+}/, onMatch: function (val, state, stack) {\n                        var ts = stack[0];\n                        ts.formatFunction = val.slice(2, -1);\n                        return [stack.shift()];\n                    }, next: \"formatString\" },\n                formatMatcher,\n                { regex: /:[\\?\\-+]?/, onMatch: function (val, state, stack) {\n                        if (val[1] == \"+\")\n                            stack[0].ifEnd = stack[0];\n                        if (val[1] == \"?\")\n                            stack[0].expectElse = true;\n                    }, next: \"formatString\" },\n                { regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\", token: \"\", next: \"formatString\" }\n            ]\n        });\n        return SnippetManager.$tokenizer;\n    };\n    this.tokenizeTmSnippet = function (str, startState) {\n        return this.getTokenizer().getLineTokens(str, startState).tokens.map(function (x) {\n            return x.value || x;\n        });\n    };\n    this.getVariableValue = function (editor, name, indentation) {\n        if (/^\\d+$/.test(name))\n            return (this.variables.__ || {})[name] || \"\";\n        if (/^[A-Z]\\d+$/.test(name))\n            return (this.variables[name[0] + \"__\"] || {})[name.substr(1)] || \"\";\n        name = name.replace(/^TM_/, \"\");\n        if (!this.variables.hasOwnProperty(name))\n            return \"\";\n        var value = this.variables[name];\n        if (typeof value == \"function\")\n            value = this.variables[name](editor, name, indentation);\n        return value == null ? \"\" : value;\n    };\n    this.variables = VARIABLES;\n    this.tmStrFormat = function (str, ch, editor) {\n        if (!ch.fmt)\n            return str;\n        var flag = ch.flag || \"\";\n        var re = ch.guard;\n        re = new RegExp(re, flag.replace(/[^gim]/g, \"\"));\n        var fmtTokens = typeof ch.fmt == \"string\" ? this.tokenizeTmSnippet(ch.fmt, \"formatString\") : ch.fmt;\n        var _self = this;\n        var formatted = str.replace(re, function () {\n            var oldArgs = _self.variables.__;\n            _self.variables.__ = [].slice.call(arguments);\n            var fmtParts = _self.resolveVariables(fmtTokens, editor);\n            var gChangeCase = \"E\";\n            for (var i = 0; i < fmtParts.length; i++) {\n                var ch = fmtParts[i];\n                if (typeof ch == \"object\") {\n                    fmtParts[i] = \"\";\n                    if (ch.changeCase && ch.local) {\n                        var next = fmtParts[i + 1];\n                        if (next && typeof next == \"string\") {\n                            if (ch.changeCase == \"u\")\n                                fmtParts[i] = next[0].toUpperCase();\n                            else\n                                fmtParts[i] = next[0].toLowerCase();\n                            fmtParts[i + 1] = next.substr(1);\n                        }\n                    }\n                    else if (ch.changeCase) {\n                        gChangeCase = ch.changeCase;\n                    }\n                }\n                else if (gChangeCase == \"U\") {\n                    fmtParts[i] = ch.toUpperCase();\n                }\n                else if (gChangeCase == \"L\") {\n                    fmtParts[i] = ch.toLowerCase();\n                }\n            }\n            _self.variables.__ = oldArgs;\n            return fmtParts.join(\"\");\n        });\n        return formatted;\n    };\n    this.tmFormatFunction = function (str, ch, editor) {\n        if (ch.formatFunction == \"upcase\")\n            return str.toUpperCase();\n        if (ch.formatFunction == \"downcase\")\n            return str.toLowerCase();\n        return str;\n    };\n    this.resolveVariables = function (snippet, editor) {\n        var result = [];\n        var indentation = \"\";\n        var afterNewLine = true;\n        for (var i = 0; i < snippet.length; i++) {\n            var ch = snippet[i];\n            if (typeof ch == \"string\") {\n                result.push(ch);\n                if (ch == \"\\n\") {\n                    afterNewLine = true;\n                    indentation = \"\";\n                }\n                else if (afterNewLine) {\n                    indentation = /^\\t*/.exec(ch)[0];\n                    afterNewLine = /\\S/.test(ch);\n                }\n                continue;\n            }\n            if (!ch)\n                continue;\n            afterNewLine = false;\n            if (ch.fmtString) {\n                var j = snippet.indexOf(ch, i + 1);\n                if (j == -1)\n                    j = snippet.length;\n                ch.fmt = snippet.slice(i + 1, j);\n                i = j;\n            }\n            if (ch.text) {\n                var value = this.getVariableValue(editor, ch.text, indentation) + \"\";\n                if (ch.fmtString)\n                    value = this.tmStrFormat(value, ch, editor);\n                if (ch.formatFunction)\n                    value = this.tmFormatFunction(value, ch, editor);\n                if (value && !ch.ifEnd) {\n                    result.push(value);\n                    gotoNext(ch);\n                }\n                else if (!value && ch.ifEnd) {\n                    gotoNext(ch.ifEnd);\n                }\n            }\n            else if (ch.elseEnd) {\n                gotoNext(ch.elseEnd);\n            }\n            else if (ch.tabstopId != null) {\n                result.push(ch);\n            }\n            else if (ch.changeCase != null) {\n                result.push(ch);\n            }\n        }\n        function gotoNext(ch) {\n            var i1 = snippet.indexOf(ch, i + 1);\n            if (i1 != -1)\n                i = i1;\n        }\n        return result;\n    };\n    var processSnippetText = function (editor, snippetText, replaceRange) {\n        var cursor = editor.getCursorPosition();\n        var line = editor.session.getLine(cursor.row);\n        var tabString = editor.session.getTabString();\n        var indentString = line.match(/^\\s*/)[0];\n        if (cursor.column < indentString.length)\n            indentString = indentString.slice(0, cursor.column);\n        snippetText = snippetText.replace(/\\r/g, \"\");\n        var tokens = this.tokenizeTmSnippet(snippetText);\n        tokens = this.resolveVariables(tokens, editor);\n        tokens = tokens.map(function (x) {\n            if (x == \"\\n\")\n                return x + indentString;\n            if (typeof x == \"string\")\n                return x.replace(/\\t/g, tabString);\n            return x;\n        });\n        var tabstops = [];\n        tokens.forEach(function (p, i) {\n            if (typeof p != \"object\")\n                return;\n            var id = p.tabstopId;\n            var ts = tabstops[id];\n            if (!ts) {\n                ts = tabstops[id] = [];\n                ts.index = id;\n                ts.value = \"\";\n                ts.parents = {};\n            }\n            if (ts.indexOf(p) !== -1)\n                return;\n            if (p.choices && !ts.choices)\n                ts.choices = p.choices;\n            ts.push(p);\n            var i1 = tokens.indexOf(p, i + 1);\n            if (i1 === -1)\n                return;\n            var value = tokens.slice(i + 1, i1);\n            var isNested = value.some(function (t) { return typeof t === \"object\"; });\n            if (isNested && !ts.value) {\n                ts.value = value;\n            }\n            else if (value.length && (!ts.value || typeof ts.value !== \"string\")) {\n                ts.value = value.join(\"\");\n            }\n        });\n        tabstops.forEach(function (ts) { ts.length = 0; });\n        var expanding = {};\n        function copyValue(val) {\n            var copy = [];\n            for (var i = 0; i < val.length; i++) {\n                var p = val[i];\n                if (typeof p == \"object\") {\n                    if (expanding[p.tabstopId])\n                        continue;\n                    var j = val.lastIndexOf(p, i - 1);\n                    p = copy[j] || { tabstopId: p.tabstopId };\n                }\n                copy[i] = p;\n            }\n            return copy;\n        }\n        for (var i = 0; i < tokens.length; i++) {\n            var p = tokens[i];\n            if (typeof p != \"object\")\n                continue;\n            var id = p.tabstopId;\n            var ts = tabstops[id];\n            var i1 = tokens.indexOf(p, i + 1);\n            if (expanding[id]) {\n                if (expanding[id] === p) {\n                    delete expanding[id];\n                    Object.keys(expanding).forEach(function (parentId) {\n                        ts.parents[parentId] = true;\n                    });\n                }\n                continue;\n            }\n            expanding[id] = p;\n            var value = ts.value;\n            if (typeof value !== \"string\")\n                value = copyValue(value);\n            else if (p.fmt)\n                value = this.tmStrFormat(value, p, editor);\n            tokens.splice.apply(tokens, [i + 1, Math.max(0, i1 - i)].concat(value, p));\n            if (ts.indexOf(p) === -1)\n                ts.push(p);\n        }\n        var row = 0, column = 0;\n        var text = \"\";\n        tokens.forEach(function (t) {\n            if (typeof t === \"string\") {\n                var lines = t.split(\"\\n\");\n                if (lines.length > 1) {\n                    column = lines[lines.length - 1].length;\n                    row += lines.length - 1;\n                }\n                else\n                    column += t.length;\n                text += t;\n            }\n            else if (t) {\n                if (!t.start)\n                    t.start = { row: row, column: column };\n                else\n                    t.end = { row: row, column: column };\n            }\n        });\n        return {\n            text: text,\n            tabstops: tabstops,\n            tokens: tokens\n        };\n    };\n    this.getDisplayTextForSnippet = function (editor, snippetText) {\n        var processedSnippet = processSnippetText.call(this, editor, snippetText);\n        return processedSnippet.text;\n    };\n    this.insertSnippetForSelection = function (editor, snippetText, replaceRange) {\n        var processedSnippet = processSnippetText.call(this, editor, snippetText);\n        var range = editor.getSelectionRange();\n        if (replaceRange && replaceRange.compareRange(range) === 0) {\n            range = replaceRange;\n        }\n        var end = editor.session.replace(range, processedSnippet.text);\n        var tabstopManager = new TabstopManager(editor);\n        var selectionId = editor.inVirtualSelectionMode && editor.selection.index;\n        tabstopManager.addTabstops(processedSnippet.tabstops, range.start, end, selectionId);\n    };\n    this.insertSnippet = function (editor, snippetText, replaceRange) {\n        var self = this;\n        if (editor.inVirtualSelectionMode)\n            return self.insertSnippetForSelection(editor, snippetText, replaceRange);\n        editor.forEachSelection(function () {\n            self.insertSnippetForSelection(editor, snippetText, replaceRange);\n        }, null, { keepOrder: true });\n        if (editor.tabstopManager)\n            editor.tabstopManager.tabNext();\n    };\n    this.$getScope = function (editor) {\n        var scope = editor.session.$mode.$id || \"\";\n        scope = scope.split(\"/\").pop();\n        if (scope === \"html\" || scope === \"php\") {\n            if (scope === \"php\" && !editor.session.$mode.inlinePhp)\n                scope = \"html\";\n            var c = editor.getCursorPosition();\n            var state = editor.session.getState(c.row);\n            if (typeof state === \"object\") {\n                state = state[0];\n            }\n            if (state.substring) {\n                if (state.substring(0, 3) == \"js-\")\n                    scope = \"javascript\";\n                else if (state.substring(0, 4) == \"css-\")\n                    scope = \"css\";\n                else if (state.substring(0, 4) == \"php-\")\n                    scope = \"php\";\n            }\n        }\n        return scope;\n    };\n    this.getActiveScopes = function (editor) {\n        var scope = this.$getScope(editor);\n        var scopes = [scope];\n        var snippetMap = this.snippetMap;\n        if (snippetMap[scope] && snippetMap[scope].includeScopes) {\n            scopes.push.apply(scopes, snippetMap[scope].includeScopes);\n        }\n        scopes.push(\"_\");\n        return scopes;\n    };\n    this.expandWithTab = function (editor, options) {\n        var self = this;\n        var result = editor.forEachSelection(function () {\n            return self.expandSnippetForSelection(editor, options);\n        }, null, { keepOrder: true });\n        if (result && editor.tabstopManager)\n            editor.tabstopManager.tabNext();\n        return result;\n    };\n    this.expandSnippetForSelection = function (editor, options) {\n        var cursor = editor.getCursorPosition();\n        var line = editor.session.getLine(cursor.row);\n        var before = line.substring(0, cursor.column);\n        var after = line.substr(cursor.column);\n        var snippetMap = this.snippetMap;\n        var snippet;\n        this.getActiveScopes(editor).some(function (scope) {\n            var snippets = snippetMap[scope];\n            if (snippets)\n                snippet = this.findMatchingSnippet(snippets, before, after);\n            return !!snippet;\n        }, this);\n        if (!snippet)\n            return false;\n        if (options && options.dryRun)\n            return true;\n        editor.session.doc.removeInLine(cursor.row, cursor.column - snippet.replaceBefore.length, cursor.column + snippet.replaceAfter.length);\n        this.variables.M__ = snippet.matchBefore;\n        this.variables.T__ = snippet.matchAfter;\n        this.insertSnippetForSelection(editor, snippet.content);\n        this.variables.M__ = this.variables.T__ = null;\n        return true;\n    };\n    this.findMatchingSnippet = function (snippetList, before, after) {\n        for (var i = snippetList.length; i--;) {\n            var s = snippetList[i];\n            if (s.startRe && !s.startRe.test(before))\n                continue;\n            if (s.endRe && !s.endRe.test(after))\n                continue;\n            if (!s.startRe && !s.endRe)\n                continue;\n            s.matchBefore = s.startRe ? s.startRe.exec(before) : [\"\"];\n            s.matchAfter = s.endRe ? s.endRe.exec(after) : [\"\"];\n            s.replaceBefore = s.triggerRe ? s.triggerRe.exec(before)[0] : \"\";\n            s.replaceAfter = s.endTriggerRe ? s.endTriggerRe.exec(after)[0] : \"\";\n            return s;\n        }\n    };\n    this.snippetMap = {};\n    this.snippetNameMap = {};\n    this.register = function (snippets, scope) {\n        var snippetMap = this.snippetMap;\n        var snippetNameMap = this.snippetNameMap;\n        var self = this;\n        if (!snippets)\n            snippets = [];\n        function wrapRegexp(src) {\n            if (src && !/^\\^?\\(.*\\)\\$?$|^\\\\b$/.test(src))\n                src = \"(?:\" + src + \")\";\n            return src || \"\";\n        }\n        function guardedRegexp(re, guard, opening) {\n            re = wrapRegexp(re);\n            guard = wrapRegexp(guard);\n            if (opening) {\n                re = guard + re;\n                if (re && re[re.length - 1] != \"$\")\n                    re = re + \"$\";\n            }\n            else {\n                re = re + guard;\n                if (re && re[0] != \"^\")\n                    re = \"^\" + re;\n            }\n            return new RegExp(re);\n        }\n        function addSnippet(s) {\n            if (!s.scope)\n                s.scope = scope || \"_\";\n            scope = s.scope;\n            if (!snippetMap[scope]) {\n                snippetMap[scope] = [];\n                snippetNameMap[scope] = {};\n            }\n            var map = snippetNameMap[scope];\n            if (s.name) {\n                var old = map[s.name];\n                if (old)\n                    self.unregister(old);\n                map[s.name] = s;\n            }\n            snippetMap[scope].push(s);\n            if (s.prefix)\n                s.tabTrigger = s.prefix;\n            if (!s.content && s.body)\n                s.content = Array.isArray(s.body) ? s.body.join(\"\\n\") : s.body;\n            if (s.tabTrigger && !s.trigger) {\n                if (!s.guard && /^\\w/.test(s.tabTrigger))\n                    s.guard = \"\\\\b\";\n                s.trigger = lang.escapeRegExp(s.tabTrigger);\n            }\n            if (!s.trigger && !s.guard && !s.endTrigger && !s.endGuard)\n                return;\n            s.startRe = guardedRegexp(s.trigger, s.guard, true);\n            s.triggerRe = new RegExp(s.trigger);\n            s.endRe = guardedRegexp(s.endTrigger, s.endGuard, true);\n            s.endTriggerRe = new RegExp(s.endTrigger);\n        }\n        if (Array.isArray(snippets)) {\n            snippets.forEach(addSnippet);\n        }\n        else {\n            Object.keys(snippets).forEach(function (key) {\n                addSnippet(snippets[key]);\n            });\n        }\n        this._signal(\"registerSnippets\", { scope: scope });\n    };\n    this.unregister = function (snippets, scope) {\n        var snippetMap = this.snippetMap;\n        var snippetNameMap = this.snippetNameMap;\n        function removeSnippet(s) {\n            var nameMap = snippetNameMap[s.scope || scope];\n            if (nameMap && nameMap[s.name]) {\n                delete nameMap[s.name];\n                var map = snippetMap[s.scope || scope];\n                var i = map && map.indexOf(s);\n                if (i >= 0)\n                    map.splice(i, 1);\n            }\n        }\n        if (snippets.content)\n            removeSnippet(snippets);\n        else if (Array.isArray(snippets))\n            snippets.forEach(removeSnippet);\n    };\n    this.parseSnippetFile = function (str) {\n        str = str.replace(/\\r/g, \"\");\n        var list = [], snippet = {};\n        var re = /^#.*|^({[\\s\\S]*})\\s*$|^(\\S+) (.*)$|^((?:\\n*\\t.*)+)/gm;\n        var m;\n        while (m = re.exec(str)) {\n            if (m[1]) {\n                try {\n                    snippet = JSON.parse(m[1]);\n                    list.push(snippet);\n                }\n                catch (e) { }\n            }\n            if (m[4]) {\n                snippet.content = m[4].replace(/^\\t/gm, \"\");\n                list.push(snippet);\n                snippet = {};\n            }\n            else {\n                var key = m[2], val = m[3];\n                if (key == \"regex\") {\n                    var guardRe = /\\/((?:[^\\/\\\\]|\\\\.)*)|$/g;\n                    snippet.guard = guardRe.exec(val)[1];\n                    snippet.trigger = guardRe.exec(val)[1];\n                    snippet.endTrigger = guardRe.exec(val)[1];\n                    snippet.endGuard = guardRe.exec(val)[1];\n                }\n                else if (key == \"snippet\") {\n                    snippet.tabTrigger = val.match(/^\\S*/)[0];\n                    if (!snippet.name)\n                        snippet.name = val;\n                }\n                else if (key) {\n                    snippet[key] = val;\n                }\n            }\n        }\n        return list;\n    };\n    this.getSnippetByName = function (name, editor) {\n        var snippetMap = this.snippetNameMap;\n        var snippet;\n        this.getActiveScopes(editor).some(function (scope) {\n            var snippets = snippetMap[scope];\n            if (snippets)\n                snippet = snippets[name];\n            return !!snippet;\n        }, this);\n        return snippet;\n    };\n}).call(SnippetManager.prototype);\nvar TabstopManager = function (editor) {\n    if (editor.tabstopManager)\n        return editor.tabstopManager;\n    editor.tabstopManager = this;\n    this.$onChange = this.onChange.bind(this);\n    this.$onChangeSelection = lang.delayedCall(this.onChangeSelection.bind(this)).schedule;\n    this.$onChangeSession = this.onChangeSession.bind(this);\n    this.$onAfterExec = this.onAfterExec.bind(this);\n    this.attach(editor);\n};\n(function () {\n    this.attach = function (editor) {\n        this.index = 0;\n        this.ranges = [];\n        this.tabstops = [];\n        this.$openTabstops = null;\n        this.selectedTabstop = null;\n        this.editor = editor;\n        this.editor.on(\"change\", this.$onChange);\n        this.editor.on(\"changeSelection\", this.$onChangeSelection);\n        this.editor.on(\"changeSession\", this.$onChangeSession);\n        this.editor.commands.on(\"afterExec\", this.$onAfterExec);\n        this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n    };\n    this.detach = function () {\n        this.tabstops.forEach(this.removeTabstopMarkers, this);\n        this.ranges = null;\n        this.tabstops = null;\n        this.selectedTabstop = null;\n        this.editor.removeListener(\"change\", this.$onChange);\n        this.editor.removeListener(\"changeSelection\", this.$onChangeSelection);\n        this.editor.removeListener(\"changeSession\", this.$onChangeSession);\n        this.editor.commands.removeListener(\"afterExec\", this.$onAfterExec);\n        this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler);\n        this.editor.tabstopManager = null;\n        this.editor = null;\n    };\n    this.onChange = function (delta) {\n        var isRemove = delta.action[0] == \"r\";\n        var selectedTabstop = this.selectedTabstop || {};\n        var parents = selectedTabstop.parents || {};\n        var tabstops = (this.tabstops || []).slice();\n        for (var i = 0; i < tabstops.length; i++) {\n            var ts = tabstops[i];\n            var active = ts == selectedTabstop || parents[ts.index];\n            ts.rangeList.$bias = active ? 0 : 1;\n            if (delta.action == \"remove\" && ts !== selectedTabstop) {\n                var parentActive = ts.parents && ts.parents[selectedTabstop.index];\n                var startIndex = ts.rangeList.pointIndex(delta.start, parentActive);\n                startIndex = startIndex < 0 ? -startIndex - 1 : startIndex + 1;\n                var endIndex = ts.rangeList.pointIndex(delta.end, parentActive);\n                endIndex = endIndex < 0 ? -endIndex - 1 : endIndex - 1;\n                var toRemove = ts.rangeList.ranges.slice(startIndex, endIndex);\n                for (var j = 0; j < toRemove.length; j++)\n                    this.removeRange(toRemove[j]);\n            }\n            ts.rangeList.$onChange(delta);\n        }\n        var session = this.editor.session;\n        if (!this.$inChange && isRemove && session.getLength() == 1 && !session.getValue())\n            this.detach();\n    };\n    this.updateLinkedFields = function () {\n        var ts = this.selectedTabstop;\n        if (!ts || !ts.hasLinkedRanges || !ts.firstNonLinked)\n            return;\n        this.$inChange = true;\n        var session = this.editor.session;\n        var text = session.getTextRange(ts.firstNonLinked);\n        for (var i = 0; i < ts.length; i++) {\n            var range = ts[i];\n            if (!range.linked)\n                continue;\n            var original = range.original;\n            var fmt = exports.snippetManager.tmStrFormat(text, original, this.editor);\n            session.replace(range, fmt);\n        }\n        this.$inChange = false;\n    };\n    this.onAfterExec = function (e) {\n        if (e.command && !e.command.readOnly)\n            this.updateLinkedFields();\n    };\n    this.onChangeSelection = function () {\n        if (!this.editor)\n            return;\n        var lead = this.editor.selection.lead;\n        var anchor = this.editor.selection.anchor;\n        var isEmpty = this.editor.selection.isEmpty();\n        for (var i = 0; i < this.ranges.length; i++) {\n            if (this.ranges[i].linked)\n                continue;\n            var containsLead = this.ranges[i].contains(lead.row, lead.column);\n            var containsAnchor = isEmpty || this.ranges[i].contains(anchor.row, anchor.column);\n            if (containsLead && containsAnchor)\n                return;\n        }\n        this.detach();\n    };\n    this.onChangeSession = function () {\n        this.detach();\n    };\n    this.tabNext = function (dir) {\n        var max = this.tabstops.length;\n        var index = this.index + (dir || 1);\n        index = Math.min(Math.max(index, 1), max);\n        if (index == max)\n            index = 0;\n        this.selectTabstop(index);\n        if (index === 0)\n            this.detach();\n    };\n    this.selectTabstop = function (index) {\n        this.$openTabstops = null;\n        var ts = this.tabstops[this.index];\n        if (ts)\n            this.addTabstopMarkers(ts);\n        this.index = index;\n        ts = this.tabstops[this.index];\n        if (!ts || !ts.length)\n            return;\n        this.selectedTabstop = ts;\n        var range = ts.firstNonLinked || ts;\n        if (ts.choices)\n            range.cursor = range.start;\n        if (!this.editor.inVirtualSelectionMode) {\n            var sel = this.editor.multiSelect;\n            sel.toSingleRange(range);\n            for (var i = 0; i < ts.length; i++) {\n                if (ts.hasLinkedRanges && ts[i].linked)\n                    continue;\n                sel.addRange(ts[i].clone(), true);\n            }\n        }\n        else {\n            this.editor.selection.fromOrientedRange(range);\n        }\n        this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n        if (this.selectedTabstop && this.selectedTabstop.choices)\n            this.editor.execCommand(\"startAutocomplete\", { matches: this.selectedTabstop.choices });\n    };\n    this.addTabstops = function (tabstops, start, end) {\n        var useLink = this.useLink || !this.editor.getOption(\"enableMultiselect\");\n        if (!this.$openTabstops)\n            this.$openTabstops = [];\n        if (!tabstops[0]) {\n            var p = Range.fromPoints(end, end);\n            moveRelative(p.start, start);\n            moveRelative(p.end, start);\n            tabstops[0] = [p];\n            tabstops[0].index = 0;\n        }\n        var i = this.index;\n        var arg = [i + 1, 0];\n        var ranges = this.ranges;\n        tabstops.forEach(function (ts, index) {\n            var dest = this.$openTabstops[index] || ts;\n            for (var i = 0; i < ts.length; i++) {\n                var p = ts[i];\n                var range = Range.fromPoints(p.start, p.end || p.start);\n                movePoint(range.start, start);\n                movePoint(range.end, start);\n                range.original = p;\n                range.tabstop = dest;\n                ranges.push(range);\n                if (dest != ts)\n                    dest.unshift(range);\n                else\n                    dest[i] = range;\n                if (p.fmtString || (dest.firstNonLinked && useLink)) {\n                    range.linked = true;\n                    dest.hasLinkedRanges = true;\n                }\n                else if (!dest.firstNonLinked)\n                    dest.firstNonLinked = range;\n            }\n            if (!dest.firstNonLinked)\n                dest.hasLinkedRanges = false;\n            if (dest === ts) {\n                arg.push(dest);\n                this.$openTabstops[index] = dest;\n            }\n            this.addTabstopMarkers(dest);\n            dest.rangeList = dest.rangeList || new RangeList();\n            dest.rangeList.$bias = 0;\n            dest.rangeList.addList(dest);\n        }, this);\n        if (arg.length > 2) {\n            if (this.tabstops.length)\n                arg.push(arg.splice(2, 1)[0]);\n            this.tabstops.splice.apply(this.tabstops, arg);\n        }\n    };\n    this.addTabstopMarkers = function (ts) {\n        var session = this.editor.session;\n        ts.forEach(function (range) {\n            if (!range.markerId)\n                range.markerId = session.addMarker(range, \"ace_snippet-marker\", \"text\");\n        });\n    };\n    this.removeTabstopMarkers = function (ts) {\n        var session = this.editor.session;\n        ts.forEach(function (range) {\n            session.removeMarker(range.markerId);\n            range.markerId = null;\n        });\n    };\n    this.removeRange = function (range) {\n        var i = range.tabstop.indexOf(range);\n        if (i != -1)\n            range.tabstop.splice(i, 1);\n        i = this.ranges.indexOf(range);\n        if (i != -1)\n            this.ranges.splice(i, 1);\n        i = range.tabstop.rangeList.ranges.indexOf(range);\n        if (i != -1)\n            range.tabstop.splice(i, 1);\n        this.editor.session.removeMarker(range.markerId);\n        if (!range.tabstop.length) {\n            i = this.tabstops.indexOf(range.tabstop);\n            if (i != -1)\n                this.tabstops.splice(i, 1);\n            if (!this.tabstops.length)\n                this.detach();\n        }\n    };\n    this.keyboardHandler = new HashHandler();\n    this.keyboardHandler.bindKeys({\n        \"Tab\": function (editor) {\n            if (exports.snippetManager && exports.snippetManager.expandWithTab(editor))\n                return;\n            editor.tabstopManager.tabNext(1);\n            editor.renderer.scrollCursorIntoView();\n        },\n        \"Shift-Tab\": function (editor) {\n            editor.tabstopManager.tabNext(-1);\n            editor.renderer.scrollCursorIntoView();\n        },\n        \"Esc\": function (editor) {\n            editor.tabstopManager.detach();\n        }\n    });\n}).call(TabstopManager.prototype);\nvar movePoint = function (point, diff) {\n    if (point.row == 0)\n        point.column += diff.column;\n    point.row += diff.row;\n};\nvar moveRelative = function (point, start) {\n    if (point.row == start.row)\n        point.column -= start.column;\n    point.row -= start.row;\n};\ndom.importCssString(\"\\n.ace_snippet-marker {\\n    -moz-box-sizing: border-box;\\n    box-sizing: border-box;\\n    background: rgba(194, 193, 208, 0.09);\\n    border: 1px dotted rgba(211, 208, 235, 0.62);\\n    position: absolute;\\n}\", \"snippets.css\", false);\nexports.snippetManager = new SnippetManager();\nvar Editor = require(\"./editor\").Editor;\n(function () {\n    this.insertSnippet = function (content, options) {\n        return exports.snippetManager.insertSnippet(this, content, options);\n    };\n    this.expandSnippet = function (options) {\n        return exports.snippetManager.expandWithTab(this, options);\n    };\n}).call(Editor.prototype);\n\n});\n\nace.define(\"ace/ext/emmet\",[\"require\",\"exports\",\"module\",\"ace/keyboard/hash_handler\",\"ace/editor\",\"ace/snippets\",\"ace/range\",\"ace/config\",\"resources\",\"resources\",\"tabStops\",\"resources\",\"utils\",\"actions\"], function(require, exports, module){\"use strict\";\nvar HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\nvar Editor = require(\"../editor\").Editor;\nvar snippetManager = require(\"../snippets\").snippetManager;\nvar Range = require(\"../range\").Range;\nvar config = require(\"../config\");\nvar emmet, emmetPath;\nvar AceEmmetEditor = /** @class */ (function () {\n    function AceEmmetEditor() {\n    }\n    AceEmmetEditor.prototype.setupContext = function (editor) {\n        this.ace = editor;\n        this.indentation = editor.session.getTabString();\n        if (!emmet)\n            emmet = window.emmet;\n        var resources = emmet.resources || emmet.require(\"resources\");\n        resources.setVariable(\"indentation\", this.indentation);\n        this.$syntax = null;\n        this.$syntax = this.getSyntax();\n    };\n    AceEmmetEditor.prototype.getSelectionRange = function () {\n        var range = this.ace.getSelectionRange();\n        var doc = this.ace.session.doc;\n        return {\n            start: doc.positionToIndex(range.start),\n            end: doc.positionToIndex(range.end)\n        };\n    };\n    AceEmmetEditor.prototype.createSelection = function (start, end) {\n        var doc = this.ace.session.doc;\n        this.ace.selection.setRange({\n            start: doc.indexToPosition(start),\n            end: doc.indexToPosition(end)\n        });\n    };\n    AceEmmetEditor.prototype.getCurrentLineRange = function () {\n        var ace = this.ace;\n        var row = ace.getCursorPosition().row;\n        var lineLength = ace.session.getLine(row).length;\n        var index = ace.session.doc.positionToIndex({ row: row, column: 0 });\n        return {\n            start: index,\n            end: index + lineLength\n        };\n    };\n    AceEmmetEditor.prototype.getCaretPos = function () {\n        var pos = this.ace.getCursorPosition();\n        return this.ace.session.doc.positionToIndex(pos);\n    };\n    AceEmmetEditor.prototype.setCaretPos = function (index) {\n        var pos = this.ace.session.doc.indexToPosition(index);\n        this.ace.selection.moveToPosition(pos);\n    };\n    AceEmmetEditor.prototype.getCurrentLine = function () {\n        var row = this.ace.getCursorPosition().row;\n        return this.ace.session.getLine(row);\n    };\n    AceEmmetEditor.prototype.replaceContent = function (value, start, end, noIndent) {\n        if (end == null)\n            end = start == null ? this.getContent().length : start;\n        if (start == null)\n            start = 0;\n        var editor = this.ace;\n        var doc = editor.session.doc;\n        var range = Range.fromPoints(doc.indexToPosition(start), doc.indexToPosition(end));\n        editor.session.remove(range);\n        range.end = range.start;\n        value = this.$updateTabstops(value);\n        snippetManager.insertSnippet(editor, value);\n    };\n    AceEmmetEditor.prototype.getContent = function () {\n        return this.ace.getValue();\n    };\n    AceEmmetEditor.prototype.getSyntax = function () {\n        if (this.$syntax)\n            return this.$syntax;\n        var syntax = this.ace.session.$modeId.split(\"/\").pop();\n        if (syntax == \"html\" || syntax == \"php\") {\n            var cursor = this.ace.getCursorPosition();\n            var state = this.ace.session.getState(cursor.row);\n            if (typeof state != \"string\")\n                state = state[0];\n            if (state) {\n                state = state.split(\"-\");\n                if (state.length > 1)\n                    syntax = state[0];\n                else if (syntax == \"php\")\n                    syntax = \"html\";\n            }\n        }\n        return syntax;\n    };\n    AceEmmetEditor.prototype.getProfileName = function () {\n        var resources = emmet.resources || emmet.require(\"resources\");\n        switch (this.getSyntax()) {\n            case \"css\": return \"css\";\n            case \"xml\":\n            case \"xsl\":\n                return \"xml\";\n            case \"html\":\n                var profile = resources.getVariable(\"profile\");\n                if (!profile)\n                    profile = this.ace.session.getLines(0, 2).join(\"\").search(/<!DOCTYPE[^>]+XHTML/i) != -1 ? \"xhtml\" : \"html\";\n                return profile;\n            default:\n                var mode = this.ace.session.$mode;\n                return mode.emmetConfig && mode.emmetConfig.profile || \"xhtml\";\n        }\n    };\n    AceEmmetEditor.prototype.prompt = function (title) {\n        return prompt(title); // eslint-disable-line no-alert\n    };\n    AceEmmetEditor.prototype.getSelection = function () {\n        return this.ace.session.getTextRange();\n    };\n    AceEmmetEditor.prototype.getFilePath = function () {\n        return \"\";\n    };\n    AceEmmetEditor.prototype.$updateTabstops = function (value) {\n        var base = 1000;\n        var zeroBase = 0;\n        var lastZero = null;\n        var ts = emmet.tabStops || emmet.require('tabStops');\n        var resources = emmet.resources || emmet.require(\"resources\");\n        var settings = resources.getVocabulary(\"user\");\n        var tabstopOptions = {\n            tabstop: function (data) {\n                var group = parseInt(data.group, 10);\n                var isZero = group === 0;\n                if (isZero)\n                    group = ++zeroBase;\n                else\n                    group += base;\n                var placeholder = data.placeholder;\n                if (placeholder) {\n                    placeholder = ts.processText(placeholder, tabstopOptions);\n                }\n                var result = '${' + group + (placeholder ? ':' + placeholder : '') + '}';\n                if (isZero) {\n                    lastZero = [data.start, result];\n                }\n                return result;\n            },\n            escape: function (ch) {\n                if (ch == '$')\n                    return '\\\\$';\n                if (ch == '\\\\')\n                    return '\\\\\\\\';\n                return ch;\n            }\n        };\n        value = ts.processText(value, tabstopOptions);\n        if (settings.variables['insert_final_tabstop'] && !/\\$\\{0\\}$/.test(value)) {\n            value += '${0}';\n        }\n        else if (lastZero) {\n            var common = emmet.utils ? emmet.utils.common : emmet.require('utils');\n            value = common.replaceSubstring(value, '${0}', lastZero[0], lastZero[1]);\n        }\n        return value;\n    };\n    return AceEmmetEditor;\n}());\nvar keymap = {\n    expand_abbreviation: { \"mac\": \"ctrl+alt+e\", \"win\": \"alt+e\" },\n    match_pair_outward: { \"mac\": \"ctrl+d\", \"win\": \"ctrl+,\" },\n    match_pair_inward: { \"mac\": \"ctrl+j\", \"win\": \"ctrl+shift+0\" },\n    matching_pair: { \"mac\": \"ctrl+alt+j\", \"win\": \"alt+j\" },\n    next_edit_point: \"alt+right\",\n    prev_edit_point: \"alt+left\",\n    toggle_comment: { \"mac\": \"command+/\", \"win\": \"ctrl+/\" },\n    split_join_tag: { \"mac\": \"shift+command+'\", \"win\": \"shift+ctrl+`\" },\n    remove_tag: { \"mac\": \"command+'\", \"win\": \"shift+ctrl+;\" },\n    evaluate_math_expression: { \"mac\": \"shift+command+y\", \"win\": \"shift+ctrl+y\" },\n    increment_number_by_1: \"ctrl+up\",\n    decrement_number_by_1: \"ctrl+down\",\n    increment_number_by_01: \"alt+up\",\n    decrement_number_by_01: \"alt+down\",\n    increment_number_by_10: { \"mac\": \"alt+command+up\", \"win\": \"shift+alt+up\" },\n    decrement_number_by_10: { \"mac\": \"alt+command+down\", \"win\": \"shift+alt+down\" },\n    select_next_item: { \"mac\": \"shift+command+.\", \"win\": \"shift+ctrl+.\" },\n    select_previous_item: { \"mac\": \"shift+command+,\", \"win\": \"shift+ctrl+,\" },\n    reflect_css_value: { \"mac\": \"shift+command+r\", \"win\": \"shift+ctrl+r\" },\n    encode_decode_data_url: { \"mac\": \"shift+ctrl+d\", \"win\": \"ctrl+'\" },\n    expand_abbreviation_with_tab: \"Tab\",\n    wrap_with_abbreviation: { \"mac\": \"shift+ctrl+a\", \"win\": \"shift+ctrl+a\" }\n};\nvar editorProxy = new AceEmmetEditor();\nexports.commands = new HashHandler();\nexports.runEmmetCommand = function runEmmetCommand(editor) {\n    if (this.action == \"expand_abbreviation_with_tab\") {\n        if (!editor.selection.isEmpty())\n            return false;\n        var pos = editor.selection.lead;\n        var token = editor.session.getTokenAt(pos.row, pos.column);\n        if (token && /\\btag\\b/.test(token.type))\n            return false;\n    }\n    try {\n        editorProxy.setupContext(editor);\n        var actions = emmet.actions || emmet.require(\"actions\");\n        if (this.action == \"wrap_with_abbreviation\") {\n            return setTimeout(function () {\n                actions.run(\"wrap_with_abbreviation\", editorProxy);\n            }, 0);\n        }\n        var result = actions.run(this.action, editorProxy);\n    }\n    catch (e) {\n        if (!emmet) {\n            var loading = exports.load(runEmmetCommand.bind(this, editor));\n            if (this.action == \"expand_abbreviation_with_tab\")\n                return false;\n            return loading;\n        }\n        editor._signal(\"changeStatus\", typeof e == \"string\" ? e : e.message);\n        config.warn(e);\n        result = false;\n    }\n    return result;\n};\nfor (var command in keymap) {\n    exports.commands.addCommand({\n        name: \"emmet:\" + command,\n        action: command,\n        bindKey: keymap[command],\n        exec: exports.runEmmetCommand,\n        multiSelectAction: \"forEach\"\n    });\n}\nexports.updateCommands = function (editor, enabled) {\n    if (enabled) {\n        editor.keyBinding.addKeyboardHandler(exports.commands);\n    }\n    else {\n        editor.keyBinding.removeKeyboardHandler(exports.commands);\n    }\n};\nexports.isSupportedMode = function (mode) {\n    if (!mode)\n        return false;\n    if (mode.emmetConfig)\n        return true;\n    var id = mode.$id || mode;\n    return /css|less|scss|sass|stylus|html|php|twig|ejs|handlebars/.test(id);\n};\nexports.isAvailable = function (editor, command) {\n    if (/(evaluate_math_expression|expand_abbreviation)$/.test(command))\n        return true;\n    var mode = editor.session.$mode;\n    var isSupported = exports.isSupportedMode(mode);\n    if (isSupported && mode.$modes) {\n        try {\n            editorProxy.setupContext(editor);\n            if (/js|php/.test(editorProxy.getSyntax()))\n                isSupported = false;\n        }\n        catch (e) { }\n    }\n    return isSupported;\n};\nvar onChangeMode = function (e, target) {\n    var editor = target;\n    if (!editor)\n        return;\n    var enabled = exports.isSupportedMode(editor.session.$mode);\n    if (e.enableEmmet === false)\n        enabled = false;\n    if (enabled)\n        exports.load();\n    exports.updateCommands(editor, enabled);\n};\nexports.load = function (cb) {\n    if (typeof emmetPath !== \"string\") {\n        config.warn(\"script for emmet-core is not loaded\");\n        return false;\n    }\n    config.loadModule(emmetPath, function () {\n        emmetPath = null;\n        cb && cb();\n    });\n    return true;\n};\nexports.AceEmmetEditor = AceEmmetEditor;\nconfig.defineOptions(Editor.prototype, \"editor\", {\n    enableEmmet: {\n        set: function (val) {\n            this[val ? \"on\" : \"removeListener\"](\"changeMode\", onChangeMode);\n            onChangeMode({ enableEmmet: !!val }, this);\n        },\n        value: true\n    }\n});\nexports.setCore = function (e) {\n    if (typeof e == \"string\")\n        emmetPath = e;\n    else\n        emmet = e;\n};\n\n});                (function() {\n                    ace.require([\"ace/ext/emmet\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module", "ch", "p", "i", "id", "ts", "i1", "value", "AceEmmetEditor", "ace", "command"]
}
